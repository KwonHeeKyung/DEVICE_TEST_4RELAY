
ATMEGA8_4RELAY.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  000008fc  00000990  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  0080007e  0080007e  000009ae  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  000009b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  00001634  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  000017ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000100  00000000  00000000  0000188a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000e4a  00000000  00000000  0000198a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000792  00000000  00000000  000027d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001087  00000000  00000000  00002f66  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000f0  00000000  00000000  00003ff0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000384  00000000  00000000  000040e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000008a3  00000000  00000000  00004464  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000159  00000000  00000000  00004d07  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000058  00000000  00000000  00004e60  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	57 c0       	rjmp	.+174    	; 0xc6 <__vector_11>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ec ef       	ldi	r30, 0xFC	; 252
  3a:	f8 e0       	ldi	r31, 0x08	; 8
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	ae 37       	cpi	r26, 0x7E	; 126
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	ae e7       	ldi	r26, 0x7E	; 126
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a9 38       	cpi	r26, 0x89	; 137
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	71 d1       	rcall	.+738    	; 0x33c <main>
  5a:	4e c4       	rjmp	.+2204   	; 0x8f8 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <USART_putchar>:
	return 0;
}

static int USART_putchar(char c, FILE *stream)
{
	if(c == '\n')
  5e:	8a 30       	cpi	r24, 0x0A	; 10
  60:	41 f4       	brne	.+16     	; 0x72 <USART_putchar+0x14>
	{   loop_until_bit_is_set(UCSRA,UDRE);
  62:	5d 9b       	sbis	0x0b, 5	; 11
  64:	fe cf       	rjmp	.-4      	; 0x62 <USART_putchar+0x4>
		UDR = 0x0D;
  66:	8d e0       	ldi	r24, 0x0D	; 13
  68:	8c b9       	out	0x0c, r24	; 12
		loop_until_bit_is_set(UCSRA,UDRE);
  6a:	5d 9b       	sbis	0x0b, 5	; 11
  6c:	fe cf       	rjmp	.-4      	; 0x6a <USART_putchar+0xc>
		UDR = 0x0A;
  6e:	8a e0       	ldi	r24, 0x0A	; 10
  70:	02 c0       	rjmp	.+4      	; 0x76 <USART_putchar+0x18>
	}
	else
	{  loop_until_bit_is_set(UCSRA,UDRE);
  72:	5d 9b       	sbis	0x0b, 5	; 11
  74:	fe cf       	rjmp	.-4      	; 0x72 <USART_putchar+0x14>
		UDR = c;
  76:	8c b9       	out	0x0c, r24	; 12
	}
	return 0;

}
  78:	80 e0       	ldi	r24, 0x00	; 0
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	08 95       	ret

0000007e <setup>:

volatile unsigned char RX_BUF[1], Relay[2], Test, p;

void setup() {
	
	cli();
  7e:	f8 94       	cli

	//UART
	// 8MHz 38400
	//UBRRL = 12;
	UBRRL = 51; // 9600 bps
  80:	83 e3       	ldi	r24, 0x33	; 51
  82:	89 b9       	out	0x09, r24	; 9

	DDRB = (0 << PB2) | (1 << PB1) | (1 << PB0); // PB2 : 자석2, PB1: 전원제어2 , PB0: 전원제어1
  84:	83 e0       	ldi	r24, 0x03	; 3
  86:	87 bb       	out	0x17, r24	; 23
	DDRC = (1 << PC3) | (1 << PC2) | (0 << PC0); // PC3: 데드볼트2, PC2: 데드볼트1, PC0: 자석1
  88:	8c e0       	ldi	r24, 0x0C	; 12
  8a:	84 bb       	out	0x14, r24	; 20
	DDRD = (1 << PD1) | (0 << PD0); //UART
  8c:	82 e0       	ldi	r24, 0x02	; 2
  8e:	81 bb       	out	0x11, r24	; 17
	
	PORTC = (1 << PC0); // 자석1 풀업 저항
  90:	81 e0       	ldi	r24, 0x01	; 1
  92:	85 bb       	out	0x15, r24	; 21
	PORTB = (1 << PB2); // 자석2 풀업 저항
  94:	94 e0       	ldi	r25, 0x04	; 4
  96:	98 bb       	out	0x18, r25	; 24

	UCSRB = (1 << RXCIE) | (1 << RXEN) | (1 << TXEN);
  98:	98 e9       	ldi	r25, 0x98	; 152
  9a:	9a b9       	out	0x0a, r25	; 10

	Relay[0] = 1;
  9c:	80 93 81 00 	sts	0x0081, r24
	Relay[1] = 1;
  a0:	80 93 82 00 	sts	0x0082, r24

	Test = 0;
  a4:	10 92 7f 00 	sts	0x007F, r1
	p=0;
  a8:	10 92 7e 00 	sts	0x007E, r1

	//전원 High
	sbi(PORTB, 0);
  ac:	c0 9a       	sbi	0x18, 0	; 24
	sbi(PORTB, 1);
  ae:	c1 9a       	sbi	0x18, 1	; 24

	//데드볼트 High
	sbi(PORTC, 2);
  b0:	aa 9a       	sbi	0x15, 2	; 21
	sbi(PORTC, 3);
  b2:	ab 9a       	sbi	0x15, 3	; 21

	//상태체크 LED
	sbi(PORTC, 5);
  b4:	ad 9a       	sbi	0x15, 5	; 21

	stdout = &device;
  b6:	80 e7       	ldi	r24, 0x70	; 112
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	90 93 86 00 	sts	0x0086, r25
  be:	80 93 85 00 	sts	0x0085, r24

	sei();
  c2:	78 94       	sei

}
  c4:	08 95       	ret

000000c6 <__vector_11>:

ISR(SIG_UART_RECV)
{
  c6:	1f 92       	push	r1
  c8:	0f 92       	push	r0
  ca:	0f b6       	in	r0, 0x3f	; 63
  cc:	0f 92       	push	r0
  ce:	11 24       	eor	r1, r1
  d0:	8f 93       	push	r24
  d2:	9f 93       	push	r25
  d4:	af 93       	push	r26
  d6:	bf 93       	push	r27
	cli();
  d8:	f8 94       	cli

	while((UCSRA &(1<<RXC)) == 0);
  da:	5f 9b       	sbis	0x0b, 7	; 11
  dc:	fe cf       	rjmp	.-4      	; 0xda <__vector_11+0x14>
	
	RX_BUF[0] = UDR;
  de:	8c b1       	in	r24, 0x0c	; 12
  e0:	80 93 80 00 	sts	0x0080, r24

	if(RX_BUF[0] == '1') // 1번문 열기
  e4:	80 91 80 00 	lds	r24, 0x0080
  e8:	81 33       	cpi	r24, 0x31	; 49
  ea:	51 f4       	brne	.+20     	; 0x100 <__vector_11+0x3a>
	{
		if(Test == 1)
  ec:	80 91 7f 00 	lds	r24, 0x007F
  f0:	81 30       	cpi	r24, 0x01	; 1
  f2:	11 f4       	brne	.+4      	; 0xf8 <__vector_11+0x32>
		{
			cbi(PORTC,2);
  f4:	aa 98       	cbi	0x15, 2	; 21
  f6:	4d c0       	rjmp	.+154    	; 0x192 <__vector_11+0xcc>
		}
		else
		{
			cbi(PORTC,2);
  f8:	aa 98       	cbi	0x15, 2	; 21
			Relay[0] = 0;
  fa:	10 92 81 00 	sts	0x0081, r1
  fe:	0d c0       	rjmp	.+26     	; 0x11a <__vector_11+0x54>
			_delay_ms(5000);
		}
	}
	else if(RX_BUF[0] == '3') // 2번문 열기
 100:	80 91 80 00 	lds	r24, 0x0080
 104:	83 33       	cpi	r24, 0x33	; 51
 106:	99 f4       	brne	.+38     	; 0x12e <__vector_11+0x68>
	{
		if(Test == 1)
 108:	80 91 7f 00 	lds	r24, 0x007F
 10c:	81 30       	cpi	r24, 0x01	; 1
 10e:	11 f4       	brne	.+4      	; 0x114 <__vector_11+0x4e>
		{
			cbi(PORTC,3);
 110:	ab 98       	cbi	0x15, 3	; 21
 112:	3f c0       	rjmp	.+126    	; 0x192 <__vector_11+0xcc>
		}
		else
		{
			cbi(PORTC,3);
 114:	ab 98       	cbi	0x15, 3	; 21
			Relay[1] = 0;
 116:	10 92 82 00 	sts	0x0082, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11a:	8f ef       	ldi	r24, 0xFF	; 255
 11c:	91 e1       	ldi	r25, 0x11	; 17
 11e:	aa e7       	ldi	r26, 0x7A	; 122
 120:	81 50       	subi	r24, 0x01	; 1
 122:	90 40       	sbci	r25, 0x00	; 0
 124:	a0 40       	sbci	r26, 0x00	; 0
 126:	e1 f7       	brne	.-8      	; 0x120 <__vector_11+0x5a>
 128:	00 c0       	rjmp	.+0      	; 0x12a <__vector_11+0x64>
 12a:	00 00       	nop
 12c:	32 c0       	rjmp	.+100    	; 0x192 <__vector_11+0xcc>
			_delay_ms(5000);
		}
	}
	else if(RX_BUF[0] == '4') // 1번문 닫기
 12e:	80 91 80 00 	lds	r24, 0x0080
 132:	84 33       	cpi	r24, 0x34	; 52
 134:	11 f4       	brne	.+4      	; 0x13a <__vector_11+0x74>
	{	
		sbi(PORTC,2);
 136:	aa 9a       	sbi	0x15, 2	; 21
 138:	2c c0       	rjmp	.+88     	; 0x192 <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '5') // 2번문 닫기
 13a:	80 91 80 00 	lds	r24, 0x0080
 13e:	85 33       	cpi	r24, 0x35	; 53
 140:	11 f4       	brne	.+4      	; 0x146 <__vector_11+0x80>
	{
		sbi(PORTC,3);
 142:	ab 9a       	sbi	0x15, 3	; 21
 144:	26 c0       	rjmp	.+76     	; 0x192 <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '6') // 1번 전원 제어 (NC)
 146:	80 91 80 00 	lds	r24, 0x0080
 14a:	86 33       	cpi	r24, 0x36	; 54
 14c:	11 f4       	brne	.+4      	; 0x152 <__vector_11+0x8c>
	{
		sbi(PORTB,0);
 14e:	c0 9a       	sbi	0x18, 0	; 24
 150:	20 c0       	rjmp	.+64     	; 0x192 <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '7') // 1번 전원 제어 (NO)
 152:	80 91 80 00 	lds	r24, 0x0080
 156:	87 33       	cpi	r24, 0x37	; 55
 158:	11 f4       	brne	.+4      	; 0x15e <__vector_11+0x98>
	{
		cbi(PORTB,0);
 15a:	c0 98       	cbi	0x18, 0	; 24
 15c:	1a c0       	rjmp	.+52     	; 0x192 <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '8') // 2번 전원 제어 (NC)
 15e:	80 91 80 00 	lds	r24, 0x0080
 162:	88 33       	cpi	r24, 0x38	; 56
 164:	11 f4       	brne	.+4      	; 0x16a <__vector_11+0xa4>
	{
		sbi(PORTB,1);
 166:	c1 9a       	sbi	0x18, 1	; 24
 168:	14 c0       	rjmp	.+40     	; 0x192 <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '9') // 2번 전원 제어 (NO)
 16a:	80 91 80 00 	lds	r24, 0x0080
 16e:	89 33       	cpi	r24, 0x39	; 57
 170:	11 f4       	brne	.+4      	; 0x176 <__vector_11+0xb0>
	{
		cbi(PORTB,1);
 172:	c1 98       	cbi	0x18, 1	; 24
 174:	0e c0       	rjmp	.+28     	; 0x192 <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == 'T') 
 176:	80 91 80 00 	lds	r24, 0x0080
 17a:	84 35       	cpi	r24, 0x54	; 84
 17c:	21 f4       	brne	.+8      	; 0x186 <__vector_11+0xc0>
	{
		Test = 1;  // set test mode
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	80 93 7f 00 	sts	0x007F, r24
 184:	06 c0       	rjmp	.+12     	; 0x192 <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == 'F') 
 186:	80 91 80 00 	lds	r24, 0x0080
 18a:	86 34       	cpi	r24, 0x46	; 70
 18c:	11 f4       	brne	.+4      	; 0x192 <__vector_11+0xcc>
	{
		Test = 0;  // end test mode
 18e:	10 92 7f 00 	sts	0x007F, r1
	}

	sei();
 192:	78 94       	sei
}
 194:	bf 91       	pop	r27
 196:	af 91       	pop	r26
 198:	9f 91       	pop	r25
 19a:	8f 91       	pop	r24
 19c:	0f 90       	pop	r0
 19e:	0f be       	out	0x3f, r0	; 63
 1a0:	0f 90       	pop	r0
 1a2:	1f 90       	pop	r1
 1a4:	18 95       	reti

000001a6 <tillend>:

void tillend(int x, char d)
{
 1a6:	ac 01       	movw	r20, r24
	int a = 0;
 1a8:	20 e0       	ldi	r18, 0x00	; 0
 1aa:	30 e0       	ldi	r19, 0x00	; 0
	do{
		if(d == 'l')
 1ac:	6c 36       	cpi	r22, 0x6C	; 108
 1ae:	61 f4       	brne	.+24     	; 0x1c8 <tillend+0x22>
		{
			cbi(PORTC,2);
 1b0:	aa 98       	cbi	0x15, 2	; 21
 1b2:	8f ef       	ldi	r24, 0xFF	; 255
 1b4:	9e e9       	ldi	r25, 0x9E	; 158
 1b6:	a4 e2       	ldi	r26, 0x24	; 36
 1b8:	81 50       	subi	r24, 0x01	; 1
 1ba:	90 40       	sbci	r25, 0x00	; 0
 1bc:	a0 40       	sbci	r26, 0x00	; 0
 1be:	e1 f7       	brne	.-8      	; 0x1b8 <tillend+0x12>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <tillend+0x1c>
 1c2:	00 00       	nop
			_delay_ms(1500);
			sbi(PORTC,2);
 1c4:	aa 9a       	sbi	0x15, 2	; 21
 1c6:	0d c0       	rjmp	.+26     	; 0x1e2 <tillend+0x3c>
			_delay_ms(1500);
		}
		else if(d == 'r')
 1c8:	62 37       	cpi	r22, 0x72	; 114
 1ca:	a1 f4       	brne	.+40     	; 0x1f4 <tillend+0x4e>
		{
			cbi(PORTC,3);
 1cc:	ab 98       	cbi	0x15, 3	; 21
 1ce:	8f ef       	ldi	r24, 0xFF	; 255
 1d0:	9e e9       	ldi	r25, 0x9E	; 158
 1d2:	a4 e2       	ldi	r26, 0x24	; 36
 1d4:	81 50       	subi	r24, 0x01	; 1
 1d6:	90 40       	sbci	r25, 0x00	; 0
 1d8:	a0 40       	sbci	r26, 0x00	; 0
 1da:	e1 f7       	brne	.-8      	; 0x1d4 <tillend+0x2e>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <tillend+0x38>
 1de:	00 00       	nop
			_delay_ms(1500);
			sbi(PORTC,3);
 1e0:	ab 9a       	sbi	0x15, 3	; 21
 1e2:	8f ef       	ldi	r24, 0xFF	; 255
 1e4:	9e e9       	ldi	r25, 0x9E	; 158
 1e6:	a4 e2       	ldi	r26, 0x24	; 36
 1e8:	81 50       	subi	r24, 0x01	; 1
 1ea:	90 40       	sbci	r25, 0x00	; 0
 1ec:	a0 40       	sbci	r26, 0x00	; 0
 1ee:	e1 f7       	brne	.-8      	; 0x1e8 <tillend+0x42>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <tillend+0x4c>
 1f2:	00 00       	nop
			_delay_ms(1500);
		}
		a++;
 1f4:	2f 5f       	subi	r18, 0xFF	; 255
 1f6:	3f 4f       	sbci	r19, 0xFF	; 255
		
	}while(a <= x);
 1f8:	42 17       	cp	r20, r18
 1fa:	53 07       	cpc	r21, r19
 1fc:	bc f6       	brge	.-82     	; 0x1ac <tillend+0x6>

}
 1fe:	08 95       	ret

00000200 <loop>:

void loop(){

	if(Test == 0)
 200:	80 91 7f 00 	lds	r24, 0x007F
 204:	88 23       	and	r24, r24
 206:	09 f0       	breq	.+2      	; 0x20a <loop+0xa>
 208:	67 c0       	rjmp	.+206    	; 0x2d8 <loop+0xd8>
	{
		if(Relay[0] == 0)
 20a:	80 91 81 00 	lds	r24, 0x0081
 20e:	88 23       	and	r24, r24
 210:	49 f4       	brne	.+18     	; 0x224 <loop+0x24>
		{
			if(!(PINC&0x01))
 212:	98 99       	sbic	0x13, 0	; 19
 214:	07 c0       	rjmp	.+14     	; 0x224 <loop+0x24>
			{
				printf("0");
 216:	80 e3       	ldi	r24, 0x30	; 48
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	b9 d0       	rcall	.+370    	; 0x38e <putchar>
				sbi(PORTC,2);
 21c:	aa 9a       	sbi	0x15, 2	; 21
				Relay[0] = 1;
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	80 93 81 00 	sts	0x0081, r24
			}
		}

		if(Relay[1] == 0)
 224:	80 91 82 00 	lds	r24, 0x0082
 228:	88 23       	and	r24, r24
 22a:	49 f4       	brne	.+18     	; 0x23e <loop+0x3e>
		{
			if(!(PINB&0x04))
 22c:	b2 99       	sbic	0x16, 2	; 22
 22e:	07 c0       	rjmp	.+14     	; 0x23e <loop+0x3e>
			{
				printf("0");
 230:	80 e3       	ldi	r24, 0x30	; 48
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	ac d0       	rcall	.+344    	; 0x38e <putchar>
				sbi(PORTC,3);
 236:	ab 9a       	sbi	0x15, 3	; 21
				Relay[1] = 1;
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	80 93 82 00 	sts	0x0082, r24
			}
		}

		if(Relay[0] == 1)
 23e:	80 91 81 00 	lds	r24, 0x0081
 242:	81 30       	cpi	r24, 0x01	; 1
 244:	49 f4       	brne	.+18     	; 0x258 <loop+0x58>
		{
			if(PINC&0x01)
 246:	98 9b       	sbis	0x13, 0	; 19
 248:	07 c0       	rjmp	.+14     	; 0x258 <loop+0x58>
			{
				tillend(3,'l');
 24a:	83 e0       	ldi	r24, 0x03	; 3
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	6c e6       	ldi	r22, 0x6C	; 108
 250:	aa df       	rcall	.-172    	; 0x1a6 <tillend>
				p=2;
 252:	82 e0       	ldi	r24, 0x02	; 2
 254:	80 93 7e 00 	sts	0x007E, r24
			}
		}
		if(Relay[1] == 1)
 258:	80 91 82 00 	lds	r24, 0x0082
 25c:	81 30       	cpi	r24, 0x01	; 1
 25e:	49 f4       	brne	.+18     	; 0x272 <loop+0x72>
		{
			if(PINB&0x04)
 260:	b2 9b       	sbis	0x16, 2	; 22
 262:	07 c0       	rjmp	.+14     	; 0x272 <loop+0x72>
			{
				tillend(3,'r');
 264:	83 e0       	ldi	r24, 0x03	; 3
 266:	90 e0       	ldi	r25, 0x00	; 0
 268:	62 e7       	ldi	r22, 0x72	; 114
 26a:	9d df       	rcall	.-198    	; 0x1a6 <tillend>
				p=2;
 26c:	82 e0       	ldi	r24, 0x02	; 2
 26e:	80 93 7e 00 	sts	0x007E, r24
			}
		}

		if((p==2) && (PINC&0x01) && (Relay[0] == 1))
 272:	80 91 7e 00 	lds	r24, 0x007E
 276:	82 30       	cpi	r24, 0x02	; 2
 278:	31 f4       	brne	.+12     	; 0x286 <loop+0x86>
 27a:	98 9b       	sbis	0x13, 0	; 19
 27c:	04 c0       	rjmp	.+8      	; 0x286 <loop+0x86>
 27e:	80 91 81 00 	lds	r24, 0x0081
 282:	81 30       	cpi	r24, 0x01	; 1
 284:	51 f0       	breq	.+20     	; 0x29a <loop+0x9a>
		{
			printf("2");
		}

		else if((p==2) && (PINB&0x04) && (Relay[1] == 1))
 286:	80 91 7e 00 	lds	r24, 0x007E
 28a:	82 30       	cpi	r24, 0x02	; 2
 28c:	49 f4       	brne	.+18     	; 0x2a0 <loop+0xa0>
 28e:	b2 9b       	sbis	0x16, 2	; 22
 290:	07 c0       	rjmp	.+14     	; 0x2a0 <loop+0xa0>
 292:	80 91 82 00 	lds	r24, 0x0082
 296:	81 30       	cpi	r24, 0x01	; 1
 298:	19 f4       	brne	.+6      	; 0x2a0 <loop+0xa0>
		{
			printf("2");
 29a:	82 e3       	ldi	r24, 0x32	; 50
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	77 d0       	rcall	.+238    	; 0x38e <putchar>
		}

		if( ((p==2) && (!(PINC&0x01)) && (Relay[0] == 1)) && ((p==2) && (!(PINB&0x04)) && (Relay[1] == 1)) )
 2a0:	80 91 7e 00 	lds	r24, 0x007E
 2a4:	82 30       	cpi	r24, 0x02	; 2
 2a6:	09 f0       	breq	.+2      	; 0x2aa <loop+0xaa>
 2a8:	48 c0       	rjmp	.+144    	; 0x33a <loop+0x13a>
 2aa:	98 99       	sbic	0x13, 0	; 19
 2ac:	46 c0       	rjmp	.+140    	; 0x33a <loop+0x13a>
 2ae:	80 91 81 00 	lds	r24, 0x0081
 2b2:	81 30       	cpi	r24, 0x01	; 1
 2b4:	09 f0       	breq	.+2      	; 0x2b8 <loop+0xb8>
 2b6:	41 c0       	rjmp	.+130    	; 0x33a <loop+0x13a>
 2b8:	80 91 7e 00 	lds	r24, 0x007E
 2bc:	82 30       	cpi	r24, 0x02	; 2
 2be:	e9 f5       	brne	.+122    	; 0x33a <loop+0x13a>
 2c0:	b2 99       	sbic	0x16, 2	; 22
 2c2:	3b c0       	rjmp	.+118    	; 0x33a <loop+0x13a>
 2c4:	80 91 82 00 	lds	r24, 0x0082
 2c8:	81 30       	cpi	r24, 0x01	; 1
 2ca:	b9 f5       	brne	.+110    	; 0x33a <loop+0x13a>
		{
			printf("r");
 2cc:	82 e7       	ldi	r24, 0x72	; 114
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	5e d0       	rcall	.+188    	; 0x38e <putchar>
			p=0;
 2d2:	10 92 7e 00 	sts	0x007E, r1
 2d6:	08 95       	ret
		}
		
	}
	else if(Test == 1) // 테스트모드
 2d8:	80 91 7f 00 	lds	r24, 0x007F
 2dc:	81 30       	cpi	r24, 0x01	; 1
 2de:	69 f5       	brne	.+90     	; 0x33a <loop+0x13a>
	{
		
		if(((PINC&0x01) != 0x01) && ((PINB&0x04) != 0x04))
 2e0:	98 99       	sbic	0x13, 0	; 19
 2e2:	06 c0       	rjmp	.+12     	; 0x2f0 <loop+0xf0>
 2e4:	b2 99       	sbic	0x16, 2	; 22
 2e6:	04 c0       	rjmp	.+8      	; 0x2f0 <loop+0xf0>
		{
			printf("c,c");
 2e8:	00 d0       	rcall	.+0      	; 0x2ea <loop+0xea>
 2ea:	80 e6       	ldi	r24, 0x60	; 96
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	0f c0       	rjmp	.+30     	; 0x30e <loop+0x10e>
		
		}
		else if(((PINC&0x01) != 0x01) &&((PINB&0x04) == 0x04))
 2f0:	98 99       	sbic	0x13, 0	; 19
 2f2:	06 c0       	rjmp	.+12     	; 0x300 <loop+0x100>
 2f4:	b2 9b       	sbis	0x16, 2	; 22
 2f6:	04 c0       	rjmp	.+8      	; 0x300 <loop+0x100>
		{
			printf("c,o");
 2f8:	00 d0       	rcall	.+0      	; 0x2fa <loop+0xfa>
 2fa:	84 e6       	ldi	r24, 0x64	; 100
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	07 c0       	rjmp	.+14     	; 0x30e <loop+0x10e>
		
		}
		else if(((PINC&0x01) == 0x01) && ((PINB&0x04) != 0x04))
 300:	98 9b       	sbis	0x13, 0	; 19
 302:	0d c0       	rjmp	.+26     	; 0x31e <loop+0x11e>
 304:	b2 99       	sbic	0x16, 2	; 22
 306:	0b c0       	rjmp	.+22     	; 0x31e <loop+0x11e>
		{
			printf("o,c");
 308:	00 d0       	rcall	.+0      	; 0x30a <loop+0x10a>
 30a:	88 e6       	ldi	r24, 0x68	; 104
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	ed b7       	in	r30, 0x3d	; 61
 310:	fe b7       	in	r31, 0x3e	; 62
 312:	92 83       	std	Z+2, r25	; 0x02
 314:	81 83       	std	Z+1, r24	; 0x01
 316:	29 d0       	rcall	.+82     	; 0x36a <printf>
 318:	0f 90       	pop	r0
 31a:	0f 90       	pop	r0
 31c:	08 95       	ret
		
		}
		else if(((PINC&0x01) == 0x01) && ((PINB&0x04) == 0x04))
 31e:	98 9b       	sbis	0x13, 0	; 19
 320:	0c c0       	rjmp	.+24     	; 0x33a <loop+0x13a>
 322:	b2 9b       	sbis	0x16, 2	; 22
 324:	0a c0       	rjmp	.+20     	; 0x33a <loop+0x13a>
		{
			printf("o,o");
 326:	00 d0       	rcall	.+0      	; 0x328 <loop+0x128>
 328:	8c e6       	ldi	r24, 0x6C	; 108
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	ed b7       	in	r30, 0x3d	; 61
 32e:	fe b7       	in	r31, 0x3e	; 62
 330:	92 83       	std	Z+2, r25	; 0x02
 332:	81 83       	std	Z+1, r24	; 0x01
 334:	1a d0       	rcall	.+52     	; 0x36a <printf>
 336:	0f 90       	pop	r0
 338:	0f 90       	pop	r0
 33a:	08 95       	ret

0000033c <main>:
}

int main(void)
{
	//프로그램 업데이트되면 LED ON, OFF
	sbi(PORTC, 4);
 33c:	ac 9a       	sbi	0x15, 4	; 21
 33e:	8f ef       	ldi	r24, 0xFF	; 255
 340:	92 e5       	ldi	r25, 0x52	; 82
 342:	a7 e0       	ldi	r26, 0x07	; 7
 344:	81 50       	subi	r24, 0x01	; 1
 346:	90 40       	sbci	r25, 0x00	; 0
 348:	a0 40       	sbci	r26, 0x00	; 0
 34a:	e1 f7       	brne	.-8      	; 0x344 <main+0x8>
 34c:	00 c0       	rjmp	.+0      	; 0x34e <main+0x12>
 34e:	00 00       	nop
	_delay_ms(300);
	cbi(PORTC, 4);	
 350:	ac 98       	cbi	0x15, 4	; 21

    setup();
 352:	95 de       	rcall	.-726    	; 0x7e <setup>
	
    while (1) 
    {
		loop();
 354:	55 df       	rcall	.-342    	; 0x200 <loop>
 356:	8f ef       	ldi	r24, 0xFF	; 255
 358:	99 e6       	ldi	r25, 0x69	; 105
 35a:	a8 e1       	ldi	r26, 0x18	; 24
 35c:	81 50       	subi	r24, 0x01	; 1
 35e:	90 40       	sbci	r25, 0x00	; 0
 360:	a0 40       	sbci	r26, 0x00	; 0
 362:	e1 f7       	brne	.-8      	; 0x35c <main+0x20>
 364:	00 c0       	rjmp	.+0      	; 0x366 <main+0x2a>
 366:	00 00       	nop
 368:	f5 cf       	rjmp	.-22     	; 0x354 <main+0x18>

0000036a <printf>:
 36a:	a0 e0       	ldi	r26, 0x00	; 0
 36c:	b0 e0       	ldi	r27, 0x00	; 0
 36e:	ea eb       	ldi	r30, 0xBA	; 186
 370:	f1 e0       	ldi	r31, 0x01	; 1
 372:	9b c2       	rjmp	.+1334   	; 0x8aa <__prologue_saves__+0x20>
 374:	fe 01       	movw	r30, r28
 376:	35 96       	adiw	r30, 0x05	; 5
 378:	61 91       	ld	r22, Z+
 37a:	71 91       	ld	r23, Z+
 37c:	80 91 85 00 	lds	r24, 0x0085
 380:	90 91 86 00 	lds	r25, 0x0086
 384:	af 01       	movw	r20, r30
 386:	09 d0       	rcall	.+18     	; 0x39a <vfprintf>
 388:	20 96       	adiw	r28, 0x00	; 0
 38a:	e2 e0       	ldi	r30, 0x02	; 2
 38c:	aa c2       	rjmp	.+1364   	; 0x8e2 <__epilogue_restores__+0x20>

0000038e <putchar>:
 38e:	60 91 85 00 	lds	r22, 0x0085
 392:	70 91 86 00 	lds	r23, 0x0086
 396:	ef d1       	rcall	.+990    	; 0x776 <fputc>
 398:	08 95       	ret

0000039a <vfprintf>:
 39a:	ac e0       	ldi	r26, 0x0C	; 12
 39c:	b0 e0       	ldi	r27, 0x00	; 0
 39e:	e2 ed       	ldi	r30, 0xD2	; 210
 3a0:	f1 e0       	ldi	r31, 0x01	; 1
 3a2:	73 c2       	rjmp	.+1254   	; 0x88a <__prologue_saves__>
 3a4:	6c 01       	movw	r12, r24
 3a6:	1b 01       	movw	r2, r22
 3a8:	8a 01       	movw	r16, r20
 3aa:	fc 01       	movw	r30, r24
 3ac:	17 82       	std	Z+7, r1	; 0x07
 3ae:	16 82       	std	Z+6, r1	; 0x06
 3b0:	83 81       	ldd	r24, Z+3	; 0x03
 3b2:	81 ff       	sbrs	r24, 1
 3b4:	c4 c1       	rjmp	.+904    	; 0x73e <__stack+0x2df>
 3b6:	2e 01       	movw	r4, r28
 3b8:	08 94       	sec
 3ba:	41 1c       	adc	r4, r1
 3bc:	51 1c       	adc	r5, r1
 3be:	f6 01       	movw	r30, r12
 3c0:	93 81       	ldd	r25, Z+3	; 0x03
 3c2:	f1 01       	movw	r30, r2
 3c4:	93 fd       	sbrc	r25, 3
 3c6:	85 91       	lpm	r24, Z+
 3c8:	93 ff       	sbrs	r25, 3
 3ca:	81 91       	ld	r24, Z+
 3cc:	1f 01       	movw	r2, r30
 3ce:	88 23       	and	r24, r24
 3d0:	09 f4       	brne	.+2      	; 0x3d4 <vfprintf+0x3a>
 3d2:	b1 c1       	rjmp	.+866    	; 0x736 <__stack+0x2d7>
 3d4:	85 32       	cpi	r24, 0x25	; 37
 3d6:	39 f4       	brne	.+14     	; 0x3e6 <vfprintf+0x4c>
 3d8:	93 fd       	sbrc	r25, 3
 3da:	85 91       	lpm	r24, Z+
 3dc:	93 ff       	sbrs	r25, 3
 3de:	81 91       	ld	r24, Z+
 3e0:	1f 01       	movw	r2, r30
 3e2:	85 32       	cpi	r24, 0x25	; 37
 3e4:	21 f4       	brne	.+8      	; 0x3ee <vfprintf+0x54>
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	b6 01       	movw	r22, r12
 3ea:	c5 d1       	rcall	.+906    	; 0x776 <fputc>
 3ec:	e8 cf       	rjmp	.-48     	; 0x3be <vfprintf+0x24>
 3ee:	ee 24       	eor	r14, r14
 3f0:	ff 24       	eor	r15, r15
 3f2:	20 e0       	ldi	r18, 0x00	; 0
 3f4:	20 32       	cpi	r18, 0x20	; 32
 3f6:	b0 f4       	brcc	.+44     	; 0x424 <vfprintf+0x8a>
 3f8:	8b 32       	cpi	r24, 0x2B	; 43
 3fa:	69 f0       	breq	.+26     	; 0x416 <vfprintf+0x7c>
 3fc:	8c 32       	cpi	r24, 0x2C	; 44
 3fe:	28 f4       	brcc	.+10     	; 0x40a <vfprintf+0x70>
 400:	80 32       	cpi	r24, 0x20	; 32
 402:	51 f0       	breq	.+20     	; 0x418 <vfprintf+0x7e>
 404:	83 32       	cpi	r24, 0x23	; 35
 406:	71 f4       	brne	.+28     	; 0x424 <vfprintf+0x8a>
 408:	0b c0       	rjmp	.+22     	; 0x420 <vfprintf+0x86>
 40a:	8d 32       	cpi	r24, 0x2D	; 45
 40c:	39 f0       	breq	.+14     	; 0x41c <vfprintf+0x82>
 40e:	80 33       	cpi	r24, 0x30	; 48
 410:	49 f4       	brne	.+18     	; 0x424 <vfprintf+0x8a>
 412:	21 60       	ori	r18, 0x01	; 1
 414:	2c c0       	rjmp	.+88     	; 0x46e <__stack+0xf>
 416:	22 60       	ori	r18, 0x02	; 2
 418:	24 60       	ori	r18, 0x04	; 4
 41a:	29 c0       	rjmp	.+82     	; 0x46e <__stack+0xf>
 41c:	28 60       	ori	r18, 0x08	; 8
 41e:	27 c0       	rjmp	.+78     	; 0x46e <__stack+0xf>
 420:	20 61       	ori	r18, 0x10	; 16
 422:	25 c0       	rjmp	.+74     	; 0x46e <__stack+0xf>
 424:	27 fd       	sbrc	r18, 7
 426:	2c c0       	rjmp	.+88     	; 0x480 <__stack+0x21>
 428:	38 2f       	mov	r19, r24
 42a:	30 53       	subi	r19, 0x30	; 48
 42c:	3a 30       	cpi	r19, 0x0A	; 10
 42e:	98 f4       	brcc	.+38     	; 0x456 <vfprintf+0xbc>
 430:	26 ff       	sbrs	r18, 6
 432:	08 c0       	rjmp	.+16     	; 0x444 <vfprintf+0xaa>
 434:	8e 2d       	mov	r24, r14
 436:	88 0f       	add	r24, r24
 438:	e8 2e       	mov	r14, r24
 43a:	ee 0c       	add	r14, r14
 43c:	ee 0c       	add	r14, r14
 43e:	e8 0e       	add	r14, r24
 440:	e3 0e       	add	r14, r19
 442:	15 c0       	rjmp	.+42     	; 0x46e <__stack+0xf>
 444:	8f 2d       	mov	r24, r15
 446:	88 0f       	add	r24, r24
 448:	f8 2e       	mov	r15, r24
 44a:	ff 0c       	add	r15, r15
 44c:	ff 0c       	add	r15, r15
 44e:	f8 0e       	add	r15, r24
 450:	f3 0e       	add	r15, r19
 452:	20 62       	ori	r18, 0x20	; 32
 454:	0c c0       	rjmp	.+24     	; 0x46e <__stack+0xf>
 456:	8e 32       	cpi	r24, 0x2E	; 46
 458:	21 f4       	brne	.+8      	; 0x462 <__stack+0x3>
 45a:	26 fd       	sbrc	r18, 6
 45c:	6c c1       	rjmp	.+728    	; 0x736 <__stack+0x2d7>
 45e:	20 64       	ori	r18, 0x40	; 64
 460:	06 c0       	rjmp	.+12     	; 0x46e <__stack+0xf>
 462:	8c 36       	cpi	r24, 0x6C	; 108
 464:	11 f4       	brne	.+4      	; 0x46a <__stack+0xb>
 466:	20 68       	ori	r18, 0x80	; 128
 468:	02 c0       	rjmp	.+4      	; 0x46e <__stack+0xf>
 46a:	88 36       	cpi	r24, 0x68	; 104
 46c:	49 f4       	brne	.+18     	; 0x480 <__stack+0x21>
 46e:	f1 01       	movw	r30, r2
 470:	93 fd       	sbrc	r25, 3
 472:	85 91       	lpm	r24, Z+
 474:	93 ff       	sbrs	r25, 3
 476:	81 91       	ld	r24, Z+
 478:	1f 01       	movw	r2, r30
 47a:	88 23       	and	r24, r24
 47c:	09 f0       	breq	.+2      	; 0x480 <__stack+0x21>
 47e:	ba cf       	rjmp	.-140    	; 0x3f4 <vfprintf+0x5a>
 480:	98 2f       	mov	r25, r24
 482:	95 54       	subi	r25, 0x45	; 69
 484:	93 30       	cpi	r25, 0x03	; 3
 486:	18 f0       	brcs	.+6      	; 0x48e <__stack+0x2f>
 488:	90 52       	subi	r25, 0x20	; 32
 48a:	93 30       	cpi	r25, 0x03	; 3
 48c:	28 f4       	brcc	.+10     	; 0x498 <__stack+0x39>
 48e:	0c 5f       	subi	r16, 0xFC	; 252
 490:	1f 4f       	sbci	r17, 0xFF	; 255
 492:	ff e3       	ldi	r31, 0x3F	; 63
 494:	f9 83       	std	Y+1, r31	; 0x01
 496:	0d c0       	rjmp	.+26     	; 0x4b2 <__stack+0x53>
 498:	83 36       	cpi	r24, 0x63	; 99
 49a:	31 f0       	breq	.+12     	; 0x4a8 <__stack+0x49>
 49c:	83 37       	cpi	r24, 0x73	; 115
 49e:	71 f0       	breq	.+28     	; 0x4bc <__stack+0x5d>
 4a0:	83 35       	cpi	r24, 0x53	; 83
 4a2:	09 f0       	breq	.+2      	; 0x4a6 <__stack+0x47>
 4a4:	5c c0       	rjmp	.+184    	; 0x55e <__stack+0xff>
 4a6:	21 c0       	rjmp	.+66     	; 0x4ea <__stack+0x8b>
 4a8:	f8 01       	movw	r30, r16
 4aa:	80 81       	ld	r24, Z
 4ac:	89 83       	std	Y+1, r24	; 0x01
 4ae:	0e 5f       	subi	r16, 0xFE	; 254
 4b0:	1f 4f       	sbci	r17, 0xFF	; 255
 4b2:	42 01       	movw	r8, r4
 4b4:	71 e0       	ldi	r23, 0x01	; 1
 4b6:	a7 2e       	mov	r10, r23
 4b8:	b1 2c       	mov	r11, r1
 4ba:	15 c0       	rjmp	.+42     	; 0x4e6 <__stack+0x87>
 4bc:	62 e0       	ldi	r22, 0x02	; 2
 4be:	66 2e       	mov	r6, r22
 4c0:	71 2c       	mov	r7, r1
 4c2:	60 0e       	add	r6, r16
 4c4:	71 1e       	adc	r7, r17
 4c6:	f8 01       	movw	r30, r16
 4c8:	80 80       	ld	r8, Z
 4ca:	91 80       	ldd	r9, Z+1	; 0x01
 4cc:	26 ff       	sbrs	r18, 6
 4ce:	03 c0       	rjmp	.+6      	; 0x4d6 <__stack+0x77>
 4d0:	6e 2d       	mov	r22, r14
 4d2:	70 e0       	ldi	r23, 0x00	; 0
 4d4:	02 c0       	rjmp	.+4      	; 0x4da <__stack+0x7b>
 4d6:	6f ef       	ldi	r22, 0xFF	; 255
 4d8:	7f ef       	ldi	r23, 0xFF	; 255
 4da:	c4 01       	movw	r24, r8
 4dc:	2c 87       	std	Y+12, r18	; 0x0c
 4de:	40 d1       	rcall	.+640    	; 0x760 <strnlen>
 4e0:	5c 01       	movw	r10, r24
 4e2:	83 01       	movw	r16, r6
 4e4:	2c 85       	ldd	r18, Y+12	; 0x0c
 4e6:	2f 77       	andi	r18, 0x7F	; 127
 4e8:	16 c0       	rjmp	.+44     	; 0x516 <__stack+0xb7>
 4ea:	52 e0       	ldi	r21, 0x02	; 2
 4ec:	65 2e       	mov	r6, r21
 4ee:	71 2c       	mov	r7, r1
 4f0:	60 0e       	add	r6, r16
 4f2:	71 1e       	adc	r7, r17
 4f4:	f8 01       	movw	r30, r16
 4f6:	80 80       	ld	r8, Z
 4f8:	91 80       	ldd	r9, Z+1	; 0x01
 4fa:	26 ff       	sbrs	r18, 6
 4fc:	03 c0       	rjmp	.+6      	; 0x504 <__stack+0xa5>
 4fe:	6e 2d       	mov	r22, r14
 500:	70 e0       	ldi	r23, 0x00	; 0
 502:	02 c0       	rjmp	.+4      	; 0x508 <__stack+0xa9>
 504:	6f ef       	ldi	r22, 0xFF	; 255
 506:	7f ef       	ldi	r23, 0xFF	; 255
 508:	c4 01       	movw	r24, r8
 50a:	2c 87       	std	Y+12, r18	; 0x0c
 50c:	1e d1       	rcall	.+572    	; 0x74a <strnlen_P>
 50e:	5c 01       	movw	r10, r24
 510:	2c 85       	ldd	r18, Y+12	; 0x0c
 512:	20 68       	ori	r18, 0x80	; 128
 514:	83 01       	movw	r16, r6
 516:	23 fd       	sbrc	r18, 3
 518:	1e c0       	rjmp	.+60     	; 0x556 <__stack+0xf7>
 51a:	07 c0       	rjmp	.+14     	; 0x52a <__stack+0xcb>
 51c:	80 e2       	ldi	r24, 0x20	; 32
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	b6 01       	movw	r22, r12
 522:	2c 87       	std	Y+12, r18	; 0x0c
 524:	28 d1       	rcall	.+592    	; 0x776 <fputc>
 526:	fa 94       	dec	r15
 528:	2c 85       	ldd	r18, Y+12	; 0x0c
 52a:	8f 2d       	mov	r24, r15
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	a8 16       	cp	r10, r24
 530:	b9 06       	cpc	r11, r25
 532:	a0 f3       	brcs	.-24     	; 0x51c <__stack+0xbd>
 534:	10 c0       	rjmp	.+32     	; 0x556 <__stack+0xf7>
 536:	f4 01       	movw	r30, r8
 538:	27 fd       	sbrc	r18, 7
 53a:	85 91       	lpm	r24, Z+
 53c:	27 ff       	sbrs	r18, 7
 53e:	81 91       	ld	r24, Z+
 540:	4f 01       	movw	r8, r30
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	b6 01       	movw	r22, r12
 546:	2c 87       	std	Y+12, r18	; 0x0c
 548:	16 d1       	rcall	.+556    	; 0x776 <fputc>
 54a:	2c 85       	ldd	r18, Y+12	; 0x0c
 54c:	f1 10       	cpse	r15, r1
 54e:	fa 94       	dec	r15
 550:	08 94       	sec
 552:	a1 08       	sbc	r10, r1
 554:	b1 08       	sbc	r11, r1
 556:	a1 14       	cp	r10, r1
 558:	b1 04       	cpc	r11, r1
 55a:	69 f7       	brne	.-38     	; 0x536 <__stack+0xd7>
 55c:	e9 c0       	rjmp	.+466    	; 0x730 <__stack+0x2d1>
 55e:	84 36       	cpi	r24, 0x64	; 100
 560:	11 f0       	breq	.+4      	; 0x566 <__stack+0x107>
 562:	89 36       	cpi	r24, 0x69	; 105
 564:	41 f5       	brne	.+80     	; 0x5b6 <__stack+0x157>
 566:	27 ff       	sbrs	r18, 7
 568:	08 c0       	rjmp	.+16     	; 0x57a <__stack+0x11b>
 56a:	f8 01       	movw	r30, r16
 56c:	60 81       	ld	r22, Z
 56e:	71 81       	ldd	r23, Z+1	; 0x01
 570:	82 81       	ldd	r24, Z+2	; 0x02
 572:	93 81       	ldd	r25, Z+3	; 0x03
 574:	0c 5f       	subi	r16, 0xFC	; 252
 576:	1f 4f       	sbci	r17, 0xFF	; 255
 578:	09 c0       	rjmp	.+18     	; 0x58c <__stack+0x12d>
 57a:	f8 01       	movw	r30, r16
 57c:	60 81       	ld	r22, Z
 57e:	71 81       	ldd	r23, Z+1	; 0x01
 580:	88 27       	eor	r24, r24
 582:	77 fd       	sbrc	r23, 7
 584:	80 95       	com	r24
 586:	98 2f       	mov	r25, r24
 588:	0e 5f       	subi	r16, 0xFE	; 254
 58a:	1f 4f       	sbci	r17, 0xFF	; 255
 58c:	4f e6       	ldi	r20, 0x6F	; 111
 58e:	b4 2e       	mov	r11, r20
 590:	b2 22       	and	r11, r18
 592:	97 ff       	sbrs	r25, 7
 594:	09 c0       	rjmp	.+18     	; 0x5a8 <__stack+0x149>
 596:	90 95       	com	r25
 598:	80 95       	com	r24
 59a:	70 95       	com	r23
 59c:	61 95       	neg	r22
 59e:	7f 4f       	sbci	r23, 0xFF	; 255
 5a0:	8f 4f       	sbci	r24, 0xFF	; 255
 5a2:	9f 4f       	sbci	r25, 0xFF	; 255
 5a4:	f0 e8       	ldi	r31, 0x80	; 128
 5a6:	bf 2a       	or	r11, r31
 5a8:	a2 01       	movw	r20, r4
 5aa:	2a e0       	ldi	r18, 0x0A	; 10
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	0f d1       	rcall	.+542    	; 0x7ce <__ultoa_invert>
 5b0:	78 2e       	mov	r7, r24
 5b2:	74 18       	sub	r7, r4
 5b4:	44 c0       	rjmp	.+136    	; 0x63e <__stack+0x1df>
 5b6:	85 37       	cpi	r24, 0x75	; 117
 5b8:	31 f4       	brne	.+12     	; 0x5c6 <__stack+0x167>
 5ba:	3f ee       	ldi	r19, 0xEF	; 239
 5bc:	b3 2e       	mov	r11, r19
 5be:	b2 22       	and	r11, r18
 5c0:	2a e0       	ldi	r18, 0x0A	; 10
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	25 c0       	rjmp	.+74     	; 0x610 <__stack+0x1b1>
 5c6:	99 ef       	ldi	r25, 0xF9	; 249
 5c8:	b9 2e       	mov	r11, r25
 5ca:	b2 22       	and	r11, r18
 5cc:	8f 36       	cpi	r24, 0x6F	; 111
 5ce:	c1 f0       	breq	.+48     	; 0x600 <__stack+0x1a1>
 5d0:	80 37       	cpi	r24, 0x70	; 112
 5d2:	20 f4       	brcc	.+8      	; 0x5dc <__stack+0x17d>
 5d4:	88 35       	cpi	r24, 0x58	; 88
 5d6:	09 f0       	breq	.+2      	; 0x5da <__stack+0x17b>
 5d8:	ae c0       	rjmp	.+348    	; 0x736 <__stack+0x2d7>
 5da:	0d c0       	rjmp	.+26     	; 0x5f6 <__stack+0x197>
 5dc:	80 37       	cpi	r24, 0x70	; 112
 5de:	21 f0       	breq	.+8      	; 0x5e8 <__stack+0x189>
 5e0:	88 37       	cpi	r24, 0x78	; 120
 5e2:	09 f0       	breq	.+2      	; 0x5e6 <__stack+0x187>
 5e4:	a8 c0       	rjmp	.+336    	; 0x736 <__stack+0x2d7>
 5e6:	02 c0       	rjmp	.+4      	; 0x5ec <__stack+0x18d>
 5e8:	20 e1       	ldi	r18, 0x10	; 16
 5ea:	b2 2a       	or	r11, r18
 5ec:	b4 fe       	sbrs	r11, 4
 5ee:	0b c0       	rjmp	.+22     	; 0x606 <__stack+0x1a7>
 5f0:	84 e0       	ldi	r24, 0x04	; 4
 5f2:	b8 2a       	or	r11, r24
 5f4:	08 c0       	rjmp	.+16     	; 0x606 <__stack+0x1a7>
 5f6:	b4 fe       	sbrs	r11, 4
 5f8:	09 c0       	rjmp	.+18     	; 0x60c <__stack+0x1ad>
 5fa:	e6 e0       	ldi	r30, 0x06	; 6
 5fc:	be 2a       	or	r11, r30
 5fe:	06 c0       	rjmp	.+12     	; 0x60c <__stack+0x1ad>
 600:	28 e0       	ldi	r18, 0x08	; 8
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	05 c0       	rjmp	.+10     	; 0x610 <__stack+0x1b1>
 606:	20 e1       	ldi	r18, 0x10	; 16
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	02 c0       	rjmp	.+4      	; 0x610 <__stack+0x1b1>
 60c:	20 e1       	ldi	r18, 0x10	; 16
 60e:	32 e0       	ldi	r19, 0x02	; 2
 610:	b7 fe       	sbrs	r11, 7
 612:	08 c0       	rjmp	.+16     	; 0x624 <__stack+0x1c5>
 614:	f8 01       	movw	r30, r16
 616:	60 81       	ld	r22, Z
 618:	71 81       	ldd	r23, Z+1	; 0x01
 61a:	82 81       	ldd	r24, Z+2	; 0x02
 61c:	93 81       	ldd	r25, Z+3	; 0x03
 61e:	0c 5f       	subi	r16, 0xFC	; 252
 620:	1f 4f       	sbci	r17, 0xFF	; 255
 622:	07 c0       	rjmp	.+14     	; 0x632 <__stack+0x1d3>
 624:	f8 01       	movw	r30, r16
 626:	60 81       	ld	r22, Z
 628:	71 81       	ldd	r23, Z+1	; 0x01
 62a:	80 e0       	ldi	r24, 0x00	; 0
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	0e 5f       	subi	r16, 0xFE	; 254
 630:	1f 4f       	sbci	r17, 0xFF	; 255
 632:	a2 01       	movw	r20, r4
 634:	cc d0       	rcall	.+408    	; 0x7ce <__ultoa_invert>
 636:	78 2e       	mov	r7, r24
 638:	74 18       	sub	r7, r4
 63a:	ff e7       	ldi	r31, 0x7F	; 127
 63c:	bf 22       	and	r11, r31
 63e:	b6 fe       	sbrs	r11, 6
 640:	0b c0       	rjmp	.+22     	; 0x658 <__stack+0x1f9>
 642:	2e ef       	ldi	r18, 0xFE	; 254
 644:	b2 22       	and	r11, r18
 646:	7e 14       	cp	r7, r14
 648:	38 f4       	brcc	.+14     	; 0x658 <__stack+0x1f9>
 64a:	b4 fe       	sbrs	r11, 4
 64c:	07 c0       	rjmp	.+14     	; 0x65c <__stack+0x1fd>
 64e:	b2 fc       	sbrc	r11, 2
 650:	05 c0       	rjmp	.+10     	; 0x65c <__stack+0x1fd>
 652:	8f ee       	ldi	r24, 0xEF	; 239
 654:	b8 22       	and	r11, r24
 656:	02 c0       	rjmp	.+4      	; 0x65c <__stack+0x1fd>
 658:	a7 2c       	mov	r10, r7
 65a:	01 c0       	rjmp	.+2      	; 0x65e <__stack+0x1ff>
 65c:	ae 2c       	mov	r10, r14
 65e:	8b 2d       	mov	r24, r11
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	b4 fe       	sbrs	r11, 4
 664:	0d c0       	rjmp	.+26     	; 0x680 <__stack+0x221>
 666:	fe 01       	movw	r30, r28
 668:	e7 0d       	add	r30, r7
 66a:	f1 1d       	adc	r31, r1
 66c:	20 81       	ld	r18, Z
 66e:	20 33       	cpi	r18, 0x30	; 48
 670:	19 f4       	brne	.+6      	; 0x678 <__stack+0x219>
 672:	e9 ee       	ldi	r30, 0xE9	; 233
 674:	be 22       	and	r11, r30
 676:	09 c0       	rjmp	.+18     	; 0x68a <__stack+0x22b>
 678:	a3 94       	inc	r10
 67a:	b2 fe       	sbrs	r11, 2
 67c:	06 c0       	rjmp	.+12     	; 0x68a <__stack+0x22b>
 67e:	04 c0       	rjmp	.+8      	; 0x688 <__stack+0x229>
 680:	86 78       	andi	r24, 0x86	; 134
 682:	90 70       	andi	r25, 0x00	; 0
 684:	00 97       	sbiw	r24, 0x00	; 0
 686:	09 f0       	breq	.+2      	; 0x68a <__stack+0x22b>
 688:	a3 94       	inc	r10
 68a:	8b 2c       	mov	r8, r11
 68c:	99 24       	eor	r9, r9
 68e:	b3 fc       	sbrc	r11, 3
 690:	13 c0       	rjmp	.+38     	; 0x6b8 <__stack+0x259>
 692:	b0 fe       	sbrs	r11, 0
 694:	0e c0       	rjmp	.+28     	; 0x6b2 <__stack+0x253>
 696:	af 14       	cp	r10, r15
 698:	28 f4       	brcc	.+10     	; 0x6a4 <__stack+0x245>
 69a:	e7 2c       	mov	r14, r7
 69c:	ef 0c       	add	r14, r15
 69e:	ea 18       	sub	r14, r10
 6a0:	af 2c       	mov	r10, r15
 6a2:	07 c0       	rjmp	.+14     	; 0x6b2 <__stack+0x253>
 6a4:	e7 2c       	mov	r14, r7
 6a6:	05 c0       	rjmp	.+10     	; 0x6b2 <__stack+0x253>
 6a8:	80 e2       	ldi	r24, 0x20	; 32
 6aa:	90 e0       	ldi	r25, 0x00	; 0
 6ac:	b6 01       	movw	r22, r12
 6ae:	63 d0       	rcall	.+198    	; 0x776 <fputc>
 6b0:	a3 94       	inc	r10
 6b2:	af 14       	cp	r10, r15
 6b4:	c8 f3       	brcs	.-14     	; 0x6a8 <__stack+0x249>
 6b6:	04 c0       	rjmp	.+8      	; 0x6c0 <__stack+0x261>
 6b8:	af 14       	cp	r10, r15
 6ba:	10 f4       	brcc	.+4      	; 0x6c0 <__stack+0x261>
 6bc:	fa 18       	sub	r15, r10
 6be:	01 c0       	rjmp	.+2      	; 0x6c2 <__stack+0x263>
 6c0:	ff 24       	eor	r15, r15
 6c2:	84 fe       	sbrs	r8, 4
 6c4:	0e c0       	rjmp	.+28     	; 0x6e2 <__stack+0x283>
 6c6:	80 e3       	ldi	r24, 0x30	; 48
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	b6 01       	movw	r22, r12
 6cc:	54 d0       	rcall	.+168    	; 0x776 <fputc>
 6ce:	82 fe       	sbrs	r8, 2
 6d0:	1d c0       	rjmp	.+58     	; 0x70c <__stack+0x2ad>
 6d2:	81 fe       	sbrs	r8, 1
 6d4:	03 c0       	rjmp	.+6      	; 0x6dc <__stack+0x27d>
 6d6:	88 e5       	ldi	r24, 0x58	; 88
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	10 c0       	rjmp	.+32     	; 0x6fc <__stack+0x29d>
 6dc:	88 e7       	ldi	r24, 0x78	; 120
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	0d c0       	rjmp	.+26     	; 0x6fc <__stack+0x29d>
 6e2:	c4 01       	movw	r24, r8
 6e4:	86 78       	andi	r24, 0x86	; 134
 6e6:	90 70       	andi	r25, 0x00	; 0
 6e8:	00 97       	sbiw	r24, 0x00	; 0
 6ea:	81 f0       	breq	.+32     	; 0x70c <__stack+0x2ad>
 6ec:	81 fc       	sbrc	r8, 1
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <__stack+0x295>
 6f0:	80 e2       	ldi	r24, 0x20	; 32
 6f2:	01 c0       	rjmp	.+2      	; 0x6f6 <__stack+0x297>
 6f4:	8b e2       	ldi	r24, 0x2B	; 43
 6f6:	b7 fc       	sbrc	r11, 7
 6f8:	8d e2       	ldi	r24, 0x2D	; 45
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	b6 01       	movw	r22, r12
 6fe:	3b d0       	rcall	.+118    	; 0x776 <fputc>
 700:	05 c0       	rjmp	.+10     	; 0x70c <__stack+0x2ad>
 702:	80 e3       	ldi	r24, 0x30	; 48
 704:	90 e0       	ldi	r25, 0x00	; 0
 706:	b6 01       	movw	r22, r12
 708:	36 d0       	rcall	.+108    	; 0x776 <fputc>
 70a:	ea 94       	dec	r14
 70c:	7e 14       	cp	r7, r14
 70e:	c8 f3       	brcs	.-14     	; 0x702 <__stack+0x2a3>
 710:	7a 94       	dec	r7
 712:	f2 01       	movw	r30, r4
 714:	e7 0d       	add	r30, r7
 716:	f1 1d       	adc	r31, r1
 718:	80 81       	ld	r24, Z
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	b6 01       	movw	r22, r12
 71e:	2b d0       	rcall	.+86     	; 0x776 <fputc>
 720:	77 20       	and	r7, r7
 722:	b1 f7       	brne	.-20     	; 0x710 <__stack+0x2b1>
 724:	05 c0       	rjmp	.+10     	; 0x730 <__stack+0x2d1>
 726:	80 e2       	ldi	r24, 0x20	; 32
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	b6 01       	movw	r22, r12
 72c:	24 d0       	rcall	.+72     	; 0x776 <fputc>
 72e:	fa 94       	dec	r15
 730:	ff 20       	and	r15, r15
 732:	c9 f7       	brne	.-14     	; 0x726 <__stack+0x2c7>
 734:	44 ce       	rjmp	.-888    	; 0x3be <vfprintf+0x24>
 736:	f6 01       	movw	r30, r12
 738:	26 81       	ldd	r18, Z+6	; 0x06
 73a:	37 81       	ldd	r19, Z+7	; 0x07
 73c:	02 c0       	rjmp	.+4      	; 0x742 <__stack+0x2e3>
 73e:	2f ef       	ldi	r18, 0xFF	; 255
 740:	3f ef       	ldi	r19, 0xFF	; 255
 742:	c9 01       	movw	r24, r18
 744:	2c 96       	adiw	r28, 0x0c	; 12
 746:	e2 e1       	ldi	r30, 0x12	; 18
 748:	bc c0       	rjmp	.+376    	; 0x8c2 <__epilogue_restores__>

0000074a <strnlen_P>:
 74a:	fc 01       	movw	r30, r24
 74c:	05 90       	lpm	r0, Z+
 74e:	61 50       	subi	r22, 0x01	; 1
 750:	70 40       	sbci	r23, 0x00	; 0
 752:	01 10       	cpse	r0, r1
 754:	d8 f7       	brcc	.-10     	; 0x74c <strnlen_P+0x2>
 756:	80 95       	com	r24
 758:	90 95       	com	r25
 75a:	8e 0f       	add	r24, r30
 75c:	9f 1f       	adc	r25, r31
 75e:	08 95       	ret

00000760 <strnlen>:
 760:	fc 01       	movw	r30, r24
 762:	61 50       	subi	r22, 0x01	; 1
 764:	70 40       	sbci	r23, 0x00	; 0
 766:	01 90       	ld	r0, Z+
 768:	01 10       	cpse	r0, r1
 76a:	d8 f7       	brcc	.-10     	; 0x762 <strnlen+0x2>
 76c:	80 95       	com	r24
 76e:	90 95       	com	r25
 770:	8e 0f       	add	r24, r30
 772:	9f 1f       	adc	r25, r31
 774:	08 95       	ret

00000776 <fputc>:
 776:	0f 93       	push	r16
 778:	1f 93       	push	r17
 77a:	cf 93       	push	r28
 77c:	df 93       	push	r29
 77e:	8c 01       	movw	r16, r24
 780:	eb 01       	movw	r28, r22
 782:	8b 81       	ldd	r24, Y+3	; 0x03
 784:	81 ff       	sbrs	r24, 1
 786:	1b c0       	rjmp	.+54     	; 0x7be <fputc+0x48>
 788:	82 ff       	sbrs	r24, 2
 78a:	0d c0       	rjmp	.+26     	; 0x7a6 <fputc+0x30>
 78c:	2e 81       	ldd	r18, Y+6	; 0x06
 78e:	3f 81       	ldd	r19, Y+7	; 0x07
 790:	8c 81       	ldd	r24, Y+4	; 0x04
 792:	9d 81       	ldd	r25, Y+5	; 0x05
 794:	28 17       	cp	r18, r24
 796:	39 07       	cpc	r19, r25
 798:	64 f4       	brge	.+24     	; 0x7b2 <fputc+0x3c>
 79a:	e8 81       	ld	r30, Y
 79c:	f9 81       	ldd	r31, Y+1	; 0x01
 79e:	01 93       	st	Z+, r16
 7a0:	f9 83       	std	Y+1, r31	; 0x01
 7a2:	e8 83       	st	Y, r30
 7a4:	06 c0       	rjmp	.+12     	; 0x7b2 <fputc+0x3c>
 7a6:	e8 85       	ldd	r30, Y+8	; 0x08
 7a8:	f9 85       	ldd	r31, Y+9	; 0x09
 7aa:	80 2f       	mov	r24, r16
 7ac:	09 95       	icall
 7ae:	00 97       	sbiw	r24, 0x00	; 0
 7b0:	31 f4       	brne	.+12     	; 0x7be <fputc+0x48>
 7b2:	8e 81       	ldd	r24, Y+6	; 0x06
 7b4:	9f 81       	ldd	r25, Y+7	; 0x07
 7b6:	01 96       	adiw	r24, 0x01	; 1
 7b8:	9f 83       	std	Y+7, r25	; 0x07
 7ba:	8e 83       	std	Y+6, r24	; 0x06
 7bc:	02 c0       	rjmp	.+4      	; 0x7c2 <fputc+0x4c>
 7be:	0f ef       	ldi	r16, 0xFF	; 255
 7c0:	1f ef       	ldi	r17, 0xFF	; 255
 7c2:	c8 01       	movw	r24, r16
 7c4:	df 91       	pop	r29
 7c6:	cf 91       	pop	r28
 7c8:	1f 91       	pop	r17
 7ca:	0f 91       	pop	r16
 7cc:	08 95       	ret

000007ce <__ultoa_invert>:
 7ce:	fa 01       	movw	r30, r20
 7d0:	aa 27       	eor	r26, r26
 7d2:	28 30       	cpi	r18, 0x08	; 8
 7d4:	51 f1       	breq	.+84     	; 0x82a <__ultoa_invert+0x5c>
 7d6:	20 31       	cpi	r18, 0x10	; 16
 7d8:	81 f1       	breq	.+96     	; 0x83a <__ultoa_invert+0x6c>
 7da:	e8 94       	clt
 7dc:	6f 93       	push	r22
 7de:	6e 7f       	andi	r22, 0xFE	; 254
 7e0:	6e 5f       	subi	r22, 0xFE	; 254
 7e2:	7f 4f       	sbci	r23, 0xFF	; 255
 7e4:	8f 4f       	sbci	r24, 0xFF	; 255
 7e6:	9f 4f       	sbci	r25, 0xFF	; 255
 7e8:	af 4f       	sbci	r26, 0xFF	; 255
 7ea:	b1 e0       	ldi	r27, 0x01	; 1
 7ec:	3e d0       	rcall	.+124    	; 0x86a <__ultoa_invert+0x9c>
 7ee:	b4 e0       	ldi	r27, 0x04	; 4
 7f0:	3c d0       	rcall	.+120    	; 0x86a <__ultoa_invert+0x9c>
 7f2:	67 0f       	add	r22, r23
 7f4:	78 1f       	adc	r23, r24
 7f6:	89 1f       	adc	r24, r25
 7f8:	9a 1f       	adc	r25, r26
 7fa:	a1 1d       	adc	r26, r1
 7fc:	68 0f       	add	r22, r24
 7fe:	79 1f       	adc	r23, r25
 800:	8a 1f       	adc	r24, r26
 802:	91 1d       	adc	r25, r1
 804:	a1 1d       	adc	r26, r1
 806:	6a 0f       	add	r22, r26
 808:	71 1d       	adc	r23, r1
 80a:	81 1d       	adc	r24, r1
 80c:	91 1d       	adc	r25, r1
 80e:	a1 1d       	adc	r26, r1
 810:	20 d0       	rcall	.+64     	; 0x852 <__ultoa_invert+0x84>
 812:	09 f4       	brne	.+2      	; 0x816 <__ultoa_invert+0x48>
 814:	68 94       	set
 816:	3f 91       	pop	r19
 818:	2a e0       	ldi	r18, 0x0A	; 10
 81a:	26 9f       	mul	r18, r22
 81c:	11 24       	eor	r1, r1
 81e:	30 19       	sub	r19, r0
 820:	30 5d       	subi	r19, 0xD0	; 208
 822:	31 93       	st	Z+, r19
 824:	de f6       	brtc	.-74     	; 0x7dc <__ultoa_invert+0xe>
 826:	cf 01       	movw	r24, r30
 828:	08 95       	ret
 82a:	46 2f       	mov	r20, r22
 82c:	47 70       	andi	r20, 0x07	; 7
 82e:	40 5d       	subi	r20, 0xD0	; 208
 830:	41 93       	st	Z+, r20
 832:	b3 e0       	ldi	r27, 0x03	; 3
 834:	0f d0       	rcall	.+30     	; 0x854 <__ultoa_invert+0x86>
 836:	c9 f7       	brne	.-14     	; 0x82a <__ultoa_invert+0x5c>
 838:	f6 cf       	rjmp	.-20     	; 0x826 <__ultoa_invert+0x58>
 83a:	46 2f       	mov	r20, r22
 83c:	4f 70       	andi	r20, 0x0F	; 15
 83e:	40 5d       	subi	r20, 0xD0	; 208
 840:	4a 33       	cpi	r20, 0x3A	; 58
 842:	18 f0       	brcs	.+6      	; 0x84a <__ultoa_invert+0x7c>
 844:	49 5d       	subi	r20, 0xD9	; 217
 846:	31 fd       	sbrc	r19, 1
 848:	40 52       	subi	r20, 0x20	; 32
 84a:	41 93       	st	Z+, r20
 84c:	02 d0       	rcall	.+4      	; 0x852 <__ultoa_invert+0x84>
 84e:	a9 f7       	brne	.-22     	; 0x83a <__ultoa_invert+0x6c>
 850:	ea cf       	rjmp	.-44     	; 0x826 <__ultoa_invert+0x58>
 852:	b4 e0       	ldi	r27, 0x04	; 4
 854:	a6 95       	lsr	r26
 856:	97 95       	ror	r25
 858:	87 95       	ror	r24
 85a:	77 95       	ror	r23
 85c:	67 95       	ror	r22
 85e:	ba 95       	dec	r27
 860:	c9 f7       	brne	.-14     	; 0x854 <__ultoa_invert+0x86>
 862:	00 97       	sbiw	r24, 0x00	; 0
 864:	61 05       	cpc	r22, r1
 866:	71 05       	cpc	r23, r1
 868:	08 95       	ret
 86a:	9b 01       	movw	r18, r22
 86c:	ac 01       	movw	r20, r24
 86e:	0a 2e       	mov	r0, r26
 870:	06 94       	lsr	r0
 872:	57 95       	ror	r21
 874:	47 95       	ror	r20
 876:	37 95       	ror	r19
 878:	27 95       	ror	r18
 87a:	ba 95       	dec	r27
 87c:	c9 f7       	brne	.-14     	; 0x870 <__ultoa_invert+0xa2>
 87e:	62 0f       	add	r22, r18
 880:	73 1f       	adc	r23, r19
 882:	84 1f       	adc	r24, r20
 884:	95 1f       	adc	r25, r21
 886:	a0 1d       	adc	r26, r0
 888:	08 95       	ret

0000088a <__prologue_saves__>:
 88a:	2f 92       	push	r2
 88c:	3f 92       	push	r3
 88e:	4f 92       	push	r4
 890:	5f 92       	push	r5
 892:	6f 92       	push	r6
 894:	7f 92       	push	r7
 896:	8f 92       	push	r8
 898:	9f 92       	push	r9
 89a:	af 92       	push	r10
 89c:	bf 92       	push	r11
 89e:	cf 92       	push	r12
 8a0:	df 92       	push	r13
 8a2:	ef 92       	push	r14
 8a4:	ff 92       	push	r15
 8a6:	0f 93       	push	r16
 8a8:	1f 93       	push	r17
 8aa:	cf 93       	push	r28
 8ac:	df 93       	push	r29
 8ae:	cd b7       	in	r28, 0x3d	; 61
 8b0:	de b7       	in	r29, 0x3e	; 62
 8b2:	ca 1b       	sub	r28, r26
 8b4:	db 0b       	sbc	r29, r27
 8b6:	0f b6       	in	r0, 0x3f	; 63
 8b8:	f8 94       	cli
 8ba:	de bf       	out	0x3e, r29	; 62
 8bc:	0f be       	out	0x3f, r0	; 63
 8be:	cd bf       	out	0x3d, r28	; 61
 8c0:	09 94       	ijmp

000008c2 <__epilogue_restores__>:
 8c2:	2a 88       	ldd	r2, Y+18	; 0x12
 8c4:	39 88       	ldd	r3, Y+17	; 0x11
 8c6:	48 88       	ldd	r4, Y+16	; 0x10
 8c8:	5f 84       	ldd	r5, Y+15	; 0x0f
 8ca:	6e 84       	ldd	r6, Y+14	; 0x0e
 8cc:	7d 84       	ldd	r7, Y+13	; 0x0d
 8ce:	8c 84       	ldd	r8, Y+12	; 0x0c
 8d0:	9b 84       	ldd	r9, Y+11	; 0x0b
 8d2:	aa 84       	ldd	r10, Y+10	; 0x0a
 8d4:	b9 84       	ldd	r11, Y+9	; 0x09
 8d6:	c8 84       	ldd	r12, Y+8	; 0x08
 8d8:	df 80       	ldd	r13, Y+7	; 0x07
 8da:	ee 80       	ldd	r14, Y+6	; 0x06
 8dc:	fd 80       	ldd	r15, Y+5	; 0x05
 8de:	0c 81       	ldd	r16, Y+4	; 0x04
 8e0:	1b 81       	ldd	r17, Y+3	; 0x03
 8e2:	aa 81       	ldd	r26, Y+2	; 0x02
 8e4:	b9 81       	ldd	r27, Y+1	; 0x01
 8e6:	ce 0f       	add	r28, r30
 8e8:	d1 1d       	adc	r29, r1
 8ea:	0f b6       	in	r0, 0x3f	; 63
 8ec:	f8 94       	cli
 8ee:	de bf       	out	0x3e, r29	; 62
 8f0:	0f be       	out	0x3f, r0	; 63
 8f2:	cd bf       	out	0x3d, r28	; 61
 8f4:	ed 01       	movw	r28, r26
 8f6:	08 95       	ret

000008f8 <_exit>:
 8f8:	f8 94       	cli

000008fa <__stop_program>:
 8fa:	ff cf       	rjmp	.-2      	; 0x8fa <__stop_program>
