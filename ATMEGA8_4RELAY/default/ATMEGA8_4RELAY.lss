
ATMEGA8_4RELAY.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000088e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00800060  0000088e  00000922  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800088  00800088  0000094a  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  0000094c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  000015d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  00001786  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000000fa  00000000  00000000  00001826  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000da8  00000000  00000000  00001920  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000758  00000000  00000000  000026c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000fa6  00000000  00000000  00002e20  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000f0  00000000  00000000  00003dc8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000384  00000000  00000000  00003eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000084f  00000000  00000000  0000423c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000159  00000000  00000000  00004a8b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000058  00000000  00000000  00004be4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	51 c0       	rjmp	.+162    	; 0xba <__vector_11>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ee e8       	ldi	r30, 0x8E	; 142
  3a:	f8 e0       	ldi	r31, 0x08	; 8
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a8 38       	cpi	r26, 0x88	; 136
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a8 e8       	ldi	r26, 0x88	; 136
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a2 39       	cpi	r26, 0x92	; 146
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	45 d1       	rcall	.+650    	; 0x2e4 <main>
  5a:	17 c4       	rjmp	.+2094   	; 0x88a <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <USART_putchar>:
	return 0;
}

static int USART_putchar(char c, FILE *stream)
{
	if(c == '\n')
  5e:	8a 30       	cpi	r24, 0x0A	; 10
  60:	41 f4       	brne	.+16     	; 0x72 <USART_putchar+0x14>
	{   loop_until_bit_is_set(UCSRA,UDRE);
  62:	5d 9b       	sbis	0x0b, 5	; 11
  64:	fe cf       	rjmp	.-4      	; 0x62 <USART_putchar+0x4>
		UDR = 0x0D;
  66:	8d e0       	ldi	r24, 0x0D	; 13
  68:	8c b9       	out	0x0c, r24	; 12
		loop_until_bit_is_set(UCSRA,UDRE);
  6a:	5d 9b       	sbis	0x0b, 5	; 11
  6c:	fe cf       	rjmp	.-4      	; 0x6a <USART_putchar+0xc>
		UDR = 0x0A;
  6e:	8a e0       	ldi	r24, 0x0A	; 10
  70:	02 c0       	rjmp	.+4      	; 0x76 <USART_putchar+0x18>
	}
	else
	{  loop_until_bit_is_set(UCSRA,UDRE);
  72:	5d 9b       	sbis	0x0b, 5	; 11
  74:	fe cf       	rjmp	.-4      	; 0x72 <USART_putchar+0x14>
		UDR = c;
  76:	8c b9       	out	0x0c, r24	; 12
	}
	return 0;

}
  78:	80 e0       	ldi	r24, 0x00	; 0
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	08 95       	ret

0000007e <setup>:

volatile unsigned char RX_BUF[1], Relay[2], Test;

void setup() {
	
	cli();
  7e:	f8 94       	cli

	//UART
	// 8MHz 38400
	UBRRL = 12;
  80:	9c e0       	ldi	r25, 0x0C	; 12
  82:	99 b9       	out	0x09, r25	; 9

	DDRB = (1 << PB1) | (1 << PB0); // PB1: 전원제어2 , PB0: 전원제어1
  84:	83 e0       	ldi	r24, 0x03	; 3
  86:	87 bb       	out	0x17, r24	; 23
	DDRC = (1 << PC3) | (1 << PC2) | (0 << PC1) | (0 << PC0); // PC3: 데드볼트2, PC2: 데드볼트1, PC1: 자석2 , PC0: 자석1
  88:	94 bb       	out	0x14, r25	; 20
	DDRD = (1 << PD1) | (0 << PD0); //UART
  8a:	92 e0       	ldi	r25, 0x02	; 2
  8c:	91 bb       	out	0x11, r25	; 17
	
	PORTC = (1 << PC1) | (1 << PC0); // 자석 풀업 저항
  8e:	85 bb       	out	0x15, r24	; 21

	UCSRB = (1 << RXCIE) | (1 << RXEN) | (1 << TXEN);
  90:	88 e9       	ldi	r24, 0x98	; 152
  92:	8a b9       	out	0x0a, r24	; 10

	Relay[0] = 1;
  94:	81 e0       	ldi	r24, 0x01	; 1
  96:	80 93 8a 00 	sts	0x008A, r24
	Relay[1] = 1;
  9a:	80 93 8b 00 	sts	0x008B, r24

	Test = 0;
  9e:	10 92 88 00 	sts	0x0088, r1

	//전원 High
	sbi(PORTB, 0);
  a2:	c0 9a       	sbi	0x18, 0	; 24
	sbi(PORTB, 1);
  a4:	c1 9a       	sbi	0x18, 1	; 24

	//데드볼트 High
	sbi(PORTC, 2);
  a6:	aa 9a       	sbi	0x15, 2	; 21
	sbi(PORTC, 3);
  a8:	ab 9a       	sbi	0x15, 3	; 21

	stdout = &device;
  aa:	8a e7       	ldi	r24, 0x7A	; 122
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	90 93 8f 00 	sts	0x008F, r25
  b2:	80 93 8e 00 	sts	0x008E, r24

	sei();
  b6:	78 94       	sei

}
  b8:	08 95       	ret

000000ba <__vector_11>:

ISR(SIG_UART_RECV)
{
  ba:	1f 92       	push	r1
  bc:	0f 92       	push	r0
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	0f 92       	push	r0
  c2:	11 24       	eor	r1, r1
  c4:	8f 93       	push	r24
  c6:	9f 93       	push	r25
  c8:	af 93       	push	r26
  ca:	bf 93       	push	r27
	cli();
  cc:	f8 94       	cli

	while((UCSRA &(1<<RXC)) == 0);
  ce:	5f 9b       	sbis	0x0b, 7	; 11
  d0:	fe cf       	rjmp	.-4      	; 0xce <__vector_11+0x14>
	
	RX_BUF[0] = UDR;
  d2:	8c b1       	in	r24, 0x0c	; 12
  d4:	80 93 89 00 	sts	0x0089, r24

	if(RX_BUF[0] == '1') // 1번문 열기
  d8:	80 91 89 00 	lds	r24, 0x0089
  dc:	81 33       	cpi	r24, 0x31	; 49
  de:	51 f4       	brne	.+20     	; 0xf4 <__vector_11+0x3a>
	{
		if(Test == 1)
  e0:	80 91 88 00 	lds	r24, 0x0088
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	11 f4       	brne	.+4      	; 0xec <__vector_11+0x32>
		{
			cbi(PORTC,2);
  e8:	aa 98       	cbi	0x15, 2	; 21
  ea:	4b c0       	rjmp	.+150    	; 0x182 <__vector_11+0xc8>
		}
		else
		{
			cbi(PORTC,2);
  ec:	aa 98       	cbi	0x15, 2	; 21
			Relay[0] = 0;
  ee:	10 92 8a 00 	sts	0x008A, r1
  f2:	11 c0       	rjmp	.+34     	; 0x116 <__vector_11+0x5c>
			_delay_ms(5000);
		}
	}
	else if(RX_BUF[0] == '3') // 1번문 닫기
  f4:	80 91 89 00 	lds	r24, 0x0089
  f8:	83 33       	cpi	r24, 0x33	; 51
  fa:	11 f4       	brne	.+4      	; 0x100 <__vector_11+0x46>
	{
		sbi(PORTC,2);
  fc:	aa 9a       	sbi	0x15, 2	; 21
  fe:	41 c0       	rjmp	.+130    	; 0x182 <__vector_11+0xc8>
	}
	else if(RX_BUF[0] == '4') // 2번문 열기
 100:	80 91 89 00 	lds	r24, 0x0089
 104:	84 33       	cpi	r24, 0x34	; 52
 106:	89 f4       	brne	.+34     	; 0x12a <__vector_11+0x70>
	{
		if(Test == 1)
 108:	80 91 88 00 	lds	r24, 0x0088
 10c:	81 30       	cpi	r24, 0x01	; 1
 10e:	89 f0       	breq	.+34     	; 0x132 <__vector_11+0x78>
		{
			sbi(PORTC, 3);
		}
		else
		{
			cbi(PORTC,3);
 110:	ab 98       	cbi	0x15, 3	; 21
			Relay[1] = 0;
 112:	10 92 8b 00 	sts	0x008B, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 116:	8f ef       	ldi	r24, 0xFF	; 255
 118:	91 e1       	ldi	r25, 0x11	; 17
 11a:	aa e7       	ldi	r26, 0x7A	; 122
 11c:	81 50       	subi	r24, 0x01	; 1
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	a0 40       	sbci	r26, 0x00	; 0
 122:	e1 f7       	brne	.-8      	; 0x11c <__vector_11+0x62>
 124:	00 c0       	rjmp	.+0      	; 0x126 <__vector_11+0x6c>
 126:	00 00       	nop
 128:	2c c0       	rjmp	.+88     	; 0x182 <__vector_11+0xc8>
			_delay_ms(5000);
		}
	}
	else if(RX_BUF[0] == '5') // 2번문 닫기
 12a:	80 91 89 00 	lds	r24, 0x0089
 12e:	85 33       	cpi	r24, 0x35	; 53
 130:	11 f4       	brne	.+4      	; 0x136 <__vector_11+0x7c>
	{
		sbi(PORTC,3);
 132:	ab 9a       	sbi	0x15, 3	; 21
 134:	26 c0       	rjmp	.+76     	; 0x182 <__vector_11+0xc8>
	}
	else if(RX_BUF[0] == '6') // 1번 전원 제어 (NC)
 136:	80 91 89 00 	lds	r24, 0x0089
 13a:	86 33       	cpi	r24, 0x36	; 54
 13c:	11 f4       	brne	.+4      	; 0x142 <__vector_11+0x88>
	{
		sbi(PORTB,0);
 13e:	c0 9a       	sbi	0x18, 0	; 24
 140:	20 c0       	rjmp	.+64     	; 0x182 <__vector_11+0xc8>
	}
	else if(RX_BUF[0] == '7') // 1번 전원 제어 (NO)
 142:	80 91 89 00 	lds	r24, 0x0089
 146:	87 33       	cpi	r24, 0x37	; 55
 148:	11 f4       	brne	.+4      	; 0x14e <__vector_11+0x94>
	{
		cbi(PORTB,0);
 14a:	c0 98       	cbi	0x18, 0	; 24
 14c:	1a c0       	rjmp	.+52     	; 0x182 <__vector_11+0xc8>
	}
	else if(RX_BUF[0] == '8') // 2번 전원 제어 (NC)
 14e:	80 91 89 00 	lds	r24, 0x0089
 152:	88 33       	cpi	r24, 0x38	; 56
 154:	11 f4       	brne	.+4      	; 0x15a <__vector_11+0xa0>
	{
		sbi(PORTB,1);
 156:	c1 9a       	sbi	0x18, 1	; 24
 158:	14 c0       	rjmp	.+40     	; 0x182 <__vector_11+0xc8>
	}
	else if(RX_BUF[0] == '9') // 2번 전원 제어 (NO)
 15a:	80 91 89 00 	lds	r24, 0x0089
 15e:	89 33       	cpi	r24, 0x39	; 57
 160:	11 f4       	brne	.+4      	; 0x166 <__vector_11+0xac>
	{
		cbi(PORTB,1);
 162:	c1 98       	cbi	0x18, 1	; 24
 164:	0e c0       	rjmp	.+28     	; 0x182 <__vector_11+0xc8>
	}
	else if(RX_BUF[0] == 'T') 
 166:	80 91 89 00 	lds	r24, 0x0089
 16a:	84 35       	cpi	r24, 0x54	; 84
 16c:	21 f4       	brne	.+8      	; 0x176 <__vector_11+0xbc>
	{
		Test = 1;  // set test mode
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	80 93 88 00 	sts	0x0088, r24
 174:	06 c0       	rjmp	.+12     	; 0x182 <__vector_11+0xc8>
	}
	else if(RX_BUF[0] == 'F') 
 176:	80 91 89 00 	lds	r24, 0x0089
 17a:	86 34       	cpi	r24, 0x46	; 70
 17c:	11 f4       	brne	.+4      	; 0x182 <__vector_11+0xc8>
	{
		Test = 0;  // end test mode
 17e:	10 92 88 00 	sts	0x0088, r1
	}

	sei();
 182:	78 94       	sei
}
 184:	bf 91       	pop	r27
 186:	af 91       	pop	r26
 188:	9f 91       	pop	r25
 18a:	8f 91       	pop	r24
 18c:	0f 90       	pop	r0
 18e:	0f be       	out	0x3f, r0	; 63
 190:	0f 90       	pop	r0
 192:	1f 90       	pop	r1
 194:	18 95       	reti

00000196 <tillend>:

void tillend(int x, int n)
{
	if(n==2){
 196:	62 30       	cpi	r22, 0x02	; 2
 198:	71 05       	cpc	r23, r1
 19a:	71 f4       	brne	.+28     	; 0x1b8 <tillend+0x22>
		printf("R1_2");
 19c:	00 d0       	rcall	.+0      	; 0x19e <tillend+0x8>
 19e:	80 e6       	ldi	r24, 0x60	; 96
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	ed b7       	in	r30, 0x3d	; 61
 1a4:	fe b7       	in	r31, 0x3e	; 62
 1a6:	92 83       	std	Z+2, r25	; 0x02
 1a8:	81 83       	std	Z+1, r24	; 0x01
 1aa:	a8 d0       	rcall	.+336    	; 0x2fc <printf>
		Relay[0] = 2;
 1ac:	82 e0       	ldi	r24, 0x02	; 2
 1ae:	80 93 8a 00 	sts	0x008A, r24
 1b2:	0f 90       	pop	r0
 1b4:	0f 90       	pop	r0
 1b6:	08 95       	ret
	}
	else if(n==3)
 1b8:	63 30       	cpi	r22, 0x03	; 3
 1ba:	71 05       	cpc	r23, r1
 1bc:	69 f4       	brne	.+26     	; 0x1d8 <tillend+0x42>
	{
		printf("R2_2");
 1be:	00 d0       	rcall	.+0      	; 0x1c0 <tillend+0x2a>
 1c0:	85 e6       	ldi	r24, 0x65	; 101
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	ed b7       	in	r30, 0x3d	; 61
 1c6:	fe b7       	in	r31, 0x3e	; 62
 1c8:	92 83       	std	Z+2, r25	; 0x02
 1ca:	81 83       	std	Z+1, r24	; 0x01
 1cc:	97 d0       	rcall	.+302    	; 0x2fc <printf>
		Relay[1] = 2;
 1ce:	82 e0       	ldi	r24, 0x02	; 2
 1d0:	80 93 8b 00 	sts	0x008B, r24
 1d4:	0f 90       	pop	r0
 1d6:	0f 90       	pop	r0
 1d8:	08 95       	ret

000001da <loop>:

}

void loop(){

	if(Test == 0)
 1da:	80 91 88 00 	lds	r24, 0x0088
 1de:	88 23       	and	r24, r24
 1e0:	09 f0       	breq	.+2      	; 0x1e4 <loop+0xa>
 1e2:	57 c0       	rjmp	.+174    	; 0x292 <loop+0xb8>
	{
		//1번문 제어
		if(Relay[0] == 0) //자석 가까운데 문 열려있음
 1e4:	80 91 8a 00 	lds	r24, 0x008A
 1e8:	88 23       	and	r24, r24
 1ea:	99 f4       	brne	.+38     	; 0x212 <loop+0x38>
		{
			if(!(PINC&0x04))
 1ec:	9a 99       	sbic	0x13, 2	; 19
 1ee:	25 c0       	rjmp	.+74     	; 0x23a <loop+0x60>
			{
				printf("R1_0");
 1f0:	00 d0       	rcall	.+0      	; 0x1f2 <loop+0x18>
 1f2:	8a e6       	ldi	r24, 0x6A	; 106
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	ad b7       	in	r26, 0x3d	; 61
 1f8:	be b7       	in	r27, 0x3e	; 62
 1fa:	12 96       	adiw	r26, 0x02	; 2
 1fc:	9c 93       	st	X, r25
 1fe:	8e 93       	st	-X, r24
 200:	11 97       	sbiw	r26, 0x01	; 1
 202:	7c d0       	rcall	.+248    	; 0x2fc <printf>
			
				sbi(PORTC,2);
 204:	aa 9a       	sbi	0x15, 2	; 21
				Relay[0] = 1;
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	80 93 8a 00 	sts	0x008A, r24
 20c:	0f 90       	pop	r0
 20e:	0f 90       	pop	r0
 210:	14 c0       	rjmp	.+40     	; 0x23a <loop+0x60>
			}
		}
		else if(Relay[0] == 1) //문닫혀있는데 자석 멀음
 212:	80 91 8a 00 	lds	r24, 0x008A
 216:	81 30       	cpi	r24, 0x01	; 1
 218:	81 f4       	brne	.+32     	; 0x23a <loop+0x60>
		{
			
			if(PINC&0x04)
 21a:	9a 9b       	sbis	0x13, 2	; 19
 21c:	0e c0       	rjmp	.+28     	; 0x23a <loop+0x60>
 21e:	8f ef       	ldi	r24, 0xFF	; 255
 220:	91 e1       	ldi	r25, 0x11	; 17
 222:	aa e7       	ldi	r26, 0x7A	; 122
 224:	81 50       	subi	r24, 0x01	; 1
 226:	90 40       	sbci	r25, 0x00	; 0
 228:	a0 40       	sbci	r26, 0x00	; 0
 22a:	e1 f7       	brne	.-8      	; 0x224 <loop+0x4a>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <loop+0x54>
 22e:	00 00       	nop
			{
				_delay_ms(5000);
				tillend(3, 2);
 230:	83 e0       	ldi	r24, 0x03	; 3
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	62 e0       	ldi	r22, 0x02	; 2
 236:	70 e0       	ldi	r23, 0x00	; 0
 238:	ae df       	rcall	.-164    	; 0x196 <tillend>
			}
		}

		//2번문 제어
		if(Relay[1] == 0) //자석 가까운데 문 열려있음
 23a:	80 91 8b 00 	lds	r24, 0x008B
 23e:	88 23       	and	r24, r24
 240:	99 f4       	brne	.+38     	; 0x268 <loop+0x8e>
		{
			if(!(PINC&0x08))
 242:	9b 99       	sbic	0x13, 3	; 19
 244:	4e c0       	rjmp	.+156    	; 0x2e2 <loop+0x108>
			{
				printf("R2_0");
 246:	00 d0       	rcall	.+0      	; 0x248 <loop+0x6e>
 248:	8f e6       	ldi	r24, 0x6F	; 111
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	ad b7       	in	r26, 0x3d	; 61
 24e:	be b7       	in	r27, 0x3e	; 62
 250:	12 96       	adiw	r26, 0x02	; 2
 252:	9c 93       	st	X, r25
 254:	8e 93       	st	-X, r24
 256:	11 97       	sbiw	r26, 0x01	; 1
 258:	51 d0       	rcall	.+162    	; 0x2fc <printf>
			
				sbi(PORTC,3);
 25a:	ab 9a       	sbi	0x15, 3	; 21
				Relay[1] = 1;
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	80 93 8b 00 	sts	0x008B, r24
 262:	0f 90       	pop	r0
 264:	0f 90       	pop	r0
 266:	08 95       	ret
			}
		}
		else if(Relay[1] == 1) //문닫혀있는데 자석 멀음
 268:	80 91 8b 00 	lds	r24, 0x008B
 26c:	81 30       	cpi	r24, 0x01	; 1
 26e:	c9 f5       	brne	.+114    	; 0x2e2 <loop+0x108>
		{
			
			if(PINC&0x08)
 270:	9b 9b       	sbis	0x13, 3	; 19
 272:	37 c0       	rjmp	.+110    	; 0x2e2 <loop+0x108>
 274:	8f ef       	ldi	r24, 0xFF	; 255
 276:	91 e1       	ldi	r25, 0x11	; 17
 278:	aa e7       	ldi	r26, 0x7A	; 122
 27a:	81 50       	subi	r24, 0x01	; 1
 27c:	90 40       	sbci	r25, 0x00	; 0
 27e:	a0 40       	sbci	r26, 0x00	; 0
 280:	e1 f7       	brne	.-8      	; 0x27a <loop+0xa0>
 282:	00 c0       	rjmp	.+0      	; 0x284 <loop+0xaa>
 284:	00 00       	nop
			{
				_delay_ms(5000);
				tillend(3, 3);
 286:	83 e0       	ldi	r24, 0x03	; 3
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	63 e0       	ldi	r22, 0x03	; 3
 28c:	70 e0       	ldi	r23, 0x00	; 0
 28e:	83 df       	rcall	.-250    	; 0x196 <tillend>
 290:	08 95       	ret
			}
		}
	}
	else if(Test == 1)
 292:	80 91 88 00 	lds	r24, 0x0088
 296:	81 30       	cpi	r24, 0x01	; 1
 298:	21 f5       	brne	.+72     	; 0x2e2 <loop+0x108>
	{
		//자석 1
		if(!(PINC&0x01)) 
 29a:	98 99       	sbic	0x13, 0	; 19
 29c:	03 c0       	rjmp	.+6      	; 0x2a4 <loop+0xca>
		{
			printf("c");
 29e:	83 e6       	ldi	r24, 0x63	; 99
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	3e d0       	rcall	.+124    	; 0x320 <putchar>
		}

		if(PINC&0x01)
 2a4:	98 9b       	sbis	0x13, 0	; 19
 2a6:	03 c0       	rjmp	.+6      	; 0x2ae <loop+0xd4>
		{
			printf("o");
 2a8:	8f e6       	ldi	r24, 0x6F	; 111
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	39 d0       	rcall	.+114    	; 0x320 <putchar>
		}

		//자석 2
		if(!(PINC&0x02)) 
 2ae:	99 99       	sbic	0x13, 1	; 19
 2b0:	0c c0       	rjmp	.+24     	; 0x2ca <loop+0xf0>
		{
			printf(",c");
 2b2:	00 d0       	rcall	.+0      	; 0x2b4 <loop+0xda>
 2b4:	84 e7       	ldi	r24, 0x74	; 116
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	ad b7       	in	r26, 0x3d	; 61
 2ba:	be b7       	in	r27, 0x3e	; 62
 2bc:	12 96       	adiw	r26, 0x02	; 2
 2be:	9c 93       	st	X, r25
 2c0:	8e 93       	st	-X, r24
 2c2:	11 97       	sbiw	r26, 0x01	; 1
 2c4:	1b d0       	rcall	.+54     	; 0x2fc <printf>
 2c6:	0f 90       	pop	r0
 2c8:	0f 90       	pop	r0
		}

		if(PINC&0x02)
 2ca:	99 9b       	sbis	0x13, 1	; 19
 2cc:	0a c0       	rjmp	.+20     	; 0x2e2 <loop+0x108>
		{
			printf(",o");
 2ce:	00 d0       	rcall	.+0      	; 0x2d0 <loop+0xf6>
 2d0:	87 e7       	ldi	r24, 0x77	; 119
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	ed b7       	in	r30, 0x3d	; 61
 2d6:	fe b7       	in	r31, 0x3e	; 62
 2d8:	92 83       	std	Z+2, r25	; 0x02
 2da:	81 83       	std	Z+1, r24	; 0x01
 2dc:	0f d0       	rcall	.+30     	; 0x2fc <printf>
 2de:	0f 90       	pop	r0
 2e0:	0f 90       	pop	r0
 2e2:	08 95       	ret

000002e4 <main>:
}

int main(void)
{
	
    setup();
 2e4:	cc de       	rcall	.-616    	; 0x7e <setup>
	
    while (1) 
    {
		loop();
 2e6:	79 df       	rcall	.-270    	; 0x1da <loop>
 2e8:	8f ef       	ldi	r24, 0xFF	; 255
 2ea:	99 e6       	ldi	r25, 0x69	; 105
 2ec:	a8 e1       	ldi	r26, 0x18	; 24
 2ee:	81 50       	subi	r24, 0x01	; 1
 2f0:	90 40       	sbci	r25, 0x00	; 0
 2f2:	a0 40       	sbci	r26, 0x00	; 0
 2f4:	e1 f7       	brne	.-8      	; 0x2ee <main+0xa>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <main+0x14>
 2f8:	00 00       	nop
 2fa:	f5 cf       	rjmp	.-22     	; 0x2e6 <main+0x2>

000002fc <printf>:
 2fc:	a0 e0       	ldi	r26, 0x00	; 0
 2fe:	b0 e0       	ldi	r27, 0x00	; 0
 300:	e3 e8       	ldi	r30, 0x83	; 131
 302:	f1 e0       	ldi	r31, 0x01	; 1
 304:	9b c2       	rjmp	.+1334   	; 0x83c <__prologue_saves__+0x20>
 306:	fe 01       	movw	r30, r28
 308:	35 96       	adiw	r30, 0x05	; 5
 30a:	61 91       	ld	r22, Z+
 30c:	71 91       	ld	r23, Z+
 30e:	80 91 8e 00 	lds	r24, 0x008E
 312:	90 91 8f 00 	lds	r25, 0x008F
 316:	af 01       	movw	r20, r30
 318:	09 d0       	rcall	.+18     	; 0x32c <vfprintf>
 31a:	20 96       	adiw	r28, 0x00	; 0
 31c:	e2 e0       	ldi	r30, 0x02	; 2
 31e:	aa c2       	rjmp	.+1364   	; 0x874 <__epilogue_restores__+0x20>

00000320 <putchar>:
 320:	60 91 8e 00 	lds	r22, 0x008E
 324:	70 91 8f 00 	lds	r23, 0x008F
 328:	ef d1       	rcall	.+990    	; 0x708 <fputc>
 32a:	08 95       	ret

0000032c <vfprintf>:
 32c:	ac e0       	ldi	r26, 0x0C	; 12
 32e:	b0 e0       	ldi	r27, 0x00	; 0
 330:	eb e9       	ldi	r30, 0x9B	; 155
 332:	f1 e0       	ldi	r31, 0x01	; 1
 334:	73 c2       	rjmp	.+1254   	; 0x81c <__prologue_saves__>
 336:	6c 01       	movw	r12, r24
 338:	1b 01       	movw	r2, r22
 33a:	8a 01       	movw	r16, r20
 33c:	fc 01       	movw	r30, r24
 33e:	17 82       	std	Z+7, r1	; 0x07
 340:	16 82       	std	Z+6, r1	; 0x06
 342:	83 81       	ldd	r24, Z+3	; 0x03
 344:	81 ff       	sbrs	r24, 1
 346:	c4 c1       	rjmp	.+904    	; 0x6d0 <__stack+0x271>
 348:	2e 01       	movw	r4, r28
 34a:	08 94       	sec
 34c:	41 1c       	adc	r4, r1
 34e:	51 1c       	adc	r5, r1
 350:	f6 01       	movw	r30, r12
 352:	93 81       	ldd	r25, Z+3	; 0x03
 354:	f1 01       	movw	r30, r2
 356:	93 fd       	sbrc	r25, 3
 358:	85 91       	lpm	r24, Z+
 35a:	93 ff       	sbrs	r25, 3
 35c:	81 91       	ld	r24, Z+
 35e:	1f 01       	movw	r2, r30
 360:	88 23       	and	r24, r24
 362:	09 f4       	brne	.+2      	; 0x366 <vfprintf+0x3a>
 364:	b1 c1       	rjmp	.+866    	; 0x6c8 <__stack+0x269>
 366:	85 32       	cpi	r24, 0x25	; 37
 368:	39 f4       	brne	.+14     	; 0x378 <vfprintf+0x4c>
 36a:	93 fd       	sbrc	r25, 3
 36c:	85 91       	lpm	r24, Z+
 36e:	93 ff       	sbrs	r25, 3
 370:	81 91       	ld	r24, Z+
 372:	1f 01       	movw	r2, r30
 374:	85 32       	cpi	r24, 0x25	; 37
 376:	21 f4       	brne	.+8      	; 0x380 <vfprintf+0x54>
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	b6 01       	movw	r22, r12
 37c:	c5 d1       	rcall	.+906    	; 0x708 <fputc>
 37e:	e8 cf       	rjmp	.-48     	; 0x350 <vfprintf+0x24>
 380:	ee 24       	eor	r14, r14
 382:	ff 24       	eor	r15, r15
 384:	20 e0       	ldi	r18, 0x00	; 0
 386:	20 32       	cpi	r18, 0x20	; 32
 388:	b0 f4       	brcc	.+44     	; 0x3b6 <vfprintf+0x8a>
 38a:	8b 32       	cpi	r24, 0x2B	; 43
 38c:	69 f0       	breq	.+26     	; 0x3a8 <vfprintf+0x7c>
 38e:	8c 32       	cpi	r24, 0x2C	; 44
 390:	28 f4       	brcc	.+10     	; 0x39c <vfprintf+0x70>
 392:	80 32       	cpi	r24, 0x20	; 32
 394:	51 f0       	breq	.+20     	; 0x3aa <vfprintf+0x7e>
 396:	83 32       	cpi	r24, 0x23	; 35
 398:	71 f4       	brne	.+28     	; 0x3b6 <vfprintf+0x8a>
 39a:	0b c0       	rjmp	.+22     	; 0x3b2 <vfprintf+0x86>
 39c:	8d 32       	cpi	r24, 0x2D	; 45
 39e:	39 f0       	breq	.+14     	; 0x3ae <vfprintf+0x82>
 3a0:	80 33       	cpi	r24, 0x30	; 48
 3a2:	49 f4       	brne	.+18     	; 0x3b6 <vfprintf+0x8a>
 3a4:	21 60       	ori	r18, 0x01	; 1
 3a6:	2c c0       	rjmp	.+88     	; 0x400 <vfprintf+0xd4>
 3a8:	22 60       	ori	r18, 0x02	; 2
 3aa:	24 60       	ori	r18, 0x04	; 4
 3ac:	29 c0       	rjmp	.+82     	; 0x400 <vfprintf+0xd4>
 3ae:	28 60       	ori	r18, 0x08	; 8
 3b0:	27 c0       	rjmp	.+78     	; 0x400 <vfprintf+0xd4>
 3b2:	20 61       	ori	r18, 0x10	; 16
 3b4:	25 c0       	rjmp	.+74     	; 0x400 <vfprintf+0xd4>
 3b6:	27 fd       	sbrc	r18, 7
 3b8:	2c c0       	rjmp	.+88     	; 0x412 <vfprintf+0xe6>
 3ba:	38 2f       	mov	r19, r24
 3bc:	30 53       	subi	r19, 0x30	; 48
 3be:	3a 30       	cpi	r19, 0x0A	; 10
 3c0:	98 f4       	brcc	.+38     	; 0x3e8 <vfprintf+0xbc>
 3c2:	26 ff       	sbrs	r18, 6
 3c4:	08 c0       	rjmp	.+16     	; 0x3d6 <vfprintf+0xaa>
 3c6:	8e 2d       	mov	r24, r14
 3c8:	88 0f       	add	r24, r24
 3ca:	e8 2e       	mov	r14, r24
 3cc:	ee 0c       	add	r14, r14
 3ce:	ee 0c       	add	r14, r14
 3d0:	e8 0e       	add	r14, r24
 3d2:	e3 0e       	add	r14, r19
 3d4:	15 c0       	rjmp	.+42     	; 0x400 <vfprintf+0xd4>
 3d6:	8f 2d       	mov	r24, r15
 3d8:	88 0f       	add	r24, r24
 3da:	f8 2e       	mov	r15, r24
 3dc:	ff 0c       	add	r15, r15
 3de:	ff 0c       	add	r15, r15
 3e0:	f8 0e       	add	r15, r24
 3e2:	f3 0e       	add	r15, r19
 3e4:	20 62       	ori	r18, 0x20	; 32
 3e6:	0c c0       	rjmp	.+24     	; 0x400 <vfprintf+0xd4>
 3e8:	8e 32       	cpi	r24, 0x2E	; 46
 3ea:	21 f4       	brne	.+8      	; 0x3f4 <vfprintf+0xc8>
 3ec:	26 fd       	sbrc	r18, 6
 3ee:	6c c1       	rjmp	.+728    	; 0x6c8 <__stack+0x269>
 3f0:	20 64       	ori	r18, 0x40	; 64
 3f2:	06 c0       	rjmp	.+12     	; 0x400 <vfprintf+0xd4>
 3f4:	8c 36       	cpi	r24, 0x6C	; 108
 3f6:	11 f4       	brne	.+4      	; 0x3fc <vfprintf+0xd0>
 3f8:	20 68       	ori	r18, 0x80	; 128
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <vfprintf+0xd4>
 3fc:	88 36       	cpi	r24, 0x68	; 104
 3fe:	49 f4       	brne	.+18     	; 0x412 <vfprintf+0xe6>
 400:	f1 01       	movw	r30, r2
 402:	93 fd       	sbrc	r25, 3
 404:	85 91       	lpm	r24, Z+
 406:	93 ff       	sbrs	r25, 3
 408:	81 91       	ld	r24, Z+
 40a:	1f 01       	movw	r2, r30
 40c:	88 23       	and	r24, r24
 40e:	09 f0       	breq	.+2      	; 0x412 <vfprintf+0xe6>
 410:	ba cf       	rjmp	.-140    	; 0x386 <vfprintf+0x5a>
 412:	98 2f       	mov	r25, r24
 414:	95 54       	subi	r25, 0x45	; 69
 416:	93 30       	cpi	r25, 0x03	; 3
 418:	18 f0       	brcs	.+6      	; 0x420 <vfprintf+0xf4>
 41a:	90 52       	subi	r25, 0x20	; 32
 41c:	93 30       	cpi	r25, 0x03	; 3
 41e:	28 f4       	brcc	.+10     	; 0x42a <vfprintf+0xfe>
 420:	0c 5f       	subi	r16, 0xFC	; 252
 422:	1f 4f       	sbci	r17, 0xFF	; 255
 424:	ff e3       	ldi	r31, 0x3F	; 63
 426:	f9 83       	std	Y+1, r31	; 0x01
 428:	0d c0       	rjmp	.+26     	; 0x444 <vfprintf+0x118>
 42a:	83 36       	cpi	r24, 0x63	; 99
 42c:	31 f0       	breq	.+12     	; 0x43a <vfprintf+0x10e>
 42e:	83 37       	cpi	r24, 0x73	; 115
 430:	71 f0       	breq	.+28     	; 0x44e <vfprintf+0x122>
 432:	83 35       	cpi	r24, 0x53	; 83
 434:	09 f0       	breq	.+2      	; 0x438 <vfprintf+0x10c>
 436:	5c c0       	rjmp	.+184    	; 0x4f0 <__stack+0x91>
 438:	21 c0       	rjmp	.+66     	; 0x47c <__stack+0x1d>
 43a:	f8 01       	movw	r30, r16
 43c:	80 81       	ld	r24, Z
 43e:	89 83       	std	Y+1, r24	; 0x01
 440:	0e 5f       	subi	r16, 0xFE	; 254
 442:	1f 4f       	sbci	r17, 0xFF	; 255
 444:	42 01       	movw	r8, r4
 446:	71 e0       	ldi	r23, 0x01	; 1
 448:	a7 2e       	mov	r10, r23
 44a:	b1 2c       	mov	r11, r1
 44c:	15 c0       	rjmp	.+42     	; 0x478 <__stack+0x19>
 44e:	62 e0       	ldi	r22, 0x02	; 2
 450:	66 2e       	mov	r6, r22
 452:	71 2c       	mov	r7, r1
 454:	60 0e       	add	r6, r16
 456:	71 1e       	adc	r7, r17
 458:	f8 01       	movw	r30, r16
 45a:	80 80       	ld	r8, Z
 45c:	91 80       	ldd	r9, Z+1	; 0x01
 45e:	26 ff       	sbrs	r18, 6
 460:	03 c0       	rjmp	.+6      	; 0x468 <__stack+0x9>
 462:	6e 2d       	mov	r22, r14
 464:	70 e0       	ldi	r23, 0x00	; 0
 466:	02 c0       	rjmp	.+4      	; 0x46c <__stack+0xd>
 468:	6f ef       	ldi	r22, 0xFF	; 255
 46a:	7f ef       	ldi	r23, 0xFF	; 255
 46c:	c4 01       	movw	r24, r8
 46e:	2c 87       	std	Y+12, r18	; 0x0c
 470:	40 d1       	rcall	.+640    	; 0x6f2 <strnlen>
 472:	5c 01       	movw	r10, r24
 474:	83 01       	movw	r16, r6
 476:	2c 85       	ldd	r18, Y+12	; 0x0c
 478:	2f 77       	andi	r18, 0x7F	; 127
 47a:	16 c0       	rjmp	.+44     	; 0x4a8 <__stack+0x49>
 47c:	52 e0       	ldi	r21, 0x02	; 2
 47e:	65 2e       	mov	r6, r21
 480:	71 2c       	mov	r7, r1
 482:	60 0e       	add	r6, r16
 484:	71 1e       	adc	r7, r17
 486:	f8 01       	movw	r30, r16
 488:	80 80       	ld	r8, Z
 48a:	91 80       	ldd	r9, Z+1	; 0x01
 48c:	26 ff       	sbrs	r18, 6
 48e:	03 c0       	rjmp	.+6      	; 0x496 <__stack+0x37>
 490:	6e 2d       	mov	r22, r14
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	02 c0       	rjmp	.+4      	; 0x49a <__stack+0x3b>
 496:	6f ef       	ldi	r22, 0xFF	; 255
 498:	7f ef       	ldi	r23, 0xFF	; 255
 49a:	c4 01       	movw	r24, r8
 49c:	2c 87       	std	Y+12, r18	; 0x0c
 49e:	1e d1       	rcall	.+572    	; 0x6dc <strnlen_P>
 4a0:	5c 01       	movw	r10, r24
 4a2:	2c 85       	ldd	r18, Y+12	; 0x0c
 4a4:	20 68       	ori	r18, 0x80	; 128
 4a6:	83 01       	movw	r16, r6
 4a8:	23 fd       	sbrc	r18, 3
 4aa:	1e c0       	rjmp	.+60     	; 0x4e8 <__stack+0x89>
 4ac:	07 c0       	rjmp	.+14     	; 0x4bc <__stack+0x5d>
 4ae:	80 e2       	ldi	r24, 0x20	; 32
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	b6 01       	movw	r22, r12
 4b4:	2c 87       	std	Y+12, r18	; 0x0c
 4b6:	28 d1       	rcall	.+592    	; 0x708 <fputc>
 4b8:	fa 94       	dec	r15
 4ba:	2c 85       	ldd	r18, Y+12	; 0x0c
 4bc:	8f 2d       	mov	r24, r15
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	a8 16       	cp	r10, r24
 4c2:	b9 06       	cpc	r11, r25
 4c4:	a0 f3       	brcs	.-24     	; 0x4ae <__stack+0x4f>
 4c6:	10 c0       	rjmp	.+32     	; 0x4e8 <__stack+0x89>
 4c8:	f4 01       	movw	r30, r8
 4ca:	27 fd       	sbrc	r18, 7
 4cc:	85 91       	lpm	r24, Z+
 4ce:	27 ff       	sbrs	r18, 7
 4d0:	81 91       	ld	r24, Z+
 4d2:	4f 01       	movw	r8, r30
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	b6 01       	movw	r22, r12
 4d8:	2c 87       	std	Y+12, r18	; 0x0c
 4da:	16 d1       	rcall	.+556    	; 0x708 <fputc>
 4dc:	2c 85       	ldd	r18, Y+12	; 0x0c
 4de:	f1 10       	cpse	r15, r1
 4e0:	fa 94       	dec	r15
 4e2:	08 94       	sec
 4e4:	a1 08       	sbc	r10, r1
 4e6:	b1 08       	sbc	r11, r1
 4e8:	a1 14       	cp	r10, r1
 4ea:	b1 04       	cpc	r11, r1
 4ec:	69 f7       	brne	.-38     	; 0x4c8 <__stack+0x69>
 4ee:	e9 c0       	rjmp	.+466    	; 0x6c2 <__stack+0x263>
 4f0:	84 36       	cpi	r24, 0x64	; 100
 4f2:	11 f0       	breq	.+4      	; 0x4f8 <__stack+0x99>
 4f4:	89 36       	cpi	r24, 0x69	; 105
 4f6:	41 f5       	brne	.+80     	; 0x548 <__stack+0xe9>
 4f8:	27 ff       	sbrs	r18, 7
 4fa:	08 c0       	rjmp	.+16     	; 0x50c <__stack+0xad>
 4fc:	f8 01       	movw	r30, r16
 4fe:	60 81       	ld	r22, Z
 500:	71 81       	ldd	r23, Z+1	; 0x01
 502:	82 81       	ldd	r24, Z+2	; 0x02
 504:	93 81       	ldd	r25, Z+3	; 0x03
 506:	0c 5f       	subi	r16, 0xFC	; 252
 508:	1f 4f       	sbci	r17, 0xFF	; 255
 50a:	09 c0       	rjmp	.+18     	; 0x51e <__stack+0xbf>
 50c:	f8 01       	movw	r30, r16
 50e:	60 81       	ld	r22, Z
 510:	71 81       	ldd	r23, Z+1	; 0x01
 512:	88 27       	eor	r24, r24
 514:	77 fd       	sbrc	r23, 7
 516:	80 95       	com	r24
 518:	98 2f       	mov	r25, r24
 51a:	0e 5f       	subi	r16, 0xFE	; 254
 51c:	1f 4f       	sbci	r17, 0xFF	; 255
 51e:	4f e6       	ldi	r20, 0x6F	; 111
 520:	b4 2e       	mov	r11, r20
 522:	b2 22       	and	r11, r18
 524:	97 ff       	sbrs	r25, 7
 526:	09 c0       	rjmp	.+18     	; 0x53a <__stack+0xdb>
 528:	90 95       	com	r25
 52a:	80 95       	com	r24
 52c:	70 95       	com	r23
 52e:	61 95       	neg	r22
 530:	7f 4f       	sbci	r23, 0xFF	; 255
 532:	8f 4f       	sbci	r24, 0xFF	; 255
 534:	9f 4f       	sbci	r25, 0xFF	; 255
 536:	f0 e8       	ldi	r31, 0x80	; 128
 538:	bf 2a       	or	r11, r31
 53a:	a2 01       	movw	r20, r4
 53c:	2a e0       	ldi	r18, 0x0A	; 10
 53e:	30 e0       	ldi	r19, 0x00	; 0
 540:	0f d1       	rcall	.+542    	; 0x760 <__ultoa_invert>
 542:	78 2e       	mov	r7, r24
 544:	74 18       	sub	r7, r4
 546:	44 c0       	rjmp	.+136    	; 0x5d0 <__stack+0x171>
 548:	85 37       	cpi	r24, 0x75	; 117
 54a:	31 f4       	brne	.+12     	; 0x558 <__stack+0xf9>
 54c:	3f ee       	ldi	r19, 0xEF	; 239
 54e:	b3 2e       	mov	r11, r19
 550:	b2 22       	and	r11, r18
 552:	2a e0       	ldi	r18, 0x0A	; 10
 554:	30 e0       	ldi	r19, 0x00	; 0
 556:	25 c0       	rjmp	.+74     	; 0x5a2 <__stack+0x143>
 558:	99 ef       	ldi	r25, 0xF9	; 249
 55a:	b9 2e       	mov	r11, r25
 55c:	b2 22       	and	r11, r18
 55e:	8f 36       	cpi	r24, 0x6F	; 111
 560:	c1 f0       	breq	.+48     	; 0x592 <__stack+0x133>
 562:	80 37       	cpi	r24, 0x70	; 112
 564:	20 f4       	brcc	.+8      	; 0x56e <__stack+0x10f>
 566:	88 35       	cpi	r24, 0x58	; 88
 568:	09 f0       	breq	.+2      	; 0x56c <__stack+0x10d>
 56a:	ae c0       	rjmp	.+348    	; 0x6c8 <__stack+0x269>
 56c:	0d c0       	rjmp	.+26     	; 0x588 <__stack+0x129>
 56e:	80 37       	cpi	r24, 0x70	; 112
 570:	21 f0       	breq	.+8      	; 0x57a <__stack+0x11b>
 572:	88 37       	cpi	r24, 0x78	; 120
 574:	09 f0       	breq	.+2      	; 0x578 <__stack+0x119>
 576:	a8 c0       	rjmp	.+336    	; 0x6c8 <__stack+0x269>
 578:	02 c0       	rjmp	.+4      	; 0x57e <__stack+0x11f>
 57a:	20 e1       	ldi	r18, 0x10	; 16
 57c:	b2 2a       	or	r11, r18
 57e:	b4 fe       	sbrs	r11, 4
 580:	0b c0       	rjmp	.+22     	; 0x598 <__stack+0x139>
 582:	84 e0       	ldi	r24, 0x04	; 4
 584:	b8 2a       	or	r11, r24
 586:	08 c0       	rjmp	.+16     	; 0x598 <__stack+0x139>
 588:	b4 fe       	sbrs	r11, 4
 58a:	09 c0       	rjmp	.+18     	; 0x59e <__stack+0x13f>
 58c:	e6 e0       	ldi	r30, 0x06	; 6
 58e:	be 2a       	or	r11, r30
 590:	06 c0       	rjmp	.+12     	; 0x59e <__stack+0x13f>
 592:	28 e0       	ldi	r18, 0x08	; 8
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	05 c0       	rjmp	.+10     	; 0x5a2 <__stack+0x143>
 598:	20 e1       	ldi	r18, 0x10	; 16
 59a:	30 e0       	ldi	r19, 0x00	; 0
 59c:	02 c0       	rjmp	.+4      	; 0x5a2 <__stack+0x143>
 59e:	20 e1       	ldi	r18, 0x10	; 16
 5a0:	32 e0       	ldi	r19, 0x02	; 2
 5a2:	b7 fe       	sbrs	r11, 7
 5a4:	08 c0       	rjmp	.+16     	; 0x5b6 <__stack+0x157>
 5a6:	f8 01       	movw	r30, r16
 5a8:	60 81       	ld	r22, Z
 5aa:	71 81       	ldd	r23, Z+1	; 0x01
 5ac:	82 81       	ldd	r24, Z+2	; 0x02
 5ae:	93 81       	ldd	r25, Z+3	; 0x03
 5b0:	0c 5f       	subi	r16, 0xFC	; 252
 5b2:	1f 4f       	sbci	r17, 0xFF	; 255
 5b4:	07 c0       	rjmp	.+14     	; 0x5c4 <__stack+0x165>
 5b6:	f8 01       	movw	r30, r16
 5b8:	60 81       	ld	r22, Z
 5ba:	71 81       	ldd	r23, Z+1	; 0x01
 5bc:	80 e0       	ldi	r24, 0x00	; 0
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	0e 5f       	subi	r16, 0xFE	; 254
 5c2:	1f 4f       	sbci	r17, 0xFF	; 255
 5c4:	a2 01       	movw	r20, r4
 5c6:	cc d0       	rcall	.+408    	; 0x760 <__ultoa_invert>
 5c8:	78 2e       	mov	r7, r24
 5ca:	74 18       	sub	r7, r4
 5cc:	ff e7       	ldi	r31, 0x7F	; 127
 5ce:	bf 22       	and	r11, r31
 5d0:	b6 fe       	sbrs	r11, 6
 5d2:	0b c0       	rjmp	.+22     	; 0x5ea <__stack+0x18b>
 5d4:	2e ef       	ldi	r18, 0xFE	; 254
 5d6:	b2 22       	and	r11, r18
 5d8:	7e 14       	cp	r7, r14
 5da:	38 f4       	brcc	.+14     	; 0x5ea <__stack+0x18b>
 5dc:	b4 fe       	sbrs	r11, 4
 5de:	07 c0       	rjmp	.+14     	; 0x5ee <__stack+0x18f>
 5e0:	b2 fc       	sbrc	r11, 2
 5e2:	05 c0       	rjmp	.+10     	; 0x5ee <__stack+0x18f>
 5e4:	8f ee       	ldi	r24, 0xEF	; 239
 5e6:	b8 22       	and	r11, r24
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <__stack+0x18f>
 5ea:	a7 2c       	mov	r10, r7
 5ec:	01 c0       	rjmp	.+2      	; 0x5f0 <__stack+0x191>
 5ee:	ae 2c       	mov	r10, r14
 5f0:	8b 2d       	mov	r24, r11
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	b4 fe       	sbrs	r11, 4
 5f6:	0d c0       	rjmp	.+26     	; 0x612 <__stack+0x1b3>
 5f8:	fe 01       	movw	r30, r28
 5fa:	e7 0d       	add	r30, r7
 5fc:	f1 1d       	adc	r31, r1
 5fe:	20 81       	ld	r18, Z
 600:	20 33       	cpi	r18, 0x30	; 48
 602:	19 f4       	brne	.+6      	; 0x60a <__stack+0x1ab>
 604:	e9 ee       	ldi	r30, 0xE9	; 233
 606:	be 22       	and	r11, r30
 608:	09 c0       	rjmp	.+18     	; 0x61c <__stack+0x1bd>
 60a:	a3 94       	inc	r10
 60c:	b2 fe       	sbrs	r11, 2
 60e:	06 c0       	rjmp	.+12     	; 0x61c <__stack+0x1bd>
 610:	04 c0       	rjmp	.+8      	; 0x61a <__stack+0x1bb>
 612:	86 78       	andi	r24, 0x86	; 134
 614:	90 70       	andi	r25, 0x00	; 0
 616:	00 97       	sbiw	r24, 0x00	; 0
 618:	09 f0       	breq	.+2      	; 0x61c <__stack+0x1bd>
 61a:	a3 94       	inc	r10
 61c:	8b 2c       	mov	r8, r11
 61e:	99 24       	eor	r9, r9
 620:	b3 fc       	sbrc	r11, 3
 622:	13 c0       	rjmp	.+38     	; 0x64a <__stack+0x1eb>
 624:	b0 fe       	sbrs	r11, 0
 626:	0e c0       	rjmp	.+28     	; 0x644 <__stack+0x1e5>
 628:	af 14       	cp	r10, r15
 62a:	28 f4       	brcc	.+10     	; 0x636 <__stack+0x1d7>
 62c:	e7 2c       	mov	r14, r7
 62e:	ef 0c       	add	r14, r15
 630:	ea 18       	sub	r14, r10
 632:	af 2c       	mov	r10, r15
 634:	07 c0       	rjmp	.+14     	; 0x644 <__stack+0x1e5>
 636:	e7 2c       	mov	r14, r7
 638:	05 c0       	rjmp	.+10     	; 0x644 <__stack+0x1e5>
 63a:	80 e2       	ldi	r24, 0x20	; 32
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	b6 01       	movw	r22, r12
 640:	63 d0       	rcall	.+198    	; 0x708 <fputc>
 642:	a3 94       	inc	r10
 644:	af 14       	cp	r10, r15
 646:	c8 f3       	brcs	.-14     	; 0x63a <__stack+0x1db>
 648:	04 c0       	rjmp	.+8      	; 0x652 <__stack+0x1f3>
 64a:	af 14       	cp	r10, r15
 64c:	10 f4       	brcc	.+4      	; 0x652 <__stack+0x1f3>
 64e:	fa 18       	sub	r15, r10
 650:	01 c0       	rjmp	.+2      	; 0x654 <__stack+0x1f5>
 652:	ff 24       	eor	r15, r15
 654:	84 fe       	sbrs	r8, 4
 656:	0e c0       	rjmp	.+28     	; 0x674 <__stack+0x215>
 658:	80 e3       	ldi	r24, 0x30	; 48
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	b6 01       	movw	r22, r12
 65e:	54 d0       	rcall	.+168    	; 0x708 <fputc>
 660:	82 fe       	sbrs	r8, 2
 662:	1d c0       	rjmp	.+58     	; 0x69e <__stack+0x23f>
 664:	81 fe       	sbrs	r8, 1
 666:	03 c0       	rjmp	.+6      	; 0x66e <__stack+0x20f>
 668:	88 e5       	ldi	r24, 0x58	; 88
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	10 c0       	rjmp	.+32     	; 0x68e <__stack+0x22f>
 66e:	88 e7       	ldi	r24, 0x78	; 120
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	0d c0       	rjmp	.+26     	; 0x68e <__stack+0x22f>
 674:	c4 01       	movw	r24, r8
 676:	86 78       	andi	r24, 0x86	; 134
 678:	90 70       	andi	r25, 0x00	; 0
 67a:	00 97       	sbiw	r24, 0x00	; 0
 67c:	81 f0       	breq	.+32     	; 0x69e <__stack+0x23f>
 67e:	81 fc       	sbrc	r8, 1
 680:	02 c0       	rjmp	.+4      	; 0x686 <__stack+0x227>
 682:	80 e2       	ldi	r24, 0x20	; 32
 684:	01 c0       	rjmp	.+2      	; 0x688 <__stack+0x229>
 686:	8b e2       	ldi	r24, 0x2B	; 43
 688:	b7 fc       	sbrc	r11, 7
 68a:	8d e2       	ldi	r24, 0x2D	; 45
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	b6 01       	movw	r22, r12
 690:	3b d0       	rcall	.+118    	; 0x708 <fputc>
 692:	05 c0       	rjmp	.+10     	; 0x69e <__stack+0x23f>
 694:	80 e3       	ldi	r24, 0x30	; 48
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	b6 01       	movw	r22, r12
 69a:	36 d0       	rcall	.+108    	; 0x708 <fputc>
 69c:	ea 94       	dec	r14
 69e:	7e 14       	cp	r7, r14
 6a0:	c8 f3       	brcs	.-14     	; 0x694 <__stack+0x235>
 6a2:	7a 94       	dec	r7
 6a4:	f2 01       	movw	r30, r4
 6a6:	e7 0d       	add	r30, r7
 6a8:	f1 1d       	adc	r31, r1
 6aa:	80 81       	ld	r24, Z
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	b6 01       	movw	r22, r12
 6b0:	2b d0       	rcall	.+86     	; 0x708 <fputc>
 6b2:	77 20       	and	r7, r7
 6b4:	b1 f7       	brne	.-20     	; 0x6a2 <__stack+0x243>
 6b6:	05 c0       	rjmp	.+10     	; 0x6c2 <__stack+0x263>
 6b8:	80 e2       	ldi	r24, 0x20	; 32
 6ba:	90 e0       	ldi	r25, 0x00	; 0
 6bc:	b6 01       	movw	r22, r12
 6be:	24 d0       	rcall	.+72     	; 0x708 <fputc>
 6c0:	fa 94       	dec	r15
 6c2:	ff 20       	and	r15, r15
 6c4:	c9 f7       	brne	.-14     	; 0x6b8 <__stack+0x259>
 6c6:	44 ce       	rjmp	.-888    	; 0x350 <vfprintf+0x24>
 6c8:	f6 01       	movw	r30, r12
 6ca:	26 81       	ldd	r18, Z+6	; 0x06
 6cc:	37 81       	ldd	r19, Z+7	; 0x07
 6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <__stack+0x275>
 6d0:	2f ef       	ldi	r18, 0xFF	; 255
 6d2:	3f ef       	ldi	r19, 0xFF	; 255
 6d4:	c9 01       	movw	r24, r18
 6d6:	2c 96       	adiw	r28, 0x0c	; 12
 6d8:	e2 e1       	ldi	r30, 0x12	; 18
 6da:	bc c0       	rjmp	.+376    	; 0x854 <__epilogue_restores__>

000006dc <strnlen_P>:
 6dc:	fc 01       	movw	r30, r24
 6de:	05 90       	lpm	r0, Z+
 6e0:	61 50       	subi	r22, 0x01	; 1
 6e2:	70 40       	sbci	r23, 0x00	; 0
 6e4:	01 10       	cpse	r0, r1
 6e6:	d8 f7       	brcc	.-10     	; 0x6de <strnlen_P+0x2>
 6e8:	80 95       	com	r24
 6ea:	90 95       	com	r25
 6ec:	8e 0f       	add	r24, r30
 6ee:	9f 1f       	adc	r25, r31
 6f0:	08 95       	ret

000006f2 <strnlen>:
 6f2:	fc 01       	movw	r30, r24
 6f4:	61 50       	subi	r22, 0x01	; 1
 6f6:	70 40       	sbci	r23, 0x00	; 0
 6f8:	01 90       	ld	r0, Z+
 6fa:	01 10       	cpse	r0, r1
 6fc:	d8 f7       	brcc	.-10     	; 0x6f4 <strnlen+0x2>
 6fe:	80 95       	com	r24
 700:	90 95       	com	r25
 702:	8e 0f       	add	r24, r30
 704:	9f 1f       	adc	r25, r31
 706:	08 95       	ret

00000708 <fputc>:
 708:	0f 93       	push	r16
 70a:	1f 93       	push	r17
 70c:	cf 93       	push	r28
 70e:	df 93       	push	r29
 710:	8c 01       	movw	r16, r24
 712:	eb 01       	movw	r28, r22
 714:	8b 81       	ldd	r24, Y+3	; 0x03
 716:	81 ff       	sbrs	r24, 1
 718:	1b c0       	rjmp	.+54     	; 0x750 <fputc+0x48>
 71a:	82 ff       	sbrs	r24, 2
 71c:	0d c0       	rjmp	.+26     	; 0x738 <fputc+0x30>
 71e:	2e 81       	ldd	r18, Y+6	; 0x06
 720:	3f 81       	ldd	r19, Y+7	; 0x07
 722:	8c 81       	ldd	r24, Y+4	; 0x04
 724:	9d 81       	ldd	r25, Y+5	; 0x05
 726:	28 17       	cp	r18, r24
 728:	39 07       	cpc	r19, r25
 72a:	64 f4       	brge	.+24     	; 0x744 <fputc+0x3c>
 72c:	e8 81       	ld	r30, Y
 72e:	f9 81       	ldd	r31, Y+1	; 0x01
 730:	01 93       	st	Z+, r16
 732:	f9 83       	std	Y+1, r31	; 0x01
 734:	e8 83       	st	Y, r30
 736:	06 c0       	rjmp	.+12     	; 0x744 <fputc+0x3c>
 738:	e8 85       	ldd	r30, Y+8	; 0x08
 73a:	f9 85       	ldd	r31, Y+9	; 0x09
 73c:	80 2f       	mov	r24, r16
 73e:	09 95       	icall
 740:	00 97       	sbiw	r24, 0x00	; 0
 742:	31 f4       	brne	.+12     	; 0x750 <fputc+0x48>
 744:	8e 81       	ldd	r24, Y+6	; 0x06
 746:	9f 81       	ldd	r25, Y+7	; 0x07
 748:	01 96       	adiw	r24, 0x01	; 1
 74a:	9f 83       	std	Y+7, r25	; 0x07
 74c:	8e 83       	std	Y+6, r24	; 0x06
 74e:	02 c0       	rjmp	.+4      	; 0x754 <fputc+0x4c>
 750:	0f ef       	ldi	r16, 0xFF	; 255
 752:	1f ef       	ldi	r17, 0xFF	; 255
 754:	c8 01       	movw	r24, r16
 756:	df 91       	pop	r29
 758:	cf 91       	pop	r28
 75a:	1f 91       	pop	r17
 75c:	0f 91       	pop	r16
 75e:	08 95       	ret

00000760 <__ultoa_invert>:
 760:	fa 01       	movw	r30, r20
 762:	aa 27       	eor	r26, r26
 764:	28 30       	cpi	r18, 0x08	; 8
 766:	51 f1       	breq	.+84     	; 0x7bc <__ultoa_invert+0x5c>
 768:	20 31       	cpi	r18, 0x10	; 16
 76a:	81 f1       	breq	.+96     	; 0x7cc <__ultoa_invert+0x6c>
 76c:	e8 94       	clt
 76e:	6f 93       	push	r22
 770:	6e 7f       	andi	r22, 0xFE	; 254
 772:	6e 5f       	subi	r22, 0xFE	; 254
 774:	7f 4f       	sbci	r23, 0xFF	; 255
 776:	8f 4f       	sbci	r24, 0xFF	; 255
 778:	9f 4f       	sbci	r25, 0xFF	; 255
 77a:	af 4f       	sbci	r26, 0xFF	; 255
 77c:	b1 e0       	ldi	r27, 0x01	; 1
 77e:	3e d0       	rcall	.+124    	; 0x7fc <__ultoa_invert+0x9c>
 780:	b4 e0       	ldi	r27, 0x04	; 4
 782:	3c d0       	rcall	.+120    	; 0x7fc <__ultoa_invert+0x9c>
 784:	67 0f       	add	r22, r23
 786:	78 1f       	adc	r23, r24
 788:	89 1f       	adc	r24, r25
 78a:	9a 1f       	adc	r25, r26
 78c:	a1 1d       	adc	r26, r1
 78e:	68 0f       	add	r22, r24
 790:	79 1f       	adc	r23, r25
 792:	8a 1f       	adc	r24, r26
 794:	91 1d       	adc	r25, r1
 796:	a1 1d       	adc	r26, r1
 798:	6a 0f       	add	r22, r26
 79a:	71 1d       	adc	r23, r1
 79c:	81 1d       	adc	r24, r1
 79e:	91 1d       	adc	r25, r1
 7a0:	a1 1d       	adc	r26, r1
 7a2:	20 d0       	rcall	.+64     	; 0x7e4 <__ultoa_invert+0x84>
 7a4:	09 f4       	brne	.+2      	; 0x7a8 <__ultoa_invert+0x48>
 7a6:	68 94       	set
 7a8:	3f 91       	pop	r19
 7aa:	2a e0       	ldi	r18, 0x0A	; 10
 7ac:	26 9f       	mul	r18, r22
 7ae:	11 24       	eor	r1, r1
 7b0:	30 19       	sub	r19, r0
 7b2:	30 5d       	subi	r19, 0xD0	; 208
 7b4:	31 93       	st	Z+, r19
 7b6:	de f6       	brtc	.-74     	; 0x76e <__ultoa_invert+0xe>
 7b8:	cf 01       	movw	r24, r30
 7ba:	08 95       	ret
 7bc:	46 2f       	mov	r20, r22
 7be:	47 70       	andi	r20, 0x07	; 7
 7c0:	40 5d       	subi	r20, 0xD0	; 208
 7c2:	41 93       	st	Z+, r20
 7c4:	b3 e0       	ldi	r27, 0x03	; 3
 7c6:	0f d0       	rcall	.+30     	; 0x7e6 <__ultoa_invert+0x86>
 7c8:	c9 f7       	brne	.-14     	; 0x7bc <__ultoa_invert+0x5c>
 7ca:	f6 cf       	rjmp	.-20     	; 0x7b8 <__ultoa_invert+0x58>
 7cc:	46 2f       	mov	r20, r22
 7ce:	4f 70       	andi	r20, 0x0F	; 15
 7d0:	40 5d       	subi	r20, 0xD0	; 208
 7d2:	4a 33       	cpi	r20, 0x3A	; 58
 7d4:	18 f0       	brcs	.+6      	; 0x7dc <__ultoa_invert+0x7c>
 7d6:	49 5d       	subi	r20, 0xD9	; 217
 7d8:	31 fd       	sbrc	r19, 1
 7da:	40 52       	subi	r20, 0x20	; 32
 7dc:	41 93       	st	Z+, r20
 7de:	02 d0       	rcall	.+4      	; 0x7e4 <__ultoa_invert+0x84>
 7e0:	a9 f7       	brne	.-22     	; 0x7cc <__ultoa_invert+0x6c>
 7e2:	ea cf       	rjmp	.-44     	; 0x7b8 <__ultoa_invert+0x58>
 7e4:	b4 e0       	ldi	r27, 0x04	; 4
 7e6:	a6 95       	lsr	r26
 7e8:	97 95       	ror	r25
 7ea:	87 95       	ror	r24
 7ec:	77 95       	ror	r23
 7ee:	67 95       	ror	r22
 7f0:	ba 95       	dec	r27
 7f2:	c9 f7       	brne	.-14     	; 0x7e6 <__ultoa_invert+0x86>
 7f4:	00 97       	sbiw	r24, 0x00	; 0
 7f6:	61 05       	cpc	r22, r1
 7f8:	71 05       	cpc	r23, r1
 7fa:	08 95       	ret
 7fc:	9b 01       	movw	r18, r22
 7fe:	ac 01       	movw	r20, r24
 800:	0a 2e       	mov	r0, r26
 802:	06 94       	lsr	r0
 804:	57 95       	ror	r21
 806:	47 95       	ror	r20
 808:	37 95       	ror	r19
 80a:	27 95       	ror	r18
 80c:	ba 95       	dec	r27
 80e:	c9 f7       	brne	.-14     	; 0x802 <__ultoa_invert+0xa2>
 810:	62 0f       	add	r22, r18
 812:	73 1f       	adc	r23, r19
 814:	84 1f       	adc	r24, r20
 816:	95 1f       	adc	r25, r21
 818:	a0 1d       	adc	r26, r0
 81a:	08 95       	ret

0000081c <__prologue_saves__>:
 81c:	2f 92       	push	r2
 81e:	3f 92       	push	r3
 820:	4f 92       	push	r4
 822:	5f 92       	push	r5
 824:	6f 92       	push	r6
 826:	7f 92       	push	r7
 828:	8f 92       	push	r8
 82a:	9f 92       	push	r9
 82c:	af 92       	push	r10
 82e:	bf 92       	push	r11
 830:	cf 92       	push	r12
 832:	df 92       	push	r13
 834:	ef 92       	push	r14
 836:	ff 92       	push	r15
 838:	0f 93       	push	r16
 83a:	1f 93       	push	r17
 83c:	cf 93       	push	r28
 83e:	df 93       	push	r29
 840:	cd b7       	in	r28, 0x3d	; 61
 842:	de b7       	in	r29, 0x3e	; 62
 844:	ca 1b       	sub	r28, r26
 846:	db 0b       	sbc	r29, r27
 848:	0f b6       	in	r0, 0x3f	; 63
 84a:	f8 94       	cli
 84c:	de bf       	out	0x3e, r29	; 62
 84e:	0f be       	out	0x3f, r0	; 63
 850:	cd bf       	out	0x3d, r28	; 61
 852:	09 94       	ijmp

00000854 <__epilogue_restores__>:
 854:	2a 88       	ldd	r2, Y+18	; 0x12
 856:	39 88       	ldd	r3, Y+17	; 0x11
 858:	48 88       	ldd	r4, Y+16	; 0x10
 85a:	5f 84       	ldd	r5, Y+15	; 0x0f
 85c:	6e 84       	ldd	r6, Y+14	; 0x0e
 85e:	7d 84       	ldd	r7, Y+13	; 0x0d
 860:	8c 84       	ldd	r8, Y+12	; 0x0c
 862:	9b 84       	ldd	r9, Y+11	; 0x0b
 864:	aa 84       	ldd	r10, Y+10	; 0x0a
 866:	b9 84       	ldd	r11, Y+9	; 0x09
 868:	c8 84       	ldd	r12, Y+8	; 0x08
 86a:	df 80       	ldd	r13, Y+7	; 0x07
 86c:	ee 80       	ldd	r14, Y+6	; 0x06
 86e:	fd 80       	ldd	r15, Y+5	; 0x05
 870:	0c 81       	ldd	r16, Y+4	; 0x04
 872:	1b 81       	ldd	r17, Y+3	; 0x03
 874:	aa 81       	ldd	r26, Y+2	; 0x02
 876:	b9 81       	ldd	r27, Y+1	; 0x01
 878:	ce 0f       	add	r28, r30
 87a:	d1 1d       	adc	r29, r1
 87c:	0f b6       	in	r0, 0x3f	; 63
 87e:	f8 94       	cli
 880:	de bf       	out	0x3e, r29	; 62
 882:	0f be       	out	0x3f, r0	; 63
 884:	cd bf       	out	0x3d, r28	; 61
 886:	ed 01       	movw	r28, r26
 888:	08 95       	ret

0000088a <_exit>:
 88a:	f8 94       	cli

0000088c <__stop_program>:
 88c:	ff cf       	rjmp	.-2      	; 0x88c <__stop_program>
