
ATMEGA8_4RELAY.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000032  00800060  000008a6  0000093a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800092  00800092  0000096c  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  0000096c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  000015f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000080  00000000  00000000  000017a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000000dc  00000000  00000000  00001826  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000c25  00000000  00000000  00001902  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000066d  00000000  00000000  00002527  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000ec5  00000000  00000000  00002b94  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000d0  00000000  00000000  00003a5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000332  00000000  00000000  00003b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000837  00000000  00000000  00003e5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000130  00000000  00000000  00004695  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000048  00000000  00000000  000047c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	53 c0       	rjmp	.+166    	; 0xbe <__vector_11>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e6 ea       	ldi	r30, 0xA6	; 166
  3a:	f8 e0       	ldi	r31, 0x08	; 8
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a2 39       	cpi	r26, 0x92	; 146
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a2 e9       	ldi	r26, 0x92	; 146
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	ac 39       	cpi	r26, 0x9C	; 156
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	57 d1       	rcall	.+686    	; 0x308 <main>
  5a:	23 c4       	rjmp	.+2118   	; 0x8a2 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <USART_putchar>:
	return 0;
}

static int USART_putchar(char c, FILE *stream)
{
	if(c == '\n')
  5e:	8a 30       	cpi	r24, 0x0A	; 10
  60:	41 f4       	brne	.+16     	; 0x72 <USART_putchar+0x14>
	{   loop_until_bit_is_set(UCSRA,UDRE);
  62:	5d 9b       	sbis	0x0b, 5	; 11
  64:	fe cf       	rjmp	.-4      	; 0x62 <USART_putchar+0x4>
		UDR = 0x0D;
  66:	8d e0       	ldi	r24, 0x0D	; 13
  68:	8c b9       	out	0x0c, r24	; 12
		loop_until_bit_is_set(UCSRA,UDRE);
  6a:	5d 9b       	sbis	0x0b, 5	; 11
  6c:	fe cf       	rjmp	.-4      	; 0x6a <USART_putchar+0xc>
		UDR = 0x0A;
  6e:	8a e0       	ldi	r24, 0x0A	; 10
  70:	02 c0       	rjmp	.+4      	; 0x76 <USART_putchar+0x18>
	}
	else
	{  loop_until_bit_is_set(UCSRA,UDRE);
  72:	5d 9b       	sbis	0x0b, 5	; 11
  74:	fe cf       	rjmp	.-4      	; 0x72 <USART_putchar+0x14>
		UDR = c;
  76:	8c b9       	out	0x0c, r24	; 12
	}
	return 0;

}
  78:	80 e0       	ldi	r24, 0x00	; 0
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	08 95       	ret

0000007e <setup>:

volatile unsigned char RX_BUF[1], Relay[2], Test;

void setup() {
	
	cli();
  7e:	f8 94       	cli

	//UART
	// 8MHz 38400
	UBRRL = 12;
  80:	8c e0       	ldi	r24, 0x0C	; 12
  82:	89 b9       	out	0x09, r24	; 9

	DDRB = (0 << PB2) | (1 << PB1) | (1 << PB0); // PB2 : 자석2, PB1: 전원제어2 , PB0: 전원제어1
  84:	93 e0       	ldi	r25, 0x03	; 3
  86:	97 bb       	out	0x17, r25	; 23
	DDRC = (1 << PC3) | (1 << PC2) | (0 << PC0); // PC3: 데드볼트2, PC2: 데드볼트1, PC0: 자석1
  88:	84 bb       	out	0x14, r24	; 20
	DDRD = (1 << PD1) | (0 << PD0); //UART
  8a:	82 e0       	ldi	r24, 0x02	; 2
  8c:	81 bb       	out	0x11, r24	; 17
	
	PORTC = (1 << PC0); // 자석1 풀업 저항
  8e:	81 e0       	ldi	r24, 0x01	; 1
  90:	85 bb       	out	0x15, r24	; 21
	PORTB = (1 << PB2); // 자석2 풀업 저항
  92:	94 e0       	ldi	r25, 0x04	; 4
  94:	98 bb       	out	0x18, r25	; 24

	UCSRB = (1 << RXCIE) | (1 << RXEN) | (1 << TXEN);
  96:	98 e9       	ldi	r25, 0x98	; 152
  98:	9a b9       	out	0x0a, r25	; 10

	Relay[0] = 1;
  9a:	80 93 94 00 	sts	0x0094, r24
	Relay[1] = 1;
  9e:	80 93 95 00 	sts	0x0095, r24

	Test = 0;
  a2:	10 92 92 00 	sts	0x0092, r1

	//전원 High
	sbi(PORTB, 0);
  a6:	c0 9a       	sbi	0x18, 0	; 24
	sbi(PORTB, 1);
  a8:	c1 9a       	sbi	0x18, 1	; 24

	//데드볼트 High
	sbi(PORTC, 2);
  aa:	aa 9a       	sbi	0x15, 2	; 21
	sbi(PORTC, 3);
  ac:	ab 9a       	sbi	0x15, 3	; 21

	stdout = &device;
  ae:	84 e8       	ldi	r24, 0x84	; 132
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	90 93 99 00 	sts	0x0099, r25
  b6:	80 93 98 00 	sts	0x0098, r24

	sei();
  ba:	78 94       	sei

}
  bc:	08 95       	ret

000000be <__vector_11>:

ISR(SIG_UART_RECV)
{
  be:	1f 92       	push	r1
  c0:	0f 92       	push	r0
  c2:	0f b6       	in	r0, 0x3f	; 63
  c4:	0f 92       	push	r0
  c6:	11 24       	eor	r1, r1
  c8:	8f 93       	push	r24
  ca:	9f 93       	push	r25
  cc:	af 93       	push	r26
  ce:	bf 93       	push	r27
	cli();
  d0:	f8 94       	cli

	while((UCSRA &(1<<RXC)) == 0);
  d2:	5f 9b       	sbis	0x0b, 7	; 11
  d4:	fe cf       	rjmp	.-4      	; 0xd2 <__vector_11+0x14>
	
	RX_BUF[0] = UDR;
  d6:	8c b1       	in	r24, 0x0c	; 12
  d8:	80 93 93 00 	sts	0x0093, r24

	if(RX_BUF[0] == '1') // 1번문 열기
  dc:	80 91 93 00 	lds	r24, 0x0093
  e0:	81 33       	cpi	r24, 0x31	; 49
  e2:	51 f4       	brne	.+20     	; 0xf8 <__vector_11+0x3a>
	{
		if(Test == 1)
  e4:	80 91 92 00 	lds	r24, 0x0092
  e8:	81 30       	cpi	r24, 0x01	; 1
  ea:	11 f4       	brne	.+4      	; 0xf0 <__vector_11+0x32>
		{
			cbi(PORTC,2);
  ec:	aa 98       	cbi	0x15, 2	; 21
  ee:	4d c0       	rjmp	.+154    	; 0x18a <__vector_11+0xcc>
		}
		else
		{
			cbi(PORTC,2);
  f0:	aa 98       	cbi	0x15, 2	; 21
			Relay[0] = 0;
  f2:	10 92 94 00 	sts	0x0094, r1
  f6:	13 c0       	rjmp	.+38     	; 0x11e <__vector_11+0x60>
			_delay_ms(5000);
		}
	}
	else if(RX_BUF[0] == '3') // 1번문 닫기
  f8:	80 91 93 00 	lds	r24, 0x0093
  fc:	83 33       	cpi	r24, 0x33	; 51
  fe:	11 f4       	brne	.+4      	; 0x104 <__vector_11+0x46>
	{
		sbi(PORTC,2);
 100:	aa 9a       	sbi	0x15, 2	; 21
 102:	43 c0       	rjmp	.+134    	; 0x18a <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '4') // 2번문 열기
 104:	80 91 93 00 	lds	r24, 0x0093
 108:	84 33       	cpi	r24, 0x34	; 52
 10a:	99 f4       	brne	.+38     	; 0x132 <__vector_11+0x74>
	{
		if(Test == 1)
 10c:	80 91 92 00 	lds	r24, 0x0092
 110:	81 30       	cpi	r24, 0x01	; 1
 112:	11 f4       	brne	.+4      	; 0x118 <__vector_11+0x5a>
		{
			cbi(PORTC, 3);
 114:	ab 98       	cbi	0x15, 3	; 21
 116:	39 c0       	rjmp	.+114    	; 0x18a <__vector_11+0xcc>
		}
		else
		{
			cbi(PORTC,3);
 118:	ab 98       	cbi	0x15, 3	; 21
			Relay[1] = 0;
 11a:	10 92 95 00 	sts	0x0095, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11e:	8f ef       	ldi	r24, 0xFF	; 255
 120:	91 e1       	ldi	r25, 0x11	; 17
 122:	aa e7       	ldi	r26, 0x7A	; 122
 124:	81 50       	subi	r24, 0x01	; 1
 126:	90 40       	sbci	r25, 0x00	; 0
 128:	a0 40       	sbci	r26, 0x00	; 0
 12a:	e1 f7       	brne	.-8      	; 0x124 <__vector_11+0x66>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <__vector_11+0x70>
 12e:	00 00       	nop
 130:	2c c0       	rjmp	.+88     	; 0x18a <__vector_11+0xcc>
			_delay_ms(5000);
		}
	}
	else if(RX_BUF[0] == '5') // 2번문 닫기
 132:	80 91 93 00 	lds	r24, 0x0093
 136:	85 33       	cpi	r24, 0x35	; 53
 138:	11 f4       	brne	.+4      	; 0x13e <__vector_11+0x80>
	{
		sbi(PORTC,3);
 13a:	ab 9a       	sbi	0x15, 3	; 21
 13c:	26 c0       	rjmp	.+76     	; 0x18a <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '6') // 1번 전원 제어 (NC)
 13e:	80 91 93 00 	lds	r24, 0x0093
 142:	86 33       	cpi	r24, 0x36	; 54
 144:	11 f4       	brne	.+4      	; 0x14a <__vector_11+0x8c>
	{
		sbi(PORTB,0);
 146:	c0 9a       	sbi	0x18, 0	; 24
 148:	20 c0       	rjmp	.+64     	; 0x18a <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '7') // 1번 전원 제어 (NO)
 14a:	80 91 93 00 	lds	r24, 0x0093
 14e:	87 33       	cpi	r24, 0x37	; 55
 150:	11 f4       	brne	.+4      	; 0x156 <__vector_11+0x98>
	{
		cbi(PORTB,0);
 152:	c0 98       	cbi	0x18, 0	; 24
 154:	1a c0       	rjmp	.+52     	; 0x18a <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '8') // 2번 전원 제어 (NC)
 156:	80 91 93 00 	lds	r24, 0x0093
 15a:	88 33       	cpi	r24, 0x38	; 56
 15c:	11 f4       	brne	.+4      	; 0x162 <__vector_11+0xa4>
	{
		sbi(PORTB,1);
 15e:	c1 9a       	sbi	0x18, 1	; 24
 160:	14 c0       	rjmp	.+40     	; 0x18a <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '9') // 2번 전원 제어 (NO)
 162:	80 91 93 00 	lds	r24, 0x0093
 166:	89 33       	cpi	r24, 0x39	; 57
 168:	11 f4       	brne	.+4      	; 0x16e <__vector_11+0xb0>
	{
		cbi(PORTB,1);
 16a:	c1 98       	cbi	0x18, 1	; 24
 16c:	0e c0       	rjmp	.+28     	; 0x18a <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == 'T') 
 16e:	80 91 93 00 	lds	r24, 0x0093
 172:	84 35       	cpi	r24, 0x54	; 84
 174:	21 f4       	brne	.+8      	; 0x17e <__vector_11+0xc0>
	{
		Test = 1;  // set test mode
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	80 93 92 00 	sts	0x0092, r24
 17c:	06 c0       	rjmp	.+12     	; 0x18a <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == 'F') 
 17e:	80 91 93 00 	lds	r24, 0x0093
 182:	86 34       	cpi	r24, 0x46	; 70
 184:	11 f4       	brne	.+4      	; 0x18a <__vector_11+0xcc>
	{
		Test = 0;  // end test mode
 186:	10 92 92 00 	sts	0x0092, r1
	}

	sei();
 18a:	78 94       	sei
}
 18c:	bf 91       	pop	r27
 18e:	af 91       	pop	r26
 190:	9f 91       	pop	r25
 192:	8f 91       	pop	r24
 194:	0f 90       	pop	r0
 196:	0f be       	out	0x3f, r0	; 63
 198:	0f 90       	pop	r0
 19a:	1f 90       	pop	r1
 19c:	18 95       	reti

0000019e <tillend>:

void tillend(int x, int n)
{
	if(n==2){
 19e:	62 30       	cpi	r22, 0x02	; 2
 1a0:	71 05       	cpc	r23, r1
 1a2:	71 f4       	brne	.+28     	; 0x1c0 <tillend+0x22>
		printf("R1_2");
 1a4:	00 d0       	rcall	.+0      	; 0x1a6 <tillend+0x8>
 1a6:	80 e6       	ldi	r24, 0x60	; 96
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	ed b7       	in	r30, 0x3d	; 61
 1ac:	fe b7       	in	r31, 0x3e	; 62
 1ae:	92 83       	std	Z+2, r25	; 0x02
 1b0:	81 83       	std	Z+1, r24	; 0x01
 1b2:	b6 d0       	rcall	.+364    	; 0x320 <printf>
		Relay[0] = 2;
 1b4:	82 e0       	ldi	r24, 0x02	; 2
 1b6:	80 93 94 00 	sts	0x0094, r24
 1ba:	0f 90       	pop	r0
 1bc:	0f 90       	pop	r0
 1be:	08 95       	ret
	}
	else if(n==3)
 1c0:	63 30       	cpi	r22, 0x03	; 3
 1c2:	71 05       	cpc	r23, r1
 1c4:	69 f4       	brne	.+26     	; 0x1e0 <tillend+0x42>
	{
		printf("R2_2");
 1c6:	00 d0       	rcall	.+0      	; 0x1c8 <tillend+0x2a>
 1c8:	85 e6       	ldi	r24, 0x65	; 101
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	ed b7       	in	r30, 0x3d	; 61
 1ce:	fe b7       	in	r31, 0x3e	; 62
 1d0:	92 83       	std	Z+2, r25	; 0x02
 1d2:	81 83       	std	Z+1, r24	; 0x01
 1d4:	a5 d0       	rcall	.+330    	; 0x320 <printf>
		Relay[1] = 2;
 1d6:	82 e0       	ldi	r24, 0x02	; 2
 1d8:	80 93 95 00 	sts	0x0095, r24
 1dc:	0f 90       	pop	r0
 1de:	0f 90       	pop	r0
 1e0:	08 95       	ret

000001e2 <loop>:

}

void loop(){

	if(Test == 0)
 1e2:	80 91 92 00 	lds	r24, 0x0092
 1e6:	88 23       	and	r24, r24
 1e8:	09 f0       	breq	.+2      	; 0x1ec <loop+0xa>
 1ea:	56 c0       	rjmp	.+172    	; 0x298 <loop+0xb6>
	{
		//1번문 제어
		if(Relay[0] == 0) //자석 가까운데 문 열려있음
 1ec:	80 91 94 00 	lds	r24, 0x0094
 1f0:	88 23       	and	r24, r24
 1f2:	99 f4       	brne	.+38     	; 0x21a <loop+0x38>
		{
			if(!(PINC&0x01))
 1f4:	98 99       	sbic	0x13, 0	; 19
 1f6:	25 c0       	rjmp	.+74     	; 0x242 <loop+0x60>
			{
				printf("R1_0");
 1f8:	00 d0       	rcall	.+0      	; 0x1fa <loop+0x18>
 1fa:	8a e6       	ldi	r24, 0x6A	; 106
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	ad b7       	in	r26, 0x3d	; 61
 200:	be b7       	in	r27, 0x3e	; 62
 202:	12 96       	adiw	r26, 0x02	; 2
 204:	9c 93       	st	X, r25
 206:	8e 93       	st	-X, r24
 208:	11 97       	sbiw	r26, 0x01	; 1
 20a:	8a d0       	rcall	.+276    	; 0x320 <printf>
			
				sbi(PORTC,2);
 20c:	aa 9a       	sbi	0x15, 2	; 21
				Relay[0] = 1;
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	80 93 94 00 	sts	0x0094, r24
 214:	0f 90       	pop	r0
 216:	0f 90       	pop	r0
 218:	14 c0       	rjmp	.+40     	; 0x242 <loop+0x60>
			}
		}
		else if(Relay[0] == 1) //문닫혀있는데 자석 멀음
 21a:	80 91 94 00 	lds	r24, 0x0094
 21e:	81 30       	cpi	r24, 0x01	; 1
 220:	81 f4       	brne	.+32     	; 0x242 <loop+0x60>
		{
			
			if(PINC&0x01)
 222:	98 9b       	sbis	0x13, 0	; 19
 224:	0e c0       	rjmp	.+28     	; 0x242 <loop+0x60>
 226:	8f ef       	ldi	r24, 0xFF	; 255
 228:	91 e1       	ldi	r25, 0x11	; 17
 22a:	aa e7       	ldi	r26, 0x7A	; 122
 22c:	81 50       	subi	r24, 0x01	; 1
 22e:	90 40       	sbci	r25, 0x00	; 0
 230:	a0 40       	sbci	r26, 0x00	; 0
 232:	e1 f7       	brne	.-8      	; 0x22c <loop+0x4a>
 234:	00 c0       	rjmp	.+0      	; 0x236 <loop+0x54>
 236:	00 00       	nop
			{
				_delay_ms(5000);
				tillend(3, 2);
 238:	83 e0       	ldi	r24, 0x03	; 3
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	62 e0       	ldi	r22, 0x02	; 2
 23e:	70 e0       	ldi	r23, 0x00	; 0
 240:	ae df       	rcall	.-164    	; 0x19e <tillend>
			}
		}

		//2번문 제어
		if(Relay[1] == 0) //자석 가까운데 문 열려있음
 242:	80 91 95 00 	lds	r24, 0x0095
 246:	88 23       	and	r24, r24
 248:	89 f4       	brne	.+34     	; 0x26c <loop+0x8a>
		{
			if(!(PINB&0x04))
 24a:	b2 99       	sbic	0x16, 2	; 22
 24c:	5c c0       	rjmp	.+184    	; 0x306 <loop+0x124>
			{
				printf("R2_0");
 24e:	00 d0       	rcall	.+0      	; 0x250 <loop+0x6e>
 250:	8f e6       	ldi	r24, 0x6F	; 111
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	ad b7       	in	r26, 0x3d	; 61
 256:	be b7       	in	r27, 0x3e	; 62
 258:	12 96       	adiw	r26, 0x02	; 2
 25a:	9c 93       	st	X, r25
 25c:	8e 93       	st	-X, r24
 25e:	11 97       	sbiw	r26, 0x01	; 1
 260:	5f d0       	rcall	.+190    	; 0x320 <printf>
			
				sbi(PORTC,3);
 262:	ab 9a       	sbi	0x15, 3	; 21
				Relay[1] = 1;
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	80 93 95 00 	sts	0x0095, r24
 26a:	3c c0       	rjmp	.+120    	; 0x2e4 <loop+0x102>
			}
		}
		else if(Relay[1] == 1) //문닫혀있는데 자석 멀음
 26c:	80 91 95 00 	lds	r24, 0x0095
 270:	81 30       	cpi	r24, 0x01	; 1
 272:	09 f0       	breq	.+2      	; 0x276 <loop+0x94>
 274:	48 c0       	rjmp	.+144    	; 0x306 <loop+0x124>
		{
			
			if(PINB&0x04)
 276:	b2 9b       	sbis	0x16, 2	; 22
 278:	46 c0       	rjmp	.+140    	; 0x306 <loop+0x124>
 27a:	8f ef       	ldi	r24, 0xFF	; 255
 27c:	91 e1       	ldi	r25, 0x11	; 17
 27e:	aa e7       	ldi	r26, 0x7A	; 122
 280:	81 50       	subi	r24, 0x01	; 1
 282:	90 40       	sbci	r25, 0x00	; 0
 284:	a0 40       	sbci	r26, 0x00	; 0
 286:	e1 f7       	brne	.-8      	; 0x280 <loop+0x9e>
 288:	00 c0       	rjmp	.+0      	; 0x28a <loop+0xa8>
 28a:	00 00       	nop
			{
				_delay_ms(5000);
				tillend(3, 3);
 28c:	83 e0       	ldi	r24, 0x03	; 3
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	63 e0       	ldi	r22, 0x03	; 3
 292:	70 e0       	ldi	r23, 0x00	; 0
 294:	84 df       	rcall	.-248    	; 0x19e <tillend>
 296:	08 95       	ret
			}
		}
	}
	else if(Test == 1) // 디바이스 테스트 (자석)
 298:	80 91 92 00 	lds	r24, 0x0092
 29c:	81 30       	cpi	r24, 0x01	; 1
 29e:	99 f5       	brne	.+102    	; 0x306 <loop+0x124>
	{
		
		if(((PINC&0x01) != 0x01) && ((PINB&0x04) != 0x04))
 2a0:	98 99       	sbic	0x13, 0	; 19
 2a2:	06 c0       	rjmp	.+12     	; 0x2b0 <loop+0xce>
 2a4:	b2 99       	sbic	0x16, 2	; 22
 2a6:	04 c0       	rjmp	.+8      	; 0x2b0 <loop+0xce>
		{
			printf("c,c");
 2a8:	00 d0       	rcall	.+0      	; 0x2aa <loop+0xc8>
 2aa:	84 e7       	ldi	r24, 0x74	; 116
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	13 c0       	rjmp	.+38     	; 0x2d6 <loop+0xf4>
		
		}
		else if(((PINC&0x01) != 0x01) &&((PINB&0x04) == 0x04))
 2b0:	98 99       	sbic	0x13, 0	; 19
 2b2:	0a c0       	rjmp	.+20     	; 0x2c8 <loop+0xe6>
 2b4:	b2 9b       	sbis	0x16, 2	; 22
 2b6:	08 c0       	rjmp	.+16     	; 0x2c8 <loop+0xe6>
		{
			printf("c,o");
 2b8:	00 d0       	rcall	.+0      	; 0x2ba <loop+0xd8>
 2ba:	88 e7       	ldi	r24, 0x78	; 120
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	ed b7       	in	r30, 0x3d	; 61
 2c0:	fe b7       	in	r31, 0x3e	; 62
 2c2:	92 83       	std	Z+2, r25	; 0x02
 2c4:	81 83       	std	Z+1, r24	; 0x01
 2c6:	0d c0       	rjmp	.+26     	; 0x2e2 <loop+0x100>
		
		}
		else if(((PINC&0x01) == 0x01) && ((PINB&0x04) != 0x04))
 2c8:	98 9b       	sbis	0x13, 0	; 19
 2ca:	0f c0       	rjmp	.+30     	; 0x2ea <loop+0x108>
 2cc:	b2 99       	sbic	0x16, 2	; 22
 2ce:	0d c0       	rjmp	.+26     	; 0x2ea <loop+0x108>
		{
			printf("o,c");
 2d0:	00 d0       	rcall	.+0      	; 0x2d2 <loop+0xf0>
 2d2:	8c e7       	ldi	r24, 0x7C	; 124
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	ad b7       	in	r26, 0x3d	; 61
 2d8:	be b7       	in	r27, 0x3e	; 62
 2da:	12 96       	adiw	r26, 0x02	; 2
 2dc:	9c 93       	st	X, r25
 2de:	8e 93       	st	-X, r24
 2e0:	11 97       	sbiw	r26, 0x01	; 1
 2e2:	1e d0       	rcall	.+60     	; 0x320 <printf>
 2e4:	0f 90       	pop	r0
 2e6:	0f 90       	pop	r0
 2e8:	08 95       	ret
		
		}
		else if(((PINC&0x01) == 0x01) && ((PINB&0x04) == 0x04))
 2ea:	98 9b       	sbis	0x13, 0	; 19
 2ec:	0c c0       	rjmp	.+24     	; 0x306 <loop+0x124>
 2ee:	b2 9b       	sbis	0x16, 2	; 22
 2f0:	0a c0       	rjmp	.+20     	; 0x306 <loop+0x124>
		{
			printf("o,o");
 2f2:	00 d0       	rcall	.+0      	; 0x2f4 <loop+0x112>
 2f4:	80 e8       	ldi	r24, 0x80	; 128
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	ed b7       	in	r30, 0x3d	; 61
 2fa:	fe b7       	in	r31, 0x3e	; 62
 2fc:	92 83       	std	Z+2, r25	; 0x02
 2fe:	81 83       	std	Z+1, r24	; 0x01
 300:	0f d0       	rcall	.+30     	; 0x320 <printf>
 302:	0f 90       	pop	r0
 304:	0f 90       	pop	r0
 306:	08 95       	ret

00000308 <main>:
}

int main(void)
{
	
    setup();
 308:	ba de       	rcall	.-652    	; 0x7e <setup>
	
    while (1) 
    {
		loop();
 30a:	6b df       	rcall	.-298    	; 0x1e2 <loop>
 30c:	8f ef       	ldi	r24, 0xFF	; 255
 30e:	99 e6       	ldi	r25, 0x69	; 105
 310:	a8 e1       	ldi	r26, 0x18	; 24
 312:	81 50       	subi	r24, 0x01	; 1
 314:	90 40       	sbci	r25, 0x00	; 0
 316:	a0 40       	sbci	r26, 0x00	; 0
 318:	e1 f7       	brne	.-8      	; 0x312 <main+0xa>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <main+0x14>
 31c:	00 00       	nop
 31e:	f5 cf       	rjmp	.-22     	; 0x30a <main+0x2>

00000320 <printf>:
 320:	a0 e0       	ldi	r26, 0x00	; 0
 322:	b0 e0       	ldi	r27, 0x00	; 0
 324:	e5 e9       	ldi	r30, 0x95	; 149
 326:	f1 e0       	ldi	r31, 0x01	; 1
 328:	95 c2       	rjmp	.+1322   	; 0x854 <__prologue_saves__+0x20>
 32a:	fe 01       	movw	r30, r28
 32c:	35 96       	adiw	r30, 0x05	; 5
 32e:	61 91       	ld	r22, Z+
 330:	71 91       	ld	r23, Z+
 332:	80 91 98 00 	lds	r24, 0x0098
 336:	90 91 99 00 	lds	r25, 0x0099
 33a:	af 01       	movw	r20, r30
 33c:	03 d0       	rcall	.+6      	; 0x344 <vfprintf>
 33e:	20 96       	adiw	r28, 0x00	; 0
 340:	e2 e0       	ldi	r30, 0x02	; 2
 342:	a4 c2       	rjmp	.+1352   	; 0x88c <__epilogue_restores__+0x20>

00000344 <vfprintf>:
 344:	ac e0       	ldi	r26, 0x0C	; 12
 346:	b0 e0       	ldi	r27, 0x00	; 0
 348:	e7 ea       	ldi	r30, 0xA7	; 167
 34a:	f1 e0       	ldi	r31, 0x01	; 1
 34c:	73 c2       	rjmp	.+1254   	; 0x834 <__prologue_saves__>
 34e:	6c 01       	movw	r12, r24
 350:	1b 01       	movw	r2, r22
 352:	8a 01       	movw	r16, r20
 354:	fc 01       	movw	r30, r24
 356:	17 82       	std	Z+7, r1	; 0x07
 358:	16 82       	std	Z+6, r1	; 0x06
 35a:	83 81       	ldd	r24, Z+3	; 0x03
 35c:	81 ff       	sbrs	r24, 1
 35e:	c4 c1       	rjmp	.+904    	; 0x6e8 <__stack+0x289>
 360:	2e 01       	movw	r4, r28
 362:	08 94       	sec
 364:	41 1c       	adc	r4, r1
 366:	51 1c       	adc	r5, r1
 368:	f6 01       	movw	r30, r12
 36a:	93 81       	ldd	r25, Z+3	; 0x03
 36c:	f1 01       	movw	r30, r2
 36e:	93 fd       	sbrc	r25, 3
 370:	85 91       	lpm	r24, Z+
 372:	93 ff       	sbrs	r25, 3
 374:	81 91       	ld	r24, Z+
 376:	1f 01       	movw	r2, r30
 378:	88 23       	and	r24, r24
 37a:	09 f4       	brne	.+2      	; 0x37e <vfprintf+0x3a>
 37c:	b1 c1       	rjmp	.+866    	; 0x6e0 <__stack+0x281>
 37e:	85 32       	cpi	r24, 0x25	; 37
 380:	39 f4       	brne	.+14     	; 0x390 <vfprintf+0x4c>
 382:	93 fd       	sbrc	r25, 3
 384:	85 91       	lpm	r24, Z+
 386:	93 ff       	sbrs	r25, 3
 388:	81 91       	ld	r24, Z+
 38a:	1f 01       	movw	r2, r30
 38c:	85 32       	cpi	r24, 0x25	; 37
 38e:	21 f4       	brne	.+8      	; 0x398 <vfprintf+0x54>
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	b6 01       	movw	r22, r12
 394:	c5 d1       	rcall	.+906    	; 0x720 <fputc>
 396:	e8 cf       	rjmp	.-48     	; 0x368 <vfprintf+0x24>
 398:	ee 24       	eor	r14, r14
 39a:	ff 24       	eor	r15, r15
 39c:	20 e0       	ldi	r18, 0x00	; 0
 39e:	20 32       	cpi	r18, 0x20	; 32
 3a0:	b0 f4       	brcc	.+44     	; 0x3ce <vfprintf+0x8a>
 3a2:	8b 32       	cpi	r24, 0x2B	; 43
 3a4:	69 f0       	breq	.+26     	; 0x3c0 <vfprintf+0x7c>
 3a6:	8c 32       	cpi	r24, 0x2C	; 44
 3a8:	28 f4       	brcc	.+10     	; 0x3b4 <vfprintf+0x70>
 3aa:	80 32       	cpi	r24, 0x20	; 32
 3ac:	51 f0       	breq	.+20     	; 0x3c2 <vfprintf+0x7e>
 3ae:	83 32       	cpi	r24, 0x23	; 35
 3b0:	71 f4       	brne	.+28     	; 0x3ce <vfprintf+0x8a>
 3b2:	0b c0       	rjmp	.+22     	; 0x3ca <vfprintf+0x86>
 3b4:	8d 32       	cpi	r24, 0x2D	; 45
 3b6:	39 f0       	breq	.+14     	; 0x3c6 <vfprintf+0x82>
 3b8:	80 33       	cpi	r24, 0x30	; 48
 3ba:	49 f4       	brne	.+18     	; 0x3ce <vfprintf+0x8a>
 3bc:	21 60       	ori	r18, 0x01	; 1
 3be:	2c c0       	rjmp	.+88     	; 0x418 <vfprintf+0xd4>
 3c0:	22 60       	ori	r18, 0x02	; 2
 3c2:	24 60       	ori	r18, 0x04	; 4
 3c4:	29 c0       	rjmp	.+82     	; 0x418 <vfprintf+0xd4>
 3c6:	28 60       	ori	r18, 0x08	; 8
 3c8:	27 c0       	rjmp	.+78     	; 0x418 <vfprintf+0xd4>
 3ca:	20 61       	ori	r18, 0x10	; 16
 3cc:	25 c0       	rjmp	.+74     	; 0x418 <vfprintf+0xd4>
 3ce:	27 fd       	sbrc	r18, 7
 3d0:	2c c0       	rjmp	.+88     	; 0x42a <vfprintf+0xe6>
 3d2:	38 2f       	mov	r19, r24
 3d4:	30 53       	subi	r19, 0x30	; 48
 3d6:	3a 30       	cpi	r19, 0x0A	; 10
 3d8:	98 f4       	brcc	.+38     	; 0x400 <vfprintf+0xbc>
 3da:	26 ff       	sbrs	r18, 6
 3dc:	08 c0       	rjmp	.+16     	; 0x3ee <vfprintf+0xaa>
 3de:	8e 2d       	mov	r24, r14
 3e0:	88 0f       	add	r24, r24
 3e2:	e8 2e       	mov	r14, r24
 3e4:	ee 0c       	add	r14, r14
 3e6:	ee 0c       	add	r14, r14
 3e8:	e8 0e       	add	r14, r24
 3ea:	e3 0e       	add	r14, r19
 3ec:	15 c0       	rjmp	.+42     	; 0x418 <vfprintf+0xd4>
 3ee:	8f 2d       	mov	r24, r15
 3f0:	88 0f       	add	r24, r24
 3f2:	f8 2e       	mov	r15, r24
 3f4:	ff 0c       	add	r15, r15
 3f6:	ff 0c       	add	r15, r15
 3f8:	f8 0e       	add	r15, r24
 3fa:	f3 0e       	add	r15, r19
 3fc:	20 62       	ori	r18, 0x20	; 32
 3fe:	0c c0       	rjmp	.+24     	; 0x418 <vfprintf+0xd4>
 400:	8e 32       	cpi	r24, 0x2E	; 46
 402:	21 f4       	brne	.+8      	; 0x40c <vfprintf+0xc8>
 404:	26 fd       	sbrc	r18, 6
 406:	6c c1       	rjmp	.+728    	; 0x6e0 <__stack+0x281>
 408:	20 64       	ori	r18, 0x40	; 64
 40a:	06 c0       	rjmp	.+12     	; 0x418 <vfprintf+0xd4>
 40c:	8c 36       	cpi	r24, 0x6C	; 108
 40e:	11 f4       	brne	.+4      	; 0x414 <vfprintf+0xd0>
 410:	20 68       	ori	r18, 0x80	; 128
 412:	02 c0       	rjmp	.+4      	; 0x418 <vfprintf+0xd4>
 414:	88 36       	cpi	r24, 0x68	; 104
 416:	49 f4       	brne	.+18     	; 0x42a <vfprintf+0xe6>
 418:	f1 01       	movw	r30, r2
 41a:	93 fd       	sbrc	r25, 3
 41c:	85 91       	lpm	r24, Z+
 41e:	93 ff       	sbrs	r25, 3
 420:	81 91       	ld	r24, Z+
 422:	1f 01       	movw	r2, r30
 424:	88 23       	and	r24, r24
 426:	09 f0       	breq	.+2      	; 0x42a <vfprintf+0xe6>
 428:	ba cf       	rjmp	.-140    	; 0x39e <vfprintf+0x5a>
 42a:	98 2f       	mov	r25, r24
 42c:	95 54       	subi	r25, 0x45	; 69
 42e:	93 30       	cpi	r25, 0x03	; 3
 430:	18 f0       	brcs	.+6      	; 0x438 <vfprintf+0xf4>
 432:	90 52       	subi	r25, 0x20	; 32
 434:	93 30       	cpi	r25, 0x03	; 3
 436:	28 f4       	brcc	.+10     	; 0x442 <vfprintf+0xfe>
 438:	0c 5f       	subi	r16, 0xFC	; 252
 43a:	1f 4f       	sbci	r17, 0xFF	; 255
 43c:	ff e3       	ldi	r31, 0x3F	; 63
 43e:	f9 83       	std	Y+1, r31	; 0x01
 440:	0d c0       	rjmp	.+26     	; 0x45c <vfprintf+0x118>
 442:	83 36       	cpi	r24, 0x63	; 99
 444:	31 f0       	breq	.+12     	; 0x452 <vfprintf+0x10e>
 446:	83 37       	cpi	r24, 0x73	; 115
 448:	71 f0       	breq	.+28     	; 0x466 <__stack+0x7>
 44a:	83 35       	cpi	r24, 0x53	; 83
 44c:	09 f0       	breq	.+2      	; 0x450 <vfprintf+0x10c>
 44e:	5c c0       	rjmp	.+184    	; 0x508 <__stack+0xa9>
 450:	21 c0       	rjmp	.+66     	; 0x494 <__stack+0x35>
 452:	f8 01       	movw	r30, r16
 454:	80 81       	ld	r24, Z
 456:	89 83       	std	Y+1, r24	; 0x01
 458:	0e 5f       	subi	r16, 0xFE	; 254
 45a:	1f 4f       	sbci	r17, 0xFF	; 255
 45c:	42 01       	movw	r8, r4
 45e:	71 e0       	ldi	r23, 0x01	; 1
 460:	a7 2e       	mov	r10, r23
 462:	b1 2c       	mov	r11, r1
 464:	15 c0       	rjmp	.+42     	; 0x490 <__stack+0x31>
 466:	62 e0       	ldi	r22, 0x02	; 2
 468:	66 2e       	mov	r6, r22
 46a:	71 2c       	mov	r7, r1
 46c:	60 0e       	add	r6, r16
 46e:	71 1e       	adc	r7, r17
 470:	f8 01       	movw	r30, r16
 472:	80 80       	ld	r8, Z
 474:	91 80       	ldd	r9, Z+1	; 0x01
 476:	26 ff       	sbrs	r18, 6
 478:	03 c0       	rjmp	.+6      	; 0x480 <__stack+0x21>
 47a:	6e 2d       	mov	r22, r14
 47c:	70 e0       	ldi	r23, 0x00	; 0
 47e:	02 c0       	rjmp	.+4      	; 0x484 <__stack+0x25>
 480:	6f ef       	ldi	r22, 0xFF	; 255
 482:	7f ef       	ldi	r23, 0xFF	; 255
 484:	c4 01       	movw	r24, r8
 486:	2c 87       	std	Y+12, r18	; 0x0c
 488:	40 d1       	rcall	.+640    	; 0x70a <strnlen>
 48a:	5c 01       	movw	r10, r24
 48c:	83 01       	movw	r16, r6
 48e:	2c 85       	ldd	r18, Y+12	; 0x0c
 490:	2f 77       	andi	r18, 0x7F	; 127
 492:	16 c0       	rjmp	.+44     	; 0x4c0 <__stack+0x61>
 494:	52 e0       	ldi	r21, 0x02	; 2
 496:	65 2e       	mov	r6, r21
 498:	71 2c       	mov	r7, r1
 49a:	60 0e       	add	r6, r16
 49c:	71 1e       	adc	r7, r17
 49e:	f8 01       	movw	r30, r16
 4a0:	80 80       	ld	r8, Z
 4a2:	91 80       	ldd	r9, Z+1	; 0x01
 4a4:	26 ff       	sbrs	r18, 6
 4a6:	03 c0       	rjmp	.+6      	; 0x4ae <__stack+0x4f>
 4a8:	6e 2d       	mov	r22, r14
 4aa:	70 e0       	ldi	r23, 0x00	; 0
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <__stack+0x53>
 4ae:	6f ef       	ldi	r22, 0xFF	; 255
 4b0:	7f ef       	ldi	r23, 0xFF	; 255
 4b2:	c4 01       	movw	r24, r8
 4b4:	2c 87       	std	Y+12, r18	; 0x0c
 4b6:	1e d1       	rcall	.+572    	; 0x6f4 <strnlen_P>
 4b8:	5c 01       	movw	r10, r24
 4ba:	2c 85       	ldd	r18, Y+12	; 0x0c
 4bc:	20 68       	ori	r18, 0x80	; 128
 4be:	83 01       	movw	r16, r6
 4c0:	23 fd       	sbrc	r18, 3
 4c2:	1e c0       	rjmp	.+60     	; 0x500 <__stack+0xa1>
 4c4:	07 c0       	rjmp	.+14     	; 0x4d4 <__stack+0x75>
 4c6:	80 e2       	ldi	r24, 0x20	; 32
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	b6 01       	movw	r22, r12
 4cc:	2c 87       	std	Y+12, r18	; 0x0c
 4ce:	28 d1       	rcall	.+592    	; 0x720 <fputc>
 4d0:	fa 94       	dec	r15
 4d2:	2c 85       	ldd	r18, Y+12	; 0x0c
 4d4:	8f 2d       	mov	r24, r15
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	a8 16       	cp	r10, r24
 4da:	b9 06       	cpc	r11, r25
 4dc:	a0 f3       	brcs	.-24     	; 0x4c6 <__stack+0x67>
 4de:	10 c0       	rjmp	.+32     	; 0x500 <__stack+0xa1>
 4e0:	f4 01       	movw	r30, r8
 4e2:	27 fd       	sbrc	r18, 7
 4e4:	85 91       	lpm	r24, Z+
 4e6:	27 ff       	sbrs	r18, 7
 4e8:	81 91       	ld	r24, Z+
 4ea:	4f 01       	movw	r8, r30
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	b6 01       	movw	r22, r12
 4f0:	2c 87       	std	Y+12, r18	; 0x0c
 4f2:	16 d1       	rcall	.+556    	; 0x720 <fputc>
 4f4:	2c 85       	ldd	r18, Y+12	; 0x0c
 4f6:	f1 10       	cpse	r15, r1
 4f8:	fa 94       	dec	r15
 4fa:	08 94       	sec
 4fc:	a1 08       	sbc	r10, r1
 4fe:	b1 08       	sbc	r11, r1
 500:	a1 14       	cp	r10, r1
 502:	b1 04       	cpc	r11, r1
 504:	69 f7       	brne	.-38     	; 0x4e0 <__stack+0x81>
 506:	e9 c0       	rjmp	.+466    	; 0x6da <__stack+0x27b>
 508:	84 36       	cpi	r24, 0x64	; 100
 50a:	11 f0       	breq	.+4      	; 0x510 <__stack+0xb1>
 50c:	89 36       	cpi	r24, 0x69	; 105
 50e:	41 f5       	brne	.+80     	; 0x560 <__stack+0x101>
 510:	27 ff       	sbrs	r18, 7
 512:	08 c0       	rjmp	.+16     	; 0x524 <__stack+0xc5>
 514:	f8 01       	movw	r30, r16
 516:	60 81       	ld	r22, Z
 518:	71 81       	ldd	r23, Z+1	; 0x01
 51a:	82 81       	ldd	r24, Z+2	; 0x02
 51c:	93 81       	ldd	r25, Z+3	; 0x03
 51e:	0c 5f       	subi	r16, 0xFC	; 252
 520:	1f 4f       	sbci	r17, 0xFF	; 255
 522:	09 c0       	rjmp	.+18     	; 0x536 <__stack+0xd7>
 524:	f8 01       	movw	r30, r16
 526:	60 81       	ld	r22, Z
 528:	71 81       	ldd	r23, Z+1	; 0x01
 52a:	88 27       	eor	r24, r24
 52c:	77 fd       	sbrc	r23, 7
 52e:	80 95       	com	r24
 530:	98 2f       	mov	r25, r24
 532:	0e 5f       	subi	r16, 0xFE	; 254
 534:	1f 4f       	sbci	r17, 0xFF	; 255
 536:	4f e6       	ldi	r20, 0x6F	; 111
 538:	b4 2e       	mov	r11, r20
 53a:	b2 22       	and	r11, r18
 53c:	97 ff       	sbrs	r25, 7
 53e:	09 c0       	rjmp	.+18     	; 0x552 <__stack+0xf3>
 540:	90 95       	com	r25
 542:	80 95       	com	r24
 544:	70 95       	com	r23
 546:	61 95       	neg	r22
 548:	7f 4f       	sbci	r23, 0xFF	; 255
 54a:	8f 4f       	sbci	r24, 0xFF	; 255
 54c:	9f 4f       	sbci	r25, 0xFF	; 255
 54e:	f0 e8       	ldi	r31, 0x80	; 128
 550:	bf 2a       	or	r11, r31
 552:	a2 01       	movw	r20, r4
 554:	2a e0       	ldi	r18, 0x0A	; 10
 556:	30 e0       	ldi	r19, 0x00	; 0
 558:	0f d1       	rcall	.+542    	; 0x778 <__ultoa_invert>
 55a:	78 2e       	mov	r7, r24
 55c:	74 18       	sub	r7, r4
 55e:	44 c0       	rjmp	.+136    	; 0x5e8 <__stack+0x189>
 560:	85 37       	cpi	r24, 0x75	; 117
 562:	31 f4       	brne	.+12     	; 0x570 <__stack+0x111>
 564:	3f ee       	ldi	r19, 0xEF	; 239
 566:	b3 2e       	mov	r11, r19
 568:	b2 22       	and	r11, r18
 56a:	2a e0       	ldi	r18, 0x0A	; 10
 56c:	30 e0       	ldi	r19, 0x00	; 0
 56e:	25 c0       	rjmp	.+74     	; 0x5ba <__stack+0x15b>
 570:	99 ef       	ldi	r25, 0xF9	; 249
 572:	b9 2e       	mov	r11, r25
 574:	b2 22       	and	r11, r18
 576:	8f 36       	cpi	r24, 0x6F	; 111
 578:	c1 f0       	breq	.+48     	; 0x5aa <__stack+0x14b>
 57a:	80 37       	cpi	r24, 0x70	; 112
 57c:	20 f4       	brcc	.+8      	; 0x586 <__stack+0x127>
 57e:	88 35       	cpi	r24, 0x58	; 88
 580:	09 f0       	breq	.+2      	; 0x584 <__stack+0x125>
 582:	ae c0       	rjmp	.+348    	; 0x6e0 <__stack+0x281>
 584:	0d c0       	rjmp	.+26     	; 0x5a0 <__stack+0x141>
 586:	80 37       	cpi	r24, 0x70	; 112
 588:	21 f0       	breq	.+8      	; 0x592 <__stack+0x133>
 58a:	88 37       	cpi	r24, 0x78	; 120
 58c:	09 f0       	breq	.+2      	; 0x590 <__stack+0x131>
 58e:	a8 c0       	rjmp	.+336    	; 0x6e0 <__stack+0x281>
 590:	02 c0       	rjmp	.+4      	; 0x596 <__stack+0x137>
 592:	20 e1       	ldi	r18, 0x10	; 16
 594:	b2 2a       	or	r11, r18
 596:	b4 fe       	sbrs	r11, 4
 598:	0b c0       	rjmp	.+22     	; 0x5b0 <__stack+0x151>
 59a:	84 e0       	ldi	r24, 0x04	; 4
 59c:	b8 2a       	or	r11, r24
 59e:	08 c0       	rjmp	.+16     	; 0x5b0 <__stack+0x151>
 5a0:	b4 fe       	sbrs	r11, 4
 5a2:	09 c0       	rjmp	.+18     	; 0x5b6 <__stack+0x157>
 5a4:	e6 e0       	ldi	r30, 0x06	; 6
 5a6:	be 2a       	or	r11, r30
 5a8:	06 c0       	rjmp	.+12     	; 0x5b6 <__stack+0x157>
 5aa:	28 e0       	ldi	r18, 0x08	; 8
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	05 c0       	rjmp	.+10     	; 0x5ba <__stack+0x15b>
 5b0:	20 e1       	ldi	r18, 0x10	; 16
 5b2:	30 e0       	ldi	r19, 0x00	; 0
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <__stack+0x15b>
 5b6:	20 e1       	ldi	r18, 0x10	; 16
 5b8:	32 e0       	ldi	r19, 0x02	; 2
 5ba:	b7 fe       	sbrs	r11, 7
 5bc:	08 c0       	rjmp	.+16     	; 0x5ce <__stack+0x16f>
 5be:	f8 01       	movw	r30, r16
 5c0:	60 81       	ld	r22, Z
 5c2:	71 81       	ldd	r23, Z+1	; 0x01
 5c4:	82 81       	ldd	r24, Z+2	; 0x02
 5c6:	93 81       	ldd	r25, Z+3	; 0x03
 5c8:	0c 5f       	subi	r16, 0xFC	; 252
 5ca:	1f 4f       	sbci	r17, 0xFF	; 255
 5cc:	07 c0       	rjmp	.+14     	; 0x5dc <__stack+0x17d>
 5ce:	f8 01       	movw	r30, r16
 5d0:	60 81       	ld	r22, Z
 5d2:	71 81       	ldd	r23, Z+1	; 0x01
 5d4:	80 e0       	ldi	r24, 0x00	; 0
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	0e 5f       	subi	r16, 0xFE	; 254
 5da:	1f 4f       	sbci	r17, 0xFF	; 255
 5dc:	a2 01       	movw	r20, r4
 5de:	cc d0       	rcall	.+408    	; 0x778 <__ultoa_invert>
 5e0:	78 2e       	mov	r7, r24
 5e2:	74 18       	sub	r7, r4
 5e4:	ff e7       	ldi	r31, 0x7F	; 127
 5e6:	bf 22       	and	r11, r31
 5e8:	b6 fe       	sbrs	r11, 6
 5ea:	0b c0       	rjmp	.+22     	; 0x602 <__stack+0x1a3>
 5ec:	2e ef       	ldi	r18, 0xFE	; 254
 5ee:	b2 22       	and	r11, r18
 5f0:	7e 14       	cp	r7, r14
 5f2:	38 f4       	brcc	.+14     	; 0x602 <__stack+0x1a3>
 5f4:	b4 fe       	sbrs	r11, 4
 5f6:	07 c0       	rjmp	.+14     	; 0x606 <__stack+0x1a7>
 5f8:	b2 fc       	sbrc	r11, 2
 5fa:	05 c0       	rjmp	.+10     	; 0x606 <__stack+0x1a7>
 5fc:	8f ee       	ldi	r24, 0xEF	; 239
 5fe:	b8 22       	and	r11, r24
 600:	02 c0       	rjmp	.+4      	; 0x606 <__stack+0x1a7>
 602:	a7 2c       	mov	r10, r7
 604:	01 c0       	rjmp	.+2      	; 0x608 <__stack+0x1a9>
 606:	ae 2c       	mov	r10, r14
 608:	8b 2d       	mov	r24, r11
 60a:	90 e0       	ldi	r25, 0x00	; 0
 60c:	b4 fe       	sbrs	r11, 4
 60e:	0d c0       	rjmp	.+26     	; 0x62a <__stack+0x1cb>
 610:	fe 01       	movw	r30, r28
 612:	e7 0d       	add	r30, r7
 614:	f1 1d       	adc	r31, r1
 616:	20 81       	ld	r18, Z
 618:	20 33       	cpi	r18, 0x30	; 48
 61a:	19 f4       	brne	.+6      	; 0x622 <__stack+0x1c3>
 61c:	e9 ee       	ldi	r30, 0xE9	; 233
 61e:	be 22       	and	r11, r30
 620:	09 c0       	rjmp	.+18     	; 0x634 <__stack+0x1d5>
 622:	a3 94       	inc	r10
 624:	b2 fe       	sbrs	r11, 2
 626:	06 c0       	rjmp	.+12     	; 0x634 <__stack+0x1d5>
 628:	04 c0       	rjmp	.+8      	; 0x632 <__stack+0x1d3>
 62a:	86 78       	andi	r24, 0x86	; 134
 62c:	90 70       	andi	r25, 0x00	; 0
 62e:	00 97       	sbiw	r24, 0x00	; 0
 630:	09 f0       	breq	.+2      	; 0x634 <__stack+0x1d5>
 632:	a3 94       	inc	r10
 634:	8b 2c       	mov	r8, r11
 636:	99 24       	eor	r9, r9
 638:	b3 fc       	sbrc	r11, 3
 63a:	13 c0       	rjmp	.+38     	; 0x662 <__stack+0x203>
 63c:	b0 fe       	sbrs	r11, 0
 63e:	0e c0       	rjmp	.+28     	; 0x65c <__stack+0x1fd>
 640:	af 14       	cp	r10, r15
 642:	28 f4       	brcc	.+10     	; 0x64e <__stack+0x1ef>
 644:	e7 2c       	mov	r14, r7
 646:	ef 0c       	add	r14, r15
 648:	ea 18       	sub	r14, r10
 64a:	af 2c       	mov	r10, r15
 64c:	07 c0       	rjmp	.+14     	; 0x65c <__stack+0x1fd>
 64e:	e7 2c       	mov	r14, r7
 650:	05 c0       	rjmp	.+10     	; 0x65c <__stack+0x1fd>
 652:	80 e2       	ldi	r24, 0x20	; 32
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	b6 01       	movw	r22, r12
 658:	63 d0       	rcall	.+198    	; 0x720 <fputc>
 65a:	a3 94       	inc	r10
 65c:	af 14       	cp	r10, r15
 65e:	c8 f3       	brcs	.-14     	; 0x652 <__stack+0x1f3>
 660:	04 c0       	rjmp	.+8      	; 0x66a <__stack+0x20b>
 662:	af 14       	cp	r10, r15
 664:	10 f4       	brcc	.+4      	; 0x66a <__stack+0x20b>
 666:	fa 18       	sub	r15, r10
 668:	01 c0       	rjmp	.+2      	; 0x66c <__stack+0x20d>
 66a:	ff 24       	eor	r15, r15
 66c:	84 fe       	sbrs	r8, 4
 66e:	0e c0       	rjmp	.+28     	; 0x68c <__stack+0x22d>
 670:	80 e3       	ldi	r24, 0x30	; 48
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	b6 01       	movw	r22, r12
 676:	54 d0       	rcall	.+168    	; 0x720 <fputc>
 678:	82 fe       	sbrs	r8, 2
 67a:	1d c0       	rjmp	.+58     	; 0x6b6 <__stack+0x257>
 67c:	81 fe       	sbrs	r8, 1
 67e:	03 c0       	rjmp	.+6      	; 0x686 <__stack+0x227>
 680:	88 e5       	ldi	r24, 0x58	; 88
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	10 c0       	rjmp	.+32     	; 0x6a6 <__stack+0x247>
 686:	88 e7       	ldi	r24, 0x78	; 120
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	0d c0       	rjmp	.+26     	; 0x6a6 <__stack+0x247>
 68c:	c4 01       	movw	r24, r8
 68e:	86 78       	andi	r24, 0x86	; 134
 690:	90 70       	andi	r25, 0x00	; 0
 692:	00 97       	sbiw	r24, 0x00	; 0
 694:	81 f0       	breq	.+32     	; 0x6b6 <__stack+0x257>
 696:	81 fc       	sbrc	r8, 1
 698:	02 c0       	rjmp	.+4      	; 0x69e <__stack+0x23f>
 69a:	80 e2       	ldi	r24, 0x20	; 32
 69c:	01 c0       	rjmp	.+2      	; 0x6a0 <__stack+0x241>
 69e:	8b e2       	ldi	r24, 0x2B	; 43
 6a0:	b7 fc       	sbrc	r11, 7
 6a2:	8d e2       	ldi	r24, 0x2D	; 45
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	b6 01       	movw	r22, r12
 6a8:	3b d0       	rcall	.+118    	; 0x720 <fputc>
 6aa:	05 c0       	rjmp	.+10     	; 0x6b6 <__stack+0x257>
 6ac:	80 e3       	ldi	r24, 0x30	; 48
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	b6 01       	movw	r22, r12
 6b2:	36 d0       	rcall	.+108    	; 0x720 <fputc>
 6b4:	ea 94       	dec	r14
 6b6:	7e 14       	cp	r7, r14
 6b8:	c8 f3       	brcs	.-14     	; 0x6ac <__stack+0x24d>
 6ba:	7a 94       	dec	r7
 6bc:	f2 01       	movw	r30, r4
 6be:	e7 0d       	add	r30, r7
 6c0:	f1 1d       	adc	r31, r1
 6c2:	80 81       	ld	r24, Z
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	b6 01       	movw	r22, r12
 6c8:	2b d0       	rcall	.+86     	; 0x720 <fputc>
 6ca:	77 20       	and	r7, r7
 6cc:	b1 f7       	brne	.-20     	; 0x6ba <__stack+0x25b>
 6ce:	05 c0       	rjmp	.+10     	; 0x6da <__stack+0x27b>
 6d0:	80 e2       	ldi	r24, 0x20	; 32
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	b6 01       	movw	r22, r12
 6d6:	24 d0       	rcall	.+72     	; 0x720 <fputc>
 6d8:	fa 94       	dec	r15
 6da:	ff 20       	and	r15, r15
 6dc:	c9 f7       	brne	.-14     	; 0x6d0 <__stack+0x271>
 6de:	44 ce       	rjmp	.-888    	; 0x368 <vfprintf+0x24>
 6e0:	f6 01       	movw	r30, r12
 6e2:	26 81       	ldd	r18, Z+6	; 0x06
 6e4:	37 81       	ldd	r19, Z+7	; 0x07
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <__stack+0x28d>
 6e8:	2f ef       	ldi	r18, 0xFF	; 255
 6ea:	3f ef       	ldi	r19, 0xFF	; 255
 6ec:	c9 01       	movw	r24, r18
 6ee:	2c 96       	adiw	r28, 0x0c	; 12
 6f0:	e2 e1       	ldi	r30, 0x12	; 18
 6f2:	bc c0       	rjmp	.+376    	; 0x86c <__epilogue_restores__>

000006f4 <strnlen_P>:
 6f4:	fc 01       	movw	r30, r24
 6f6:	05 90       	lpm	r0, Z+
 6f8:	61 50       	subi	r22, 0x01	; 1
 6fa:	70 40       	sbci	r23, 0x00	; 0
 6fc:	01 10       	cpse	r0, r1
 6fe:	d8 f7       	brcc	.-10     	; 0x6f6 <strnlen_P+0x2>
 700:	80 95       	com	r24
 702:	90 95       	com	r25
 704:	8e 0f       	add	r24, r30
 706:	9f 1f       	adc	r25, r31
 708:	08 95       	ret

0000070a <strnlen>:
 70a:	fc 01       	movw	r30, r24
 70c:	61 50       	subi	r22, 0x01	; 1
 70e:	70 40       	sbci	r23, 0x00	; 0
 710:	01 90       	ld	r0, Z+
 712:	01 10       	cpse	r0, r1
 714:	d8 f7       	brcc	.-10     	; 0x70c <strnlen+0x2>
 716:	80 95       	com	r24
 718:	90 95       	com	r25
 71a:	8e 0f       	add	r24, r30
 71c:	9f 1f       	adc	r25, r31
 71e:	08 95       	ret

00000720 <fputc>:
 720:	0f 93       	push	r16
 722:	1f 93       	push	r17
 724:	cf 93       	push	r28
 726:	df 93       	push	r29
 728:	8c 01       	movw	r16, r24
 72a:	eb 01       	movw	r28, r22
 72c:	8b 81       	ldd	r24, Y+3	; 0x03
 72e:	81 ff       	sbrs	r24, 1
 730:	1b c0       	rjmp	.+54     	; 0x768 <fputc+0x48>
 732:	82 ff       	sbrs	r24, 2
 734:	0d c0       	rjmp	.+26     	; 0x750 <fputc+0x30>
 736:	2e 81       	ldd	r18, Y+6	; 0x06
 738:	3f 81       	ldd	r19, Y+7	; 0x07
 73a:	8c 81       	ldd	r24, Y+4	; 0x04
 73c:	9d 81       	ldd	r25, Y+5	; 0x05
 73e:	28 17       	cp	r18, r24
 740:	39 07       	cpc	r19, r25
 742:	64 f4       	brge	.+24     	; 0x75c <fputc+0x3c>
 744:	e8 81       	ld	r30, Y
 746:	f9 81       	ldd	r31, Y+1	; 0x01
 748:	01 93       	st	Z+, r16
 74a:	f9 83       	std	Y+1, r31	; 0x01
 74c:	e8 83       	st	Y, r30
 74e:	06 c0       	rjmp	.+12     	; 0x75c <fputc+0x3c>
 750:	e8 85       	ldd	r30, Y+8	; 0x08
 752:	f9 85       	ldd	r31, Y+9	; 0x09
 754:	80 2f       	mov	r24, r16
 756:	09 95       	icall
 758:	00 97       	sbiw	r24, 0x00	; 0
 75a:	31 f4       	brne	.+12     	; 0x768 <fputc+0x48>
 75c:	8e 81       	ldd	r24, Y+6	; 0x06
 75e:	9f 81       	ldd	r25, Y+7	; 0x07
 760:	01 96       	adiw	r24, 0x01	; 1
 762:	9f 83       	std	Y+7, r25	; 0x07
 764:	8e 83       	std	Y+6, r24	; 0x06
 766:	02 c0       	rjmp	.+4      	; 0x76c <fputc+0x4c>
 768:	0f ef       	ldi	r16, 0xFF	; 255
 76a:	1f ef       	ldi	r17, 0xFF	; 255
 76c:	c8 01       	movw	r24, r16
 76e:	df 91       	pop	r29
 770:	cf 91       	pop	r28
 772:	1f 91       	pop	r17
 774:	0f 91       	pop	r16
 776:	08 95       	ret

00000778 <__ultoa_invert>:
 778:	fa 01       	movw	r30, r20
 77a:	aa 27       	eor	r26, r26
 77c:	28 30       	cpi	r18, 0x08	; 8
 77e:	51 f1       	breq	.+84     	; 0x7d4 <__ultoa_invert+0x5c>
 780:	20 31       	cpi	r18, 0x10	; 16
 782:	81 f1       	breq	.+96     	; 0x7e4 <__ultoa_invert+0x6c>
 784:	e8 94       	clt
 786:	6f 93       	push	r22
 788:	6e 7f       	andi	r22, 0xFE	; 254
 78a:	6e 5f       	subi	r22, 0xFE	; 254
 78c:	7f 4f       	sbci	r23, 0xFF	; 255
 78e:	8f 4f       	sbci	r24, 0xFF	; 255
 790:	9f 4f       	sbci	r25, 0xFF	; 255
 792:	af 4f       	sbci	r26, 0xFF	; 255
 794:	b1 e0       	ldi	r27, 0x01	; 1
 796:	3e d0       	rcall	.+124    	; 0x814 <__ultoa_invert+0x9c>
 798:	b4 e0       	ldi	r27, 0x04	; 4
 79a:	3c d0       	rcall	.+120    	; 0x814 <__ultoa_invert+0x9c>
 79c:	67 0f       	add	r22, r23
 79e:	78 1f       	adc	r23, r24
 7a0:	89 1f       	adc	r24, r25
 7a2:	9a 1f       	adc	r25, r26
 7a4:	a1 1d       	adc	r26, r1
 7a6:	68 0f       	add	r22, r24
 7a8:	79 1f       	adc	r23, r25
 7aa:	8a 1f       	adc	r24, r26
 7ac:	91 1d       	adc	r25, r1
 7ae:	a1 1d       	adc	r26, r1
 7b0:	6a 0f       	add	r22, r26
 7b2:	71 1d       	adc	r23, r1
 7b4:	81 1d       	adc	r24, r1
 7b6:	91 1d       	adc	r25, r1
 7b8:	a1 1d       	adc	r26, r1
 7ba:	20 d0       	rcall	.+64     	; 0x7fc <__ultoa_invert+0x84>
 7bc:	09 f4       	brne	.+2      	; 0x7c0 <__ultoa_invert+0x48>
 7be:	68 94       	set
 7c0:	3f 91       	pop	r19
 7c2:	2a e0       	ldi	r18, 0x0A	; 10
 7c4:	26 9f       	mul	r18, r22
 7c6:	11 24       	eor	r1, r1
 7c8:	30 19       	sub	r19, r0
 7ca:	30 5d       	subi	r19, 0xD0	; 208
 7cc:	31 93       	st	Z+, r19
 7ce:	de f6       	brtc	.-74     	; 0x786 <__ultoa_invert+0xe>
 7d0:	cf 01       	movw	r24, r30
 7d2:	08 95       	ret
 7d4:	46 2f       	mov	r20, r22
 7d6:	47 70       	andi	r20, 0x07	; 7
 7d8:	40 5d       	subi	r20, 0xD0	; 208
 7da:	41 93       	st	Z+, r20
 7dc:	b3 e0       	ldi	r27, 0x03	; 3
 7de:	0f d0       	rcall	.+30     	; 0x7fe <__ultoa_invert+0x86>
 7e0:	c9 f7       	brne	.-14     	; 0x7d4 <__ultoa_invert+0x5c>
 7e2:	f6 cf       	rjmp	.-20     	; 0x7d0 <__ultoa_invert+0x58>
 7e4:	46 2f       	mov	r20, r22
 7e6:	4f 70       	andi	r20, 0x0F	; 15
 7e8:	40 5d       	subi	r20, 0xD0	; 208
 7ea:	4a 33       	cpi	r20, 0x3A	; 58
 7ec:	18 f0       	brcs	.+6      	; 0x7f4 <__ultoa_invert+0x7c>
 7ee:	49 5d       	subi	r20, 0xD9	; 217
 7f0:	31 fd       	sbrc	r19, 1
 7f2:	40 52       	subi	r20, 0x20	; 32
 7f4:	41 93       	st	Z+, r20
 7f6:	02 d0       	rcall	.+4      	; 0x7fc <__ultoa_invert+0x84>
 7f8:	a9 f7       	brne	.-22     	; 0x7e4 <__ultoa_invert+0x6c>
 7fa:	ea cf       	rjmp	.-44     	; 0x7d0 <__ultoa_invert+0x58>
 7fc:	b4 e0       	ldi	r27, 0x04	; 4
 7fe:	a6 95       	lsr	r26
 800:	97 95       	ror	r25
 802:	87 95       	ror	r24
 804:	77 95       	ror	r23
 806:	67 95       	ror	r22
 808:	ba 95       	dec	r27
 80a:	c9 f7       	brne	.-14     	; 0x7fe <__ultoa_invert+0x86>
 80c:	00 97       	sbiw	r24, 0x00	; 0
 80e:	61 05       	cpc	r22, r1
 810:	71 05       	cpc	r23, r1
 812:	08 95       	ret
 814:	9b 01       	movw	r18, r22
 816:	ac 01       	movw	r20, r24
 818:	0a 2e       	mov	r0, r26
 81a:	06 94       	lsr	r0
 81c:	57 95       	ror	r21
 81e:	47 95       	ror	r20
 820:	37 95       	ror	r19
 822:	27 95       	ror	r18
 824:	ba 95       	dec	r27
 826:	c9 f7       	brne	.-14     	; 0x81a <__ultoa_invert+0xa2>
 828:	62 0f       	add	r22, r18
 82a:	73 1f       	adc	r23, r19
 82c:	84 1f       	adc	r24, r20
 82e:	95 1f       	adc	r25, r21
 830:	a0 1d       	adc	r26, r0
 832:	08 95       	ret

00000834 <__prologue_saves__>:
 834:	2f 92       	push	r2
 836:	3f 92       	push	r3
 838:	4f 92       	push	r4
 83a:	5f 92       	push	r5
 83c:	6f 92       	push	r6
 83e:	7f 92       	push	r7
 840:	8f 92       	push	r8
 842:	9f 92       	push	r9
 844:	af 92       	push	r10
 846:	bf 92       	push	r11
 848:	cf 92       	push	r12
 84a:	df 92       	push	r13
 84c:	ef 92       	push	r14
 84e:	ff 92       	push	r15
 850:	0f 93       	push	r16
 852:	1f 93       	push	r17
 854:	cf 93       	push	r28
 856:	df 93       	push	r29
 858:	cd b7       	in	r28, 0x3d	; 61
 85a:	de b7       	in	r29, 0x3e	; 62
 85c:	ca 1b       	sub	r28, r26
 85e:	db 0b       	sbc	r29, r27
 860:	0f b6       	in	r0, 0x3f	; 63
 862:	f8 94       	cli
 864:	de bf       	out	0x3e, r29	; 62
 866:	0f be       	out	0x3f, r0	; 63
 868:	cd bf       	out	0x3d, r28	; 61
 86a:	09 94       	ijmp

0000086c <__epilogue_restores__>:
 86c:	2a 88       	ldd	r2, Y+18	; 0x12
 86e:	39 88       	ldd	r3, Y+17	; 0x11
 870:	48 88       	ldd	r4, Y+16	; 0x10
 872:	5f 84       	ldd	r5, Y+15	; 0x0f
 874:	6e 84       	ldd	r6, Y+14	; 0x0e
 876:	7d 84       	ldd	r7, Y+13	; 0x0d
 878:	8c 84       	ldd	r8, Y+12	; 0x0c
 87a:	9b 84       	ldd	r9, Y+11	; 0x0b
 87c:	aa 84       	ldd	r10, Y+10	; 0x0a
 87e:	b9 84       	ldd	r11, Y+9	; 0x09
 880:	c8 84       	ldd	r12, Y+8	; 0x08
 882:	df 80       	ldd	r13, Y+7	; 0x07
 884:	ee 80       	ldd	r14, Y+6	; 0x06
 886:	fd 80       	ldd	r15, Y+5	; 0x05
 888:	0c 81       	ldd	r16, Y+4	; 0x04
 88a:	1b 81       	ldd	r17, Y+3	; 0x03
 88c:	aa 81       	ldd	r26, Y+2	; 0x02
 88e:	b9 81       	ldd	r27, Y+1	; 0x01
 890:	ce 0f       	add	r28, r30
 892:	d1 1d       	adc	r29, r1
 894:	0f b6       	in	r0, 0x3f	; 63
 896:	f8 94       	cli
 898:	de bf       	out	0x3e, r29	; 62
 89a:	0f be       	out	0x3f, r0	; 63
 89c:	cd bf       	out	0x3d, r28	; 61
 89e:	ed 01       	movw	r28, r26
 8a0:	08 95       	ret

000008a2 <_exit>:
 8a2:	f8 94       	cli

000008a4 <__stop_program>:
 8a4:	ff cf       	rjmp	.-2      	; 0x8a4 <__stop_program>
