
ATMEGA8_4RELAY.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000083a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  0000083a  000008ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  0080007e  0080007e  000008ec  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  000008ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  00001570  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  00001726  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000103  00000000  00000000  000017c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000d9a  00000000  00000000  000018c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000758  00000000  00000000  00002663  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000faf  00000000  00000000  00002dbb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000f0  00000000  00000000  00003d6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000389  00000000  00000000  00003e5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ff  00000000  00000000  000041e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000159  00000000  00000000  000049e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000058  00000000  00000000  00004b3d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	54 c0       	rjmp	.+168    	; 0xc0 <__vector_11>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ea e3       	ldi	r30, 0x3A	; 58
  3a:	f8 e0       	ldi	r31, 0x08	; 8
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	ae 37       	cpi	r26, 0x7E	; 126
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	ae e7       	ldi	r26, 0x7E	; 126
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a9 38       	cpi	r26, 0x89	; 137
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	1b d1       	rcall	.+566    	; 0x290 <main>
  5a:	ed c3       	rjmp	.+2010   	; 0x836 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <USART_putchar>:
	return 0;
}

static int USART_putchar(char c, FILE *stream)
{
	if(c == '\n')
  5e:	8a 30       	cpi	r24, 0x0A	; 10
  60:	41 f4       	brne	.+16     	; 0x72 <USART_putchar+0x14>
	{   loop_until_bit_is_set(UCSRA,UDRE);
  62:	5d 9b       	sbis	0x0b, 5	; 11
  64:	fe cf       	rjmp	.-4      	; 0x62 <USART_putchar+0x4>
		UDR = 0x0D;
  66:	8d e0       	ldi	r24, 0x0D	; 13
  68:	8c b9       	out	0x0c, r24	; 12
		loop_until_bit_is_set(UCSRA,UDRE);
  6a:	5d 9b       	sbis	0x0b, 5	; 11
  6c:	fe cf       	rjmp	.-4      	; 0x6a <USART_putchar+0xc>
		UDR = 0x0A;
  6e:	8a e0       	ldi	r24, 0x0A	; 10
  70:	02 c0       	rjmp	.+4      	; 0x76 <USART_putchar+0x18>
	}
	else
	{  loop_until_bit_is_set(UCSRA,UDRE);
  72:	5d 9b       	sbis	0x0b, 5	; 11
  74:	fe cf       	rjmp	.-4      	; 0x72 <USART_putchar+0x14>
		UDR = c;
  76:	8c b9       	out	0x0c, r24	; 12
	}
	return 0;

}
  78:	80 e0       	ldi	r24, 0x00	; 0
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	08 95       	ret

0000007e <setup>:

volatile unsigned char RX_BUF[1], Relay[2], Test, Case;

void setup() {
	
	cli();
  7e:	f8 94       	cli

	//UART
	// 8MHz 38400
	//UBRRL = 12;
	UBRRL = 51; // 9600 bps
  80:	83 e3       	ldi	r24, 0x33	; 51
  82:	89 b9       	out	0x09, r24	; 9

	DDRB = (0 << PB2) | (1 << PB1) | (1 << PB0); // PB2 : 자석2, PB1: 전원제어2 , PB0: 전원제어1
  84:	83 e0       	ldi	r24, 0x03	; 3
  86:	87 bb       	out	0x17, r24	; 23
	DDRC = (1 << PC3) | (1 << PC2) | (0 << PC0); // PC3: 데드볼트2, PC2: 데드볼트1, PC0: 자석1
  88:	8c e0       	ldi	r24, 0x0C	; 12
  8a:	84 bb       	out	0x14, r24	; 20
	DDRD = (1 << PD1) | (0 << PD0); //UART
  8c:	82 e0       	ldi	r24, 0x02	; 2
  8e:	81 bb       	out	0x11, r24	; 17
	
	PORTC = (1 << PC0); // 자석1 풀업 저항
  90:	81 e0       	ldi	r24, 0x01	; 1
  92:	85 bb       	out	0x15, r24	; 21
	PORTB = (1 << PB2); // 자석2 풀업 저항
  94:	94 e0       	ldi	r25, 0x04	; 4
  96:	98 bb       	out	0x18, r25	; 24

	UCSRB = (1 << RXCIE) | (1 << RXEN) | (1 << TXEN);
  98:	98 e9       	ldi	r25, 0x98	; 152
  9a:	9a b9       	out	0x0a, r25	; 10

	Relay[0] = 1;
  9c:	80 93 81 00 	sts	0x0081, r24
	Relay[1] = 1;
  a0:	80 93 82 00 	sts	0x0082, r24

	Test = 0;
  a4:	10 92 7e 00 	sts	0x007E, r1

	//전원 High
	sbi(PORTB, 0);
  a8:	c0 9a       	sbi	0x18, 0	; 24
	sbi(PORTB, 1);
  aa:	c1 9a       	sbi	0x18, 1	; 24

	//데드볼트 High
	sbi(PORTC, 2);
  ac:	aa 9a       	sbi	0x15, 2	; 21
	sbi(PORTC, 3);
  ae:	ab 9a       	sbi	0x15, 3	; 21

	stdout = &device;
  b0:	80 e7       	ldi	r24, 0x70	; 112
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	90 93 86 00 	sts	0x0086, r25
  b8:	80 93 85 00 	sts	0x0085, r24

	sei();
  bc:	78 94       	sei

}
  be:	08 95       	ret

000000c0 <__vector_11>:

ISR(SIG_UART_RECV)
{
  c0:	1f 92       	push	r1
  c2:	0f 92       	push	r0
  c4:	0f b6       	in	r0, 0x3f	; 63
  c6:	0f 92       	push	r0
  c8:	11 24       	eor	r1, r1
  ca:	8f 93       	push	r24
  cc:	9f 93       	push	r25
  ce:	af 93       	push	r26
  d0:	bf 93       	push	r27
	cli();
  d2:	f8 94       	cli

	while((UCSRA &(1<<RXC)) == 0);
  d4:	5f 9b       	sbis	0x0b, 7	; 11
  d6:	fe cf       	rjmp	.-4      	; 0xd4 <__vector_11+0x14>
	
	RX_BUF[0] = UDR;
  d8:	8c b1       	in	r24, 0x0c	; 12
  da:	80 93 7f 00 	sts	0x007F, r24

	if(RX_BUF[0] == '1') // 1번문 열기
  de:	80 91 7f 00 	lds	r24, 0x007F
  e2:	81 33       	cpi	r24, 0x31	; 49
  e4:	b1 f4       	brne	.+44     	; 0x112 <__vector_11+0x52>
	{
		if(Test == 1)
  e6:	80 91 7e 00 	lds	r24, 0x007E
  ea:	81 30       	cpi	r24, 0x01	; 1
  ec:	11 f4       	brne	.+4      	; 0xf2 <__vector_11+0x32>
		{
			cbi(PORTC,2);
  ee:	aa 98       	cbi	0x15, 2	; 21
  f0:	48 c0       	rjmp	.+144    	; 0x182 <__vector_11+0xc2>
		}
		else
		{
			cbi(PORTC,2);
  f2:	aa 98       	cbi	0x15, 2	; 21
			cbi(PORTC,3);
  f4:	ab 98       	cbi	0x15, 3	; 21
			Relay[0] = 0;
  f6:	10 92 81 00 	sts	0x0081, r1
			Relay[1] = 0;
  fa:	10 92 82 00 	sts	0x0082, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fe:	8f ef       	ldi	r24, 0xFF	; 255
 100:	91 e1       	ldi	r25, 0x11	; 17
 102:	aa e7       	ldi	r26, 0x7A	; 122
 104:	81 50       	subi	r24, 0x01	; 1
 106:	90 40       	sbci	r25, 0x00	; 0
 108:	a0 40       	sbci	r26, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <__vector_11+0x44>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <__vector_11+0x4e>
 10e:	00 00       	nop
 110:	38 c0       	rjmp	.+112    	; 0x182 <__vector_11+0xc2>
			_delay_ms(5000);
		}
	}
	else if(RX_BUF[0] == '3') // 1번문 닫기
 112:	80 91 7f 00 	lds	r24, 0x007F
 116:	83 33       	cpi	r24, 0x33	; 51
 118:	11 f4       	brne	.+4      	; 0x11e <__vector_11+0x5e>
	{
		sbi(PORTC,2);
 11a:	aa 9a       	sbi	0x15, 2	; 21
 11c:	32 c0       	rjmp	.+100    	; 0x182 <__vector_11+0xc2>
	}
	else if(RX_BUF[0] == '4') // 2번문 열기
 11e:	80 91 7f 00 	lds	r24, 0x007F
 122:	84 33       	cpi	r24, 0x34	; 52
 124:	11 f4       	brne	.+4      	; 0x12a <__vector_11+0x6a>
	{	
		cbi(PORTC, 3);	
 126:	ab 98       	cbi	0x15, 3	; 21
 128:	2c c0       	rjmp	.+88     	; 0x182 <__vector_11+0xc2>
	}
	else if(RX_BUF[0] == '5') // 2번문 닫기
 12a:	80 91 7f 00 	lds	r24, 0x007F
 12e:	85 33       	cpi	r24, 0x35	; 53
 130:	11 f4       	brne	.+4      	; 0x136 <__vector_11+0x76>
	{
		sbi(PORTC,3);
 132:	ab 9a       	sbi	0x15, 3	; 21
 134:	26 c0       	rjmp	.+76     	; 0x182 <__vector_11+0xc2>
	}
	else if(RX_BUF[0] == '6') // 1번 전원 제어 (NC)
 136:	80 91 7f 00 	lds	r24, 0x007F
 13a:	86 33       	cpi	r24, 0x36	; 54
 13c:	11 f4       	brne	.+4      	; 0x142 <__vector_11+0x82>
	{
		sbi(PORTB,0);
 13e:	c0 9a       	sbi	0x18, 0	; 24
 140:	20 c0       	rjmp	.+64     	; 0x182 <__vector_11+0xc2>
	}
	else if(RX_BUF[0] == '7') // 1번 전원 제어 (NO)
 142:	80 91 7f 00 	lds	r24, 0x007F
 146:	87 33       	cpi	r24, 0x37	; 55
 148:	11 f4       	brne	.+4      	; 0x14e <__vector_11+0x8e>
	{
		cbi(PORTB,0);
 14a:	c0 98       	cbi	0x18, 0	; 24
 14c:	1a c0       	rjmp	.+52     	; 0x182 <__vector_11+0xc2>
	}
	else if(RX_BUF[0] == '8') // 2번 전원 제어 (NC)
 14e:	80 91 7f 00 	lds	r24, 0x007F
 152:	88 33       	cpi	r24, 0x38	; 56
 154:	11 f4       	brne	.+4      	; 0x15a <__vector_11+0x9a>
	{
		sbi(PORTB,1);
 156:	c1 9a       	sbi	0x18, 1	; 24
 158:	14 c0       	rjmp	.+40     	; 0x182 <__vector_11+0xc2>
	}
	else if(RX_BUF[0] == '9') // 2번 전원 제어 (NO)
 15a:	80 91 7f 00 	lds	r24, 0x007F
 15e:	89 33       	cpi	r24, 0x39	; 57
 160:	11 f4       	brne	.+4      	; 0x166 <__vector_11+0xa6>
	{
		cbi(PORTB,1);
 162:	c1 98       	cbi	0x18, 1	; 24
 164:	0e c0       	rjmp	.+28     	; 0x182 <__vector_11+0xc2>
	}
	else if(RX_BUF[0] == 'T') 
 166:	80 91 7f 00 	lds	r24, 0x007F
 16a:	84 35       	cpi	r24, 0x54	; 84
 16c:	21 f4       	brne	.+8      	; 0x176 <__vector_11+0xb6>
	{
		Test = 1;  // set test mode
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	80 93 7e 00 	sts	0x007E, r24
 174:	06 c0       	rjmp	.+12     	; 0x182 <__vector_11+0xc2>
	}
	else if(RX_BUF[0] == 'F') 
 176:	80 91 7f 00 	lds	r24, 0x007F
 17a:	86 34       	cpi	r24, 0x46	; 70
 17c:	11 f4       	brne	.+4      	; 0x182 <__vector_11+0xc2>
	{
		Test = 0;  // end test mode
 17e:	10 92 7e 00 	sts	0x007E, r1
	}

	sei();
 182:	78 94       	sei
}
 184:	bf 91       	pop	r27
 186:	af 91       	pop	r26
 188:	9f 91       	pop	r25
 18a:	8f 91       	pop	r24
 18c:	0f 90       	pop	r0
 18e:	0f be       	out	0x3f, r0	; 63
 190:	0f 90       	pop	r0
 192:	1f 90       	pop	r1
 194:	18 95       	reti

00000196 <tillend>:

void tillend()
{

	printf("2");
 196:	82 e3       	ldi	r24, 0x32	; 50
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	98 d0       	rcall	.+304    	; 0x2cc <putchar>
	Relay[0] = 2;
 19c:	82 e0       	ldi	r24, 0x02	; 2
 19e:	80 93 81 00 	sts	0x0081, r24
	Relay[1] = 2;
 1a2:	80 93 82 00 	sts	0x0082, r24

}
 1a6:	08 95       	ret

000001a8 <loop>:

void loop(){

	if(Test == 0)
 1a8:	80 91 7e 00 	lds	r24, 0x007E
 1ac:	88 23       	and	r24, r24
 1ae:	c1 f5       	brne	.+112    	; 0x220 <loop+0x78>
	{
		if(Relay[0] == 0 && Relay[1] == 0)
 1b0:	80 91 81 00 	lds	r24, 0x0081
 1b4:	88 23       	and	r24, r24
 1b6:	91 f4       	brne	.+36     	; 0x1dc <loop+0x34>
 1b8:	80 91 82 00 	lds	r24, 0x0082
 1bc:	88 23       	and	r24, r24
 1be:	71 f4       	brne	.+28     	; 0x1dc <loop+0x34>
		{
			if( !(PINC&0x01) && !(PINB&0x04) )
 1c0:	98 99       	sbic	0x13, 0	; 19
 1c2:	0c c0       	rjmp	.+24     	; 0x1dc <loop+0x34>
 1c4:	b2 99       	sbic	0x16, 2	; 22
 1c6:	0a c0       	rjmp	.+20     	; 0x1dc <loop+0x34>
			{
				printf("0");
 1c8:	80 e3       	ldi	r24, 0x30	; 48
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	7f d0       	rcall	.+254    	; 0x2cc <putchar>
				sbi(PORTC,2);
 1ce:	aa 9a       	sbi	0x15, 2	; 21
				sbi(PORTC,3);
 1d0:	ab 9a       	sbi	0x15, 3	; 21
				Relay[0] = 1;
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	80 93 81 00 	sts	0x0081, r24
				Relay[1] = 1;
 1d8:	80 93 82 00 	sts	0x0082, r24
			}
		}

		if(Relay[0] == 1)
 1dc:	80 91 81 00 	lds	r24, 0x0081
 1e0:	81 30       	cpi	r24, 0x01	; 1
 1e2:	61 f4       	brne	.+24     	; 0x1fc <loop+0x54>
		{
			if(PINC&0x01)
 1e4:	98 9b       	sbis	0x13, 0	; 19
 1e6:	0a c0       	rjmp	.+20     	; 0x1fc <loop+0x54>
 1e8:	8f ef       	ldi	r24, 0xFF	; 255
 1ea:	91 e1       	ldi	r25, 0x11	; 17
 1ec:	aa e7       	ldi	r26, 0x7A	; 122
 1ee:	81 50       	subi	r24, 0x01	; 1
 1f0:	90 40       	sbci	r25, 0x00	; 0
 1f2:	a0 40       	sbci	r26, 0x00	; 0
 1f4:	e1 f7       	brne	.-8      	; 0x1ee <loop+0x46>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <loop+0x50>
 1f8:	00 00       	nop
			{
				_delay_ms(5000);
				tillend();
 1fa:	cd df       	rcall	.-102    	; 0x196 <tillend>
			}
		}
		if(Relay[1] == 1)
 1fc:	80 91 82 00 	lds	r24, 0x0082
 200:	81 30       	cpi	r24, 0x01	; 1
 202:	09 f0       	breq	.+2      	; 0x206 <loop+0x5e>
 204:	44 c0       	rjmp	.+136    	; 0x28e <loop+0xe6>
		{
			if(PINB&0x04)
 206:	b2 9b       	sbis	0x16, 2	; 22
 208:	42 c0       	rjmp	.+132    	; 0x28e <loop+0xe6>
 20a:	8f ef       	ldi	r24, 0xFF	; 255
 20c:	91 e1       	ldi	r25, 0x11	; 17
 20e:	aa e7       	ldi	r26, 0x7A	; 122
 210:	81 50       	subi	r24, 0x01	; 1
 212:	90 40       	sbci	r25, 0x00	; 0
 214:	a0 40       	sbci	r26, 0x00	; 0
 216:	e1 f7       	brne	.-8      	; 0x210 <loop+0x68>
 218:	00 c0       	rjmp	.+0      	; 0x21a <loop+0x72>
 21a:	00 00       	nop
			{
				_delay_ms(5000);
				tillend();
 21c:	bc df       	rcall	.-136    	; 0x196 <tillend>
 21e:	08 95       	ret
			}
		}
		
	}
	else if(Test == 1) // 테스트모드
 220:	80 91 7e 00 	lds	r24, 0x007E
 224:	81 30       	cpi	r24, 0x01	; 1
 226:	99 f5       	brne	.+102    	; 0x28e <loop+0xe6>
	{
		
		if(((PINC&0x01) != 0x01) && ((PINB&0x04) != 0x04))
 228:	98 99       	sbic	0x13, 0	; 19
 22a:	06 c0       	rjmp	.+12     	; 0x238 <loop+0x90>
 22c:	b2 99       	sbic	0x16, 2	; 22
 22e:	04 c0       	rjmp	.+8      	; 0x238 <loop+0x90>
		{
			printf("c,c");
 230:	00 d0       	rcall	.+0      	; 0x232 <loop+0x8a>
 232:	80 e6       	ldi	r24, 0x60	; 96
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	13 c0       	rjmp	.+38     	; 0x25e <loop+0xb6>
		
		}
		else if(((PINC&0x01) != 0x01) &&((PINB&0x04) == 0x04))
 238:	98 99       	sbic	0x13, 0	; 19
 23a:	0a c0       	rjmp	.+20     	; 0x250 <loop+0xa8>
 23c:	b2 9b       	sbis	0x16, 2	; 22
 23e:	08 c0       	rjmp	.+16     	; 0x250 <loop+0xa8>
		{
			printf("c,o");
 240:	00 d0       	rcall	.+0      	; 0x242 <loop+0x9a>
 242:	84 e6       	ldi	r24, 0x64	; 100
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	ed b7       	in	r30, 0x3d	; 61
 248:	fe b7       	in	r31, 0x3e	; 62
 24a:	92 83       	std	Z+2, r25	; 0x02
 24c:	81 83       	std	Z+1, r24	; 0x01
 24e:	0d c0       	rjmp	.+26     	; 0x26a <loop+0xc2>
		
		}
		else if(((PINC&0x01) == 0x01) && ((PINB&0x04) != 0x04))
 250:	98 9b       	sbis	0x13, 0	; 19
 252:	0f c0       	rjmp	.+30     	; 0x272 <loop+0xca>
 254:	b2 99       	sbic	0x16, 2	; 22
 256:	0d c0       	rjmp	.+26     	; 0x272 <loop+0xca>
		{
			printf("o,c");
 258:	00 d0       	rcall	.+0      	; 0x25a <loop+0xb2>
 25a:	88 e6       	ldi	r24, 0x68	; 104
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	ad b7       	in	r26, 0x3d	; 61
 260:	be b7       	in	r27, 0x3e	; 62
 262:	12 96       	adiw	r26, 0x02	; 2
 264:	9c 93       	st	X, r25
 266:	8e 93       	st	-X, r24
 268:	11 97       	sbiw	r26, 0x01	; 1
 26a:	1e d0       	rcall	.+60     	; 0x2a8 <printf>
 26c:	0f 90       	pop	r0
 26e:	0f 90       	pop	r0
 270:	08 95       	ret
		
		}
		else if(((PINC&0x01) == 0x01) && ((PINB&0x04) == 0x04))
 272:	98 9b       	sbis	0x13, 0	; 19
 274:	0c c0       	rjmp	.+24     	; 0x28e <loop+0xe6>
 276:	b2 9b       	sbis	0x16, 2	; 22
 278:	0a c0       	rjmp	.+20     	; 0x28e <loop+0xe6>
		{
			printf("o,o");
 27a:	00 d0       	rcall	.+0      	; 0x27c <loop+0xd4>
 27c:	8c e6       	ldi	r24, 0x6C	; 108
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	ed b7       	in	r30, 0x3d	; 61
 282:	fe b7       	in	r31, 0x3e	; 62
 284:	92 83       	std	Z+2, r25	; 0x02
 286:	81 83       	std	Z+1, r24	; 0x01
 288:	0f d0       	rcall	.+30     	; 0x2a8 <printf>
 28a:	0f 90       	pop	r0
 28c:	0f 90       	pop	r0
 28e:	08 95       	ret

00000290 <main>:
}

int main(void)
{
	
    setup();
 290:	f6 de       	rcall	.-532    	; 0x7e <setup>
	
    while (1) 
    {
		loop();
 292:	8a df       	rcall	.-236    	; 0x1a8 <loop>
 294:	8f ef       	ldi	r24, 0xFF	; 255
 296:	99 e6       	ldi	r25, 0x69	; 105
 298:	a8 e1       	ldi	r26, 0x18	; 24
 29a:	81 50       	subi	r24, 0x01	; 1
 29c:	90 40       	sbci	r25, 0x00	; 0
 29e:	a0 40       	sbci	r26, 0x00	; 0
 2a0:	e1 f7       	brne	.-8      	; 0x29a <main+0xa>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <main+0x14>
 2a4:	00 00       	nop
 2a6:	f5 cf       	rjmp	.-22     	; 0x292 <main+0x2>

000002a8 <printf>:
 2a8:	a0 e0       	ldi	r26, 0x00	; 0
 2aa:	b0 e0       	ldi	r27, 0x00	; 0
 2ac:	e9 e5       	ldi	r30, 0x59	; 89
 2ae:	f1 e0       	ldi	r31, 0x01	; 1
 2b0:	9b c2       	rjmp	.+1334   	; 0x7e8 <__prologue_saves__+0x20>
 2b2:	fe 01       	movw	r30, r28
 2b4:	35 96       	adiw	r30, 0x05	; 5
 2b6:	61 91       	ld	r22, Z+
 2b8:	71 91       	ld	r23, Z+
 2ba:	80 91 85 00 	lds	r24, 0x0085
 2be:	90 91 86 00 	lds	r25, 0x0086
 2c2:	af 01       	movw	r20, r30
 2c4:	09 d0       	rcall	.+18     	; 0x2d8 <vfprintf>
 2c6:	20 96       	adiw	r28, 0x00	; 0
 2c8:	e2 e0       	ldi	r30, 0x02	; 2
 2ca:	aa c2       	rjmp	.+1364   	; 0x820 <__epilogue_restores__+0x20>

000002cc <putchar>:
 2cc:	60 91 85 00 	lds	r22, 0x0085
 2d0:	70 91 86 00 	lds	r23, 0x0086
 2d4:	ef d1       	rcall	.+990    	; 0x6b4 <fputc>
 2d6:	08 95       	ret

000002d8 <vfprintf>:
 2d8:	ac e0       	ldi	r26, 0x0C	; 12
 2da:	b0 e0       	ldi	r27, 0x00	; 0
 2dc:	e1 e7       	ldi	r30, 0x71	; 113
 2de:	f1 e0       	ldi	r31, 0x01	; 1
 2e0:	73 c2       	rjmp	.+1254   	; 0x7c8 <__prologue_saves__>
 2e2:	6c 01       	movw	r12, r24
 2e4:	1b 01       	movw	r2, r22
 2e6:	8a 01       	movw	r16, r20
 2e8:	fc 01       	movw	r30, r24
 2ea:	17 82       	std	Z+7, r1	; 0x07
 2ec:	16 82       	std	Z+6, r1	; 0x06
 2ee:	83 81       	ldd	r24, Z+3	; 0x03
 2f0:	81 ff       	sbrs	r24, 1
 2f2:	c4 c1       	rjmp	.+904    	; 0x67c <__stack+0x21d>
 2f4:	2e 01       	movw	r4, r28
 2f6:	08 94       	sec
 2f8:	41 1c       	adc	r4, r1
 2fa:	51 1c       	adc	r5, r1
 2fc:	f6 01       	movw	r30, r12
 2fe:	93 81       	ldd	r25, Z+3	; 0x03
 300:	f1 01       	movw	r30, r2
 302:	93 fd       	sbrc	r25, 3
 304:	85 91       	lpm	r24, Z+
 306:	93 ff       	sbrs	r25, 3
 308:	81 91       	ld	r24, Z+
 30a:	1f 01       	movw	r2, r30
 30c:	88 23       	and	r24, r24
 30e:	09 f4       	brne	.+2      	; 0x312 <vfprintf+0x3a>
 310:	b1 c1       	rjmp	.+866    	; 0x674 <__stack+0x215>
 312:	85 32       	cpi	r24, 0x25	; 37
 314:	39 f4       	brne	.+14     	; 0x324 <vfprintf+0x4c>
 316:	93 fd       	sbrc	r25, 3
 318:	85 91       	lpm	r24, Z+
 31a:	93 ff       	sbrs	r25, 3
 31c:	81 91       	ld	r24, Z+
 31e:	1f 01       	movw	r2, r30
 320:	85 32       	cpi	r24, 0x25	; 37
 322:	21 f4       	brne	.+8      	; 0x32c <vfprintf+0x54>
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	b6 01       	movw	r22, r12
 328:	c5 d1       	rcall	.+906    	; 0x6b4 <fputc>
 32a:	e8 cf       	rjmp	.-48     	; 0x2fc <vfprintf+0x24>
 32c:	ee 24       	eor	r14, r14
 32e:	ff 24       	eor	r15, r15
 330:	20 e0       	ldi	r18, 0x00	; 0
 332:	20 32       	cpi	r18, 0x20	; 32
 334:	b0 f4       	brcc	.+44     	; 0x362 <vfprintf+0x8a>
 336:	8b 32       	cpi	r24, 0x2B	; 43
 338:	69 f0       	breq	.+26     	; 0x354 <vfprintf+0x7c>
 33a:	8c 32       	cpi	r24, 0x2C	; 44
 33c:	28 f4       	brcc	.+10     	; 0x348 <vfprintf+0x70>
 33e:	80 32       	cpi	r24, 0x20	; 32
 340:	51 f0       	breq	.+20     	; 0x356 <vfprintf+0x7e>
 342:	83 32       	cpi	r24, 0x23	; 35
 344:	71 f4       	brne	.+28     	; 0x362 <vfprintf+0x8a>
 346:	0b c0       	rjmp	.+22     	; 0x35e <vfprintf+0x86>
 348:	8d 32       	cpi	r24, 0x2D	; 45
 34a:	39 f0       	breq	.+14     	; 0x35a <vfprintf+0x82>
 34c:	80 33       	cpi	r24, 0x30	; 48
 34e:	49 f4       	brne	.+18     	; 0x362 <vfprintf+0x8a>
 350:	21 60       	ori	r18, 0x01	; 1
 352:	2c c0       	rjmp	.+88     	; 0x3ac <vfprintf+0xd4>
 354:	22 60       	ori	r18, 0x02	; 2
 356:	24 60       	ori	r18, 0x04	; 4
 358:	29 c0       	rjmp	.+82     	; 0x3ac <vfprintf+0xd4>
 35a:	28 60       	ori	r18, 0x08	; 8
 35c:	27 c0       	rjmp	.+78     	; 0x3ac <vfprintf+0xd4>
 35e:	20 61       	ori	r18, 0x10	; 16
 360:	25 c0       	rjmp	.+74     	; 0x3ac <vfprintf+0xd4>
 362:	27 fd       	sbrc	r18, 7
 364:	2c c0       	rjmp	.+88     	; 0x3be <vfprintf+0xe6>
 366:	38 2f       	mov	r19, r24
 368:	30 53       	subi	r19, 0x30	; 48
 36a:	3a 30       	cpi	r19, 0x0A	; 10
 36c:	98 f4       	brcc	.+38     	; 0x394 <vfprintf+0xbc>
 36e:	26 ff       	sbrs	r18, 6
 370:	08 c0       	rjmp	.+16     	; 0x382 <vfprintf+0xaa>
 372:	8e 2d       	mov	r24, r14
 374:	88 0f       	add	r24, r24
 376:	e8 2e       	mov	r14, r24
 378:	ee 0c       	add	r14, r14
 37a:	ee 0c       	add	r14, r14
 37c:	e8 0e       	add	r14, r24
 37e:	e3 0e       	add	r14, r19
 380:	15 c0       	rjmp	.+42     	; 0x3ac <vfprintf+0xd4>
 382:	8f 2d       	mov	r24, r15
 384:	88 0f       	add	r24, r24
 386:	f8 2e       	mov	r15, r24
 388:	ff 0c       	add	r15, r15
 38a:	ff 0c       	add	r15, r15
 38c:	f8 0e       	add	r15, r24
 38e:	f3 0e       	add	r15, r19
 390:	20 62       	ori	r18, 0x20	; 32
 392:	0c c0       	rjmp	.+24     	; 0x3ac <vfprintf+0xd4>
 394:	8e 32       	cpi	r24, 0x2E	; 46
 396:	21 f4       	brne	.+8      	; 0x3a0 <vfprintf+0xc8>
 398:	26 fd       	sbrc	r18, 6
 39a:	6c c1       	rjmp	.+728    	; 0x674 <__stack+0x215>
 39c:	20 64       	ori	r18, 0x40	; 64
 39e:	06 c0       	rjmp	.+12     	; 0x3ac <vfprintf+0xd4>
 3a0:	8c 36       	cpi	r24, 0x6C	; 108
 3a2:	11 f4       	brne	.+4      	; 0x3a8 <vfprintf+0xd0>
 3a4:	20 68       	ori	r18, 0x80	; 128
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <vfprintf+0xd4>
 3a8:	88 36       	cpi	r24, 0x68	; 104
 3aa:	49 f4       	brne	.+18     	; 0x3be <vfprintf+0xe6>
 3ac:	f1 01       	movw	r30, r2
 3ae:	93 fd       	sbrc	r25, 3
 3b0:	85 91       	lpm	r24, Z+
 3b2:	93 ff       	sbrs	r25, 3
 3b4:	81 91       	ld	r24, Z+
 3b6:	1f 01       	movw	r2, r30
 3b8:	88 23       	and	r24, r24
 3ba:	09 f0       	breq	.+2      	; 0x3be <vfprintf+0xe6>
 3bc:	ba cf       	rjmp	.-140    	; 0x332 <vfprintf+0x5a>
 3be:	98 2f       	mov	r25, r24
 3c0:	95 54       	subi	r25, 0x45	; 69
 3c2:	93 30       	cpi	r25, 0x03	; 3
 3c4:	18 f0       	brcs	.+6      	; 0x3cc <vfprintf+0xf4>
 3c6:	90 52       	subi	r25, 0x20	; 32
 3c8:	93 30       	cpi	r25, 0x03	; 3
 3ca:	28 f4       	brcc	.+10     	; 0x3d6 <vfprintf+0xfe>
 3cc:	0c 5f       	subi	r16, 0xFC	; 252
 3ce:	1f 4f       	sbci	r17, 0xFF	; 255
 3d0:	ff e3       	ldi	r31, 0x3F	; 63
 3d2:	f9 83       	std	Y+1, r31	; 0x01
 3d4:	0d c0       	rjmp	.+26     	; 0x3f0 <vfprintf+0x118>
 3d6:	83 36       	cpi	r24, 0x63	; 99
 3d8:	31 f0       	breq	.+12     	; 0x3e6 <vfprintf+0x10e>
 3da:	83 37       	cpi	r24, 0x73	; 115
 3dc:	71 f0       	breq	.+28     	; 0x3fa <vfprintf+0x122>
 3de:	83 35       	cpi	r24, 0x53	; 83
 3e0:	09 f0       	breq	.+2      	; 0x3e4 <vfprintf+0x10c>
 3e2:	5c c0       	rjmp	.+184    	; 0x49c <__stack+0x3d>
 3e4:	21 c0       	rjmp	.+66     	; 0x428 <vfprintf+0x150>
 3e6:	f8 01       	movw	r30, r16
 3e8:	80 81       	ld	r24, Z
 3ea:	89 83       	std	Y+1, r24	; 0x01
 3ec:	0e 5f       	subi	r16, 0xFE	; 254
 3ee:	1f 4f       	sbci	r17, 0xFF	; 255
 3f0:	42 01       	movw	r8, r4
 3f2:	71 e0       	ldi	r23, 0x01	; 1
 3f4:	a7 2e       	mov	r10, r23
 3f6:	b1 2c       	mov	r11, r1
 3f8:	15 c0       	rjmp	.+42     	; 0x424 <vfprintf+0x14c>
 3fa:	62 e0       	ldi	r22, 0x02	; 2
 3fc:	66 2e       	mov	r6, r22
 3fe:	71 2c       	mov	r7, r1
 400:	60 0e       	add	r6, r16
 402:	71 1e       	adc	r7, r17
 404:	f8 01       	movw	r30, r16
 406:	80 80       	ld	r8, Z
 408:	91 80       	ldd	r9, Z+1	; 0x01
 40a:	26 ff       	sbrs	r18, 6
 40c:	03 c0       	rjmp	.+6      	; 0x414 <vfprintf+0x13c>
 40e:	6e 2d       	mov	r22, r14
 410:	70 e0       	ldi	r23, 0x00	; 0
 412:	02 c0       	rjmp	.+4      	; 0x418 <vfprintf+0x140>
 414:	6f ef       	ldi	r22, 0xFF	; 255
 416:	7f ef       	ldi	r23, 0xFF	; 255
 418:	c4 01       	movw	r24, r8
 41a:	2c 87       	std	Y+12, r18	; 0x0c
 41c:	40 d1       	rcall	.+640    	; 0x69e <strnlen>
 41e:	5c 01       	movw	r10, r24
 420:	83 01       	movw	r16, r6
 422:	2c 85       	ldd	r18, Y+12	; 0x0c
 424:	2f 77       	andi	r18, 0x7F	; 127
 426:	16 c0       	rjmp	.+44     	; 0x454 <vfprintf+0x17c>
 428:	52 e0       	ldi	r21, 0x02	; 2
 42a:	65 2e       	mov	r6, r21
 42c:	71 2c       	mov	r7, r1
 42e:	60 0e       	add	r6, r16
 430:	71 1e       	adc	r7, r17
 432:	f8 01       	movw	r30, r16
 434:	80 80       	ld	r8, Z
 436:	91 80       	ldd	r9, Z+1	; 0x01
 438:	26 ff       	sbrs	r18, 6
 43a:	03 c0       	rjmp	.+6      	; 0x442 <vfprintf+0x16a>
 43c:	6e 2d       	mov	r22, r14
 43e:	70 e0       	ldi	r23, 0x00	; 0
 440:	02 c0       	rjmp	.+4      	; 0x446 <vfprintf+0x16e>
 442:	6f ef       	ldi	r22, 0xFF	; 255
 444:	7f ef       	ldi	r23, 0xFF	; 255
 446:	c4 01       	movw	r24, r8
 448:	2c 87       	std	Y+12, r18	; 0x0c
 44a:	1e d1       	rcall	.+572    	; 0x688 <strnlen_P>
 44c:	5c 01       	movw	r10, r24
 44e:	2c 85       	ldd	r18, Y+12	; 0x0c
 450:	20 68       	ori	r18, 0x80	; 128
 452:	83 01       	movw	r16, r6
 454:	23 fd       	sbrc	r18, 3
 456:	1e c0       	rjmp	.+60     	; 0x494 <__stack+0x35>
 458:	07 c0       	rjmp	.+14     	; 0x468 <__stack+0x9>
 45a:	80 e2       	ldi	r24, 0x20	; 32
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	b6 01       	movw	r22, r12
 460:	2c 87       	std	Y+12, r18	; 0x0c
 462:	28 d1       	rcall	.+592    	; 0x6b4 <fputc>
 464:	fa 94       	dec	r15
 466:	2c 85       	ldd	r18, Y+12	; 0x0c
 468:	8f 2d       	mov	r24, r15
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	a8 16       	cp	r10, r24
 46e:	b9 06       	cpc	r11, r25
 470:	a0 f3       	brcs	.-24     	; 0x45a <vfprintf+0x182>
 472:	10 c0       	rjmp	.+32     	; 0x494 <__stack+0x35>
 474:	f4 01       	movw	r30, r8
 476:	27 fd       	sbrc	r18, 7
 478:	85 91       	lpm	r24, Z+
 47a:	27 ff       	sbrs	r18, 7
 47c:	81 91       	ld	r24, Z+
 47e:	4f 01       	movw	r8, r30
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	b6 01       	movw	r22, r12
 484:	2c 87       	std	Y+12, r18	; 0x0c
 486:	16 d1       	rcall	.+556    	; 0x6b4 <fputc>
 488:	2c 85       	ldd	r18, Y+12	; 0x0c
 48a:	f1 10       	cpse	r15, r1
 48c:	fa 94       	dec	r15
 48e:	08 94       	sec
 490:	a1 08       	sbc	r10, r1
 492:	b1 08       	sbc	r11, r1
 494:	a1 14       	cp	r10, r1
 496:	b1 04       	cpc	r11, r1
 498:	69 f7       	brne	.-38     	; 0x474 <__stack+0x15>
 49a:	e9 c0       	rjmp	.+466    	; 0x66e <__stack+0x20f>
 49c:	84 36       	cpi	r24, 0x64	; 100
 49e:	11 f0       	breq	.+4      	; 0x4a4 <__stack+0x45>
 4a0:	89 36       	cpi	r24, 0x69	; 105
 4a2:	41 f5       	brne	.+80     	; 0x4f4 <__stack+0x95>
 4a4:	27 ff       	sbrs	r18, 7
 4a6:	08 c0       	rjmp	.+16     	; 0x4b8 <__stack+0x59>
 4a8:	f8 01       	movw	r30, r16
 4aa:	60 81       	ld	r22, Z
 4ac:	71 81       	ldd	r23, Z+1	; 0x01
 4ae:	82 81       	ldd	r24, Z+2	; 0x02
 4b0:	93 81       	ldd	r25, Z+3	; 0x03
 4b2:	0c 5f       	subi	r16, 0xFC	; 252
 4b4:	1f 4f       	sbci	r17, 0xFF	; 255
 4b6:	09 c0       	rjmp	.+18     	; 0x4ca <__stack+0x6b>
 4b8:	f8 01       	movw	r30, r16
 4ba:	60 81       	ld	r22, Z
 4bc:	71 81       	ldd	r23, Z+1	; 0x01
 4be:	88 27       	eor	r24, r24
 4c0:	77 fd       	sbrc	r23, 7
 4c2:	80 95       	com	r24
 4c4:	98 2f       	mov	r25, r24
 4c6:	0e 5f       	subi	r16, 0xFE	; 254
 4c8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ca:	4f e6       	ldi	r20, 0x6F	; 111
 4cc:	b4 2e       	mov	r11, r20
 4ce:	b2 22       	and	r11, r18
 4d0:	97 ff       	sbrs	r25, 7
 4d2:	09 c0       	rjmp	.+18     	; 0x4e6 <__stack+0x87>
 4d4:	90 95       	com	r25
 4d6:	80 95       	com	r24
 4d8:	70 95       	com	r23
 4da:	61 95       	neg	r22
 4dc:	7f 4f       	sbci	r23, 0xFF	; 255
 4de:	8f 4f       	sbci	r24, 0xFF	; 255
 4e0:	9f 4f       	sbci	r25, 0xFF	; 255
 4e2:	f0 e8       	ldi	r31, 0x80	; 128
 4e4:	bf 2a       	or	r11, r31
 4e6:	a2 01       	movw	r20, r4
 4e8:	2a e0       	ldi	r18, 0x0A	; 10
 4ea:	30 e0       	ldi	r19, 0x00	; 0
 4ec:	0f d1       	rcall	.+542    	; 0x70c <__ultoa_invert>
 4ee:	78 2e       	mov	r7, r24
 4f0:	74 18       	sub	r7, r4
 4f2:	44 c0       	rjmp	.+136    	; 0x57c <__stack+0x11d>
 4f4:	85 37       	cpi	r24, 0x75	; 117
 4f6:	31 f4       	brne	.+12     	; 0x504 <__stack+0xa5>
 4f8:	3f ee       	ldi	r19, 0xEF	; 239
 4fa:	b3 2e       	mov	r11, r19
 4fc:	b2 22       	and	r11, r18
 4fe:	2a e0       	ldi	r18, 0x0A	; 10
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	25 c0       	rjmp	.+74     	; 0x54e <__stack+0xef>
 504:	99 ef       	ldi	r25, 0xF9	; 249
 506:	b9 2e       	mov	r11, r25
 508:	b2 22       	and	r11, r18
 50a:	8f 36       	cpi	r24, 0x6F	; 111
 50c:	c1 f0       	breq	.+48     	; 0x53e <__stack+0xdf>
 50e:	80 37       	cpi	r24, 0x70	; 112
 510:	20 f4       	brcc	.+8      	; 0x51a <__stack+0xbb>
 512:	88 35       	cpi	r24, 0x58	; 88
 514:	09 f0       	breq	.+2      	; 0x518 <__stack+0xb9>
 516:	ae c0       	rjmp	.+348    	; 0x674 <__stack+0x215>
 518:	0d c0       	rjmp	.+26     	; 0x534 <__stack+0xd5>
 51a:	80 37       	cpi	r24, 0x70	; 112
 51c:	21 f0       	breq	.+8      	; 0x526 <__stack+0xc7>
 51e:	88 37       	cpi	r24, 0x78	; 120
 520:	09 f0       	breq	.+2      	; 0x524 <__stack+0xc5>
 522:	a8 c0       	rjmp	.+336    	; 0x674 <__stack+0x215>
 524:	02 c0       	rjmp	.+4      	; 0x52a <__stack+0xcb>
 526:	20 e1       	ldi	r18, 0x10	; 16
 528:	b2 2a       	or	r11, r18
 52a:	b4 fe       	sbrs	r11, 4
 52c:	0b c0       	rjmp	.+22     	; 0x544 <__stack+0xe5>
 52e:	84 e0       	ldi	r24, 0x04	; 4
 530:	b8 2a       	or	r11, r24
 532:	08 c0       	rjmp	.+16     	; 0x544 <__stack+0xe5>
 534:	b4 fe       	sbrs	r11, 4
 536:	09 c0       	rjmp	.+18     	; 0x54a <__stack+0xeb>
 538:	e6 e0       	ldi	r30, 0x06	; 6
 53a:	be 2a       	or	r11, r30
 53c:	06 c0       	rjmp	.+12     	; 0x54a <__stack+0xeb>
 53e:	28 e0       	ldi	r18, 0x08	; 8
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	05 c0       	rjmp	.+10     	; 0x54e <__stack+0xef>
 544:	20 e1       	ldi	r18, 0x10	; 16
 546:	30 e0       	ldi	r19, 0x00	; 0
 548:	02 c0       	rjmp	.+4      	; 0x54e <__stack+0xef>
 54a:	20 e1       	ldi	r18, 0x10	; 16
 54c:	32 e0       	ldi	r19, 0x02	; 2
 54e:	b7 fe       	sbrs	r11, 7
 550:	08 c0       	rjmp	.+16     	; 0x562 <__stack+0x103>
 552:	f8 01       	movw	r30, r16
 554:	60 81       	ld	r22, Z
 556:	71 81       	ldd	r23, Z+1	; 0x01
 558:	82 81       	ldd	r24, Z+2	; 0x02
 55a:	93 81       	ldd	r25, Z+3	; 0x03
 55c:	0c 5f       	subi	r16, 0xFC	; 252
 55e:	1f 4f       	sbci	r17, 0xFF	; 255
 560:	07 c0       	rjmp	.+14     	; 0x570 <__stack+0x111>
 562:	f8 01       	movw	r30, r16
 564:	60 81       	ld	r22, Z
 566:	71 81       	ldd	r23, Z+1	; 0x01
 568:	80 e0       	ldi	r24, 0x00	; 0
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	0e 5f       	subi	r16, 0xFE	; 254
 56e:	1f 4f       	sbci	r17, 0xFF	; 255
 570:	a2 01       	movw	r20, r4
 572:	cc d0       	rcall	.+408    	; 0x70c <__ultoa_invert>
 574:	78 2e       	mov	r7, r24
 576:	74 18       	sub	r7, r4
 578:	ff e7       	ldi	r31, 0x7F	; 127
 57a:	bf 22       	and	r11, r31
 57c:	b6 fe       	sbrs	r11, 6
 57e:	0b c0       	rjmp	.+22     	; 0x596 <__stack+0x137>
 580:	2e ef       	ldi	r18, 0xFE	; 254
 582:	b2 22       	and	r11, r18
 584:	7e 14       	cp	r7, r14
 586:	38 f4       	brcc	.+14     	; 0x596 <__stack+0x137>
 588:	b4 fe       	sbrs	r11, 4
 58a:	07 c0       	rjmp	.+14     	; 0x59a <__stack+0x13b>
 58c:	b2 fc       	sbrc	r11, 2
 58e:	05 c0       	rjmp	.+10     	; 0x59a <__stack+0x13b>
 590:	8f ee       	ldi	r24, 0xEF	; 239
 592:	b8 22       	and	r11, r24
 594:	02 c0       	rjmp	.+4      	; 0x59a <__stack+0x13b>
 596:	a7 2c       	mov	r10, r7
 598:	01 c0       	rjmp	.+2      	; 0x59c <__stack+0x13d>
 59a:	ae 2c       	mov	r10, r14
 59c:	8b 2d       	mov	r24, r11
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	b4 fe       	sbrs	r11, 4
 5a2:	0d c0       	rjmp	.+26     	; 0x5be <__stack+0x15f>
 5a4:	fe 01       	movw	r30, r28
 5a6:	e7 0d       	add	r30, r7
 5a8:	f1 1d       	adc	r31, r1
 5aa:	20 81       	ld	r18, Z
 5ac:	20 33       	cpi	r18, 0x30	; 48
 5ae:	19 f4       	brne	.+6      	; 0x5b6 <__stack+0x157>
 5b0:	e9 ee       	ldi	r30, 0xE9	; 233
 5b2:	be 22       	and	r11, r30
 5b4:	09 c0       	rjmp	.+18     	; 0x5c8 <__stack+0x169>
 5b6:	a3 94       	inc	r10
 5b8:	b2 fe       	sbrs	r11, 2
 5ba:	06 c0       	rjmp	.+12     	; 0x5c8 <__stack+0x169>
 5bc:	04 c0       	rjmp	.+8      	; 0x5c6 <__stack+0x167>
 5be:	86 78       	andi	r24, 0x86	; 134
 5c0:	90 70       	andi	r25, 0x00	; 0
 5c2:	00 97       	sbiw	r24, 0x00	; 0
 5c4:	09 f0       	breq	.+2      	; 0x5c8 <__stack+0x169>
 5c6:	a3 94       	inc	r10
 5c8:	8b 2c       	mov	r8, r11
 5ca:	99 24       	eor	r9, r9
 5cc:	b3 fc       	sbrc	r11, 3
 5ce:	13 c0       	rjmp	.+38     	; 0x5f6 <__stack+0x197>
 5d0:	b0 fe       	sbrs	r11, 0
 5d2:	0e c0       	rjmp	.+28     	; 0x5f0 <__stack+0x191>
 5d4:	af 14       	cp	r10, r15
 5d6:	28 f4       	brcc	.+10     	; 0x5e2 <__stack+0x183>
 5d8:	e7 2c       	mov	r14, r7
 5da:	ef 0c       	add	r14, r15
 5dc:	ea 18       	sub	r14, r10
 5de:	af 2c       	mov	r10, r15
 5e0:	07 c0       	rjmp	.+14     	; 0x5f0 <__stack+0x191>
 5e2:	e7 2c       	mov	r14, r7
 5e4:	05 c0       	rjmp	.+10     	; 0x5f0 <__stack+0x191>
 5e6:	80 e2       	ldi	r24, 0x20	; 32
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	b6 01       	movw	r22, r12
 5ec:	63 d0       	rcall	.+198    	; 0x6b4 <fputc>
 5ee:	a3 94       	inc	r10
 5f0:	af 14       	cp	r10, r15
 5f2:	c8 f3       	brcs	.-14     	; 0x5e6 <__stack+0x187>
 5f4:	04 c0       	rjmp	.+8      	; 0x5fe <__stack+0x19f>
 5f6:	af 14       	cp	r10, r15
 5f8:	10 f4       	brcc	.+4      	; 0x5fe <__stack+0x19f>
 5fa:	fa 18       	sub	r15, r10
 5fc:	01 c0       	rjmp	.+2      	; 0x600 <__stack+0x1a1>
 5fe:	ff 24       	eor	r15, r15
 600:	84 fe       	sbrs	r8, 4
 602:	0e c0       	rjmp	.+28     	; 0x620 <__stack+0x1c1>
 604:	80 e3       	ldi	r24, 0x30	; 48
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	b6 01       	movw	r22, r12
 60a:	54 d0       	rcall	.+168    	; 0x6b4 <fputc>
 60c:	82 fe       	sbrs	r8, 2
 60e:	1d c0       	rjmp	.+58     	; 0x64a <__stack+0x1eb>
 610:	81 fe       	sbrs	r8, 1
 612:	03 c0       	rjmp	.+6      	; 0x61a <__stack+0x1bb>
 614:	88 e5       	ldi	r24, 0x58	; 88
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	10 c0       	rjmp	.+32     	; 0x63a <__stack+0x1db>
 61a:	88 e7       	ldi	r24, 0x78	; 120
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	0d c0       	rjmp	.+26     	; 0x63a <__stack+0x1db>
 620:	c4 01       	movw	r24, r8
 622:	86 78       	andi	r24, 0x86	; 134
 624:	90 70       	andi	r25, 0x00	; 0
 626:	00 97       	sbiw	r24, 0x00	; 0
 628:	81 f0       	breq	.+32     	; 0x64a <__stack+0x1eb>
 62a:	81 fc       	sbrc	r8, 1
 62c:	02 c0       	rjmp	.+4      	; 0x632 <__stack+0x1d3>
 62e:	80 e2       	ldi	r24, 0x20	; 32
 630:	01 c0       	rjmp	.+2      	; 0x634 <__stack+0x1d5>
 632:	8b e2       	ldi	r24, 0x2B	; 43
 634:	b7 fc       	sbrc	r11, 7
 636:	8d e2       	ldi	r24, 0x2D	; 45
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	b6 01       	movw	r22, r12
 63c:	3b d0       	rcall	.+118    	; 0x6b4 <fputc>
 63e:	05 c0       	rjmp	.+10     	; 0x64a <__stack+0x1eb>
 640:	80 e3       	ldi	r24, 0x30	; 48
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	b6 01       	movw	r22, r12
 646:	36 d0       	rcall	.+108    	; 0x6b4 <fputc>
 648:	ea 94       	dec	r14
 64a:	7e 14       	cp	r7, r14
 64c:	c8 f3       	brcs	.-14     	; 0x640 <__stack+0x1e1>
 64e:	7a 94       	dec	r7
 650:	f2 01       	movw	r30, r4
 652:	e7 0d       	add	r30, r7
 654:	f1 1d       	adc	r31, r1
 656:	80 81       	ld	r24, Z
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	b6 01       	movw	r22, r12
 65c:	2b d0       	rcall	.+86     	; 0x6b4 <fputc>
 65e:	77 20       	and	r7, r7
 660:	b1 f7       	brne	.-20     	; 0x64e <__stack+0x1ef>
 662:	05 c0       	rjmp	.+10     	; 0x66e <__stack+0x20f>
 664:	80 e2       	ldi	r24, 0x20	; 32
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	b6 01       	movw	r22, r12
 66a:	24 d0       	rcall	.+72     	; 0x6b4 <fputc>
 66c:	fa 94       	dec	r15
 66e:	ff 20       	and	r15, r15
 670:	c9 f7       	brne	.-14     	; 0x664 <__stack+0x205>
 672:	44 ce       	rjmp	.-888    	; 0x2fc <vfprintf+0x24>
 674:	f6 01       	movw	r30, r12
 676:	26 81       	ldd	r18, Z+6	; 0x06
 678:	37 81       	ldd	r19, Z+7	; 0x07
 67a:	02 c0       	rjmp	.+4      	; 0x680 <__stack+0x221>
 67c:	2f ef       	ldi	r18, 0xFF	; 255
 67e:	3f ef       	ldi	r19, 0xFF	; 255
 680:	c9 01       	movw	r24, r18
 682:	2c 96       	adiw	r28, 0x0c	; 12
 684:	e2 e1       	ldi	r30, 0x12	; 18
 686:	bc c0       	rjmp	.+376    	; 0x800 <__epilogue_restores__>

00000688 <strnlen_P>:
 688:	fc 01       	movw	r30, r24
 68a:	05 90       	lpm	r0, Z+
 68c:	61 50       	subi	r22, 0x01	; 1
 68e:	70 40       	sbci	r23, 0x00	; 0
 690:	01 10       	cpse	r0, r1
 692:	d8 f7       	brcc	.-10     	; 0x68a <strnlen_P+0x2>
 694:	80 95       	com	r24
 696:	90 95       	com	r25
 698:	8e 0f       	add	r24, r30
 69a:	9f 1f       	adc	r25, r31
 69c:	08 95       	ret

0000069e <strnlen>:
 69e:	fc 01       	movw	r30, r24
 6a0:	61 50       	subi	r22, 0x01	; 1
 6a2:	70 40       	sbci	r23, 0x00	; 0
 6a4:	01 90       	ld	r0, Z+
 6a6:	01 10       	cpse	r0, r1
 6a8:	d8 f7       	brcc	.-10     	; 0x6a0 <strnlen+0x2>
 6aa:	80 95       	com	r24
 6ac:	90 95       	com	r25
 6ae:	8e 0f       	add	r24, r30
 6b0:	9f 1f       	adc	r25, r31
 6b2:	08 95       	ret

000006b4 <fputc>:
 6b4:	0f 93       	push	r16
 6b6:	1f 93       	push	r17
 6b8:	cf 93       	push	r28
 6ba:	df 93       	push	r29
 6bc:	8c 01       	movw	r16, r24
 6be:	eb 01       	movw	r28, r22
 6c0:	8b 81       	ldd	r24, Y+3	; 0x03
 6c2:	81 ff       	sbrs	r24, 1
 6c4:	1b c0       	rjmp	.+54     	; 0x6fc <fputc+0x48>
 6c6:	82 ff       	sbrs	r24, 2
 6c8:	0d c0       	rjmp	.+26     	; 0x6e4 <fputc+0x30>
 6ca:	2e 81       	ldd	r18, Y+6	; 0x06
 6cc:	3f 81       	ldd	r19, Y+7	; 0x07
 6ce:	8c 81       	ldd	r24, Y+4	; 0x04
 6d0:	9d 81       	ldd	r25, Y+5	; 0x05
 6d2:	28 17       	cp	r18, r24
 6d4:	39 07       	cpc	r19, r25
 6d6:	64 f4       	brge	.+24     	; 0x6f0 <fputc+0x3c>
 6d8:	e8 81       	ld	r30, Y
 6da:	f9 81       	ldd	r31, Y+1	; 0x01
 6dc:	01 93       	st	Z+, r16
 6de:	f9 83       	std	Y+1, r31	; 0x01
 6e0:	e8 83       	st	Y, r30
 6e2:	06 c0       	rjmp	.+12     	; 0x6f0 <fputc+0x3c>
 6e4:	e8 85       	ldd	r30, Y+8	; 0x08
 6e6:	f9 85       	ldd	r31, Y+9	; 0x09
 6e8:	80 2f       	mov	r24, r16
 6ea:	09 95       	icall
 6ec:	00 97       	sbiw	r24, 0x00	; 0
 6ee:	31 f4       	brne	.+12     	; 0x6fc <fputc+0x48>
 6f0:	8e 81       	ldd	r24, Y+6	; 0x06
 6f2:	9f 81       	ldd	r25, Y+7	; 0x07
 6f4:	01 96       	adiw	r24, 0x01	; 1
 6f6:	9f 83       	std	Y+7, r25	; 0x07
 6f8:	8e 83       	std	Y+6, r24	; 0x06
 6fa:	02 c0       	rjmp	.+4      	; 0x700 <fputc+0x4c>
 6fc:	0f ef       	ldi	r16, 0xFF	; 255
 6fe:	1f ef       	ldi	r17, 0xFF	; 255
 700:	c8 01       	movw	r24, r16
 702:	df 91       	pop	r29
 704:	cf 91       	pop	r28
 706:	1f 91       	pop	r17
 708:	0f 91       	pop	r16
 70a:	08 95       	ret

0000070c <__ultoa_invert>:
 70c:	fa 01       	movw	r30, r20
 70e:	aa 27       	eor	r26, r26
 710:	28 30       	cpi	r18, 0x08	; 8
 712:	51 f1       	breq	.+84     	; 0x768 <__ultoa_invert+0x5c>
 714:	20 31       	cpi	r18, 0x10	; 16
 716:	81 f1       	breq	.+96     	; 0x778 <__ultoa_invert+0x6c>
 718:	e8 94       	clt
 71a:	6f 93       	push	r22
 71c:	6e 7f       	andi	r22, 0xFE	; 254
 71e:	6e 5f       	subi	r22, 0xFE	; 254
 720:	7f 4f       	sbci	r23, 0xFF	; 255
 722:	8f 4f       	sbci	r24, 0xFF	; 255
 724:	9f 4f       	sbci	r25, 0xFF	; 255
 726:	af 4f       	sbci	r26, 0xFF	; 255
 728:	b1 e0       	ldi	r27, 0x01	; 1
 72a:	3e d0       	rcall	.+124    	; 0x7a8 <__ultoa_invert+0x9c>
 72c:	b4 e0       	ldi	r27, 0x04	; 4
 72e:	3c d0       	rcall	.+120    	; 0x7a8 <__ultoa_invert+0x9c>
 730:	67 0f       	add	r22, r23
 732:	78 1f       	adc	r23, r24
 734:	89 1f       	adc	r24, r25
 736:	9a 1f       	adc	r25, r26
 738:	a1 1d       	adc	r26, r1
 73a:	68 0f       	add	r22, r24
 73c:	79 1f       	adc	r23, r25
 73e:	8a 1f       	adc	r24, r26
 740:	91 1d       	adc	r25, r1
 742:	a1 1d       	adc	r26, r1
 744:	6a 0f       	add	r22, r26
 746:	71 1d       	adc	r23, r1
 748:	81 1d       	adc	r24, r1
 74a:	91 1d       	adc	r25, r1
 74c:	a1 1d       	adc	r26, r1
 74e:	20 d0       	rcall	.+64     	; 0x790 <__ultoa_invert+0x84>
 750:	09 f4       	brne	.+2      	; 0x754 <__ultoa_invert+0x48>
 752:	68 94       	set
 754:	3f 91       	pop	r19
 756:	2a e0       	ldi	r18, 0x0A	; 10
 758:	26 9f       	mul	r18, r22
 75a:	11 24       	eor	r1, r1
 75c:	30 19       	sub	r19, r0
 75e:	30 5d       	subi	r19, 0xD0	; 208
 760:	31 93       	st	Z+, r19
 762:	de f6       	brtc	.-74     	; 0x71a <__ultoa_invert+0xe>
 764:	cf 01       	movw	r24, r30
 766:	08 95       	ret
 768:	46 2f       	mov	r20, r22
 76a:	47 70       	andi	r20, 0x07	; 7
 76c:	40 5d       	subi	r20, 0xD0	; 208
 76e:	41 93       	st	Z+, r20
 770:	b3 e0       	ldi	r27, 0x03	; 3
 772:	0f d0       	rcall	.+30     	; 0x792 <__ultoa_invert+0x86>
 774:	c9 f7       	brne	.-14     	; 0x768 <__ultoa_invert+0x5c>
 776:	f6 cf       	rjmp	.-20     	; 0x764 <__ultoa_invert+0x58>
 778:	46 2f       	mov	r20, r22
 77a:	4f 70       	andi	r20, 0x0F	; 15
 77c:	40 5d       	subi	r20, 0xD0	; 208
 77e:	4a 33       	cpi	r20, 0x3A	; 58
 780:	18 f0       	brcs	.+6      	; 0x788 <__ultoa_invert+0x7c>
 782:	49 5d       	subi	r20, 0xD9	; 217
 784:	31 fd       	sbrc	r19, 1
 786:	40 52       	subi	r20, 0x20	; 32
 788:	41 93       	st	Z+, r20
 78a:	02 d0       	rcall	.+4      	; 0x790 <__ultoa_invert+0x84>
 78c:	a9 f7       	brne	.-22     	; 0x778 <__ultoa_invert+0x6c>
 78e:	ea cf       	rjmp	.-44     	; 0x764 <__ultoa_invert+0x58>
 790:	b4 e0       	ldi	r27, 0x04	; 4
 792:	a6 95       	lsr	r26
 794:	97 95       	ror	r25
 796:	87 95       	ror	r24
 798:	77 95       	ror	r23
 79a:	67 95       	ror	r22
 79c:	ba 95       	dec	r27
 79e:	c9 f7       	brne	.-14     	; 0x792 <__ultoa_invert+0x86>
 7a0:	00 97       	sbiw	r24, 0x00	; 0
 7a2:	61 05       	cpc	r22, r1
 7a4:	71 05       	cpc	r23, r1
 7a6:	08 95       	ret
 7a8:	9b 01       	movw	r18, r22
 7aa:	ac 01       	movw	r20, r24
 7ac:	0a 2e       	mov	r0, r26
 7ae:	06 94       	lsr	r0
 7b0:	57 95       	ror	r21
 7b2:	47 95       	ror	r20
 7b4:	37 95       	ror	r19
 7b6:	27 95       	ror	r18
 7b8:	ba 95       	dec	r27
 7ba:	c9 f7       	brne	.-14     	; 0x7ae <__ultoa_invert+0xa2>
 7bc:	62 0f       	add	r22, r18
 7be:	73 1f       	adc	r23, r19
 7c0:	84 1f       	adc	r24, r20
 7c2:	95 1f       	adc	r25, r21
 7c4:	a0 1d       	adc	r26, r0
 7c6:	08 95       	ret

000007c8 <__prologue_saves__>:
 7c8:	2f 92       	push	r2
 7ca:	3f 92       	push	r3
 7cc:	4f 92       	push	r4
 7ce:	5f 92       	push	r5
 7d0:	6f 92       	push	r6
 7d2:	7f 92       	push	r7
 7d4:	8f 92       	push	r8
 7d6:	9f 92       	push	r9
 7d8:	af 92       	push	r10
 7da:	bf 92       	push	r11
 7dc:	cf 92       	push	r12
 7de:	df 92       	push	r13
 7e0:	ef 92       	push	r14
 7e2:	ff 92       	push	r15
 7e4:	0f 93       	push	r16
 7e6:	1f 93       	push	r17
 7e8:	cf 93       	push	r28
 7ea:	df 93       	push	r29
 7ec:	cd b7       	in	r28, 0x3d	; 61
 7ee:	de b7       	in	r29, 0x3e	; 62
 7f0:	ca 1b       	sub	r28, r26
 7f2:	db 0b       	sbc	r29, r27
 7f4:	0f b6       	in	r0, 0x3f	; 63
 7f6:	f8 94       	cli
 7f8:	de bf       	out	0x3e, r29	; 62
 7fa:	0f be       	out	0x3f, r0	; 63
 7fc:	cd bf       	out	0x3d, r28	; 61
 7fe:	09 94       	ijmp

00000800 <__epilogue_restores__>:
 800:	2a 88       	ldd	r2, Y+18	; 0x12
 802:	39 88       	ldd	r3, Y+17	; 0x11
 804:	48 88       	ldd	r4, Y+16	; 0x10
 806:	5f 84       	ldd	r5, Y+15	; 0x0f
 808:	6e 84       	ldd	r6, Y+14	; 0x0e
 80a:	7d 84       	ldd	r7, Y+13	; 0x0d
 80c:	8c 84       	ldd	r8, Y+12	; 0x0c
 80e:	9b 84       	ldd	r9, Y+11	; 0x0b
 810:	aa 84       	ldd	r10, Y+10	; 0x0a
 812:	b9 84       	ldd	r11, Y+9	; 0x09
 814:	c8 84       	ldd	r12, Y+8	; 0x08
 816:	df 80       	ldd	r13, Y+7	; 0x07
 818:	ee 80       	ldd	r14, Y+6	; 0x06
 81a:	fd 80       	ldd	r15, Y+5	; 0x05
 81c:	0c 81       	ldd	r16, Y+4	; 0x04
 81e:	1b 81       	ldd	r17, Y+3	; 0x03
 820:	aa 81       	ldd	r26, Y+2	; 0x02
 822:	b9 81       	ldd	r27, Y+1	; 0x01
 824:	ce 0f       	add	r28, r30
 826:	d1 1d       	adc	r29, r1
 828:	0f b6       	in	r0, 0x3f	; 63
 82a:	f8 94       	cli
 82c:	de bf       	out	0x3e, r29	; 62
 82e:	0f be       	out	0x3f, r0	; 63
 830:	cd bf       	out	0x3d, r28	; 61
 832:	ed 01       	movw	r28, r26
 834:	08 95       	ret

00000836 <_exit>:
 836:	f8 94       	cli

00000838 <__stop_program>:
 838:	ff cf       	rjmp	.-2      	; 0x838 <__stop_program>
