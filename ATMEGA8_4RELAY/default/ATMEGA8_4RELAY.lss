
ATMEGA8_4RELAY.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000084c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  0000084c  000008e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  0080007e  0080007e  000008fe  2**0
                  ALLOC
  3 .stab         00000c84  00000000  00000000  00000900  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  00001584  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  0000173a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000103  00000000  00000000  000017da  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000d9a  00000000  00000000  000018dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000758  00000000  00000000  00002677  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000fc0  00000000  00000000  00002dcf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000f0  00000000  00000000  00003d90  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000389  00000000  00000000  00003e80  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ff  00000000  00000000  00004209  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000159  00000000  00000000  00004a08  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000058  00000000  00000000  00004b61  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	54 c0       	rjmp	.+168    	; 0xc0 <__vector_11>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ec e4       	ldi	r30, 0x4C	; 76
  3a:	f8 e0       	ldi	r31, 0x08	; 8
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	ae 37       	cpi	r26, 0x7E	; 126
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	ae e7       	ldi	r26, 0x7E	; 126
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a9 38       	cpi	r26, 0x89	; 137
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	24 d1       	rcall	.+584    	; 0x2a2 <main>
  5a:	f6 c3       	rjmp	.+2028   	; 0x848 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <USART_putchar>:
	return 0;
}

static int USART_putchar(char c, FILE *stream)
{
	if(c == '\n')
  5e:	8a 30       	cpi	r24, 0x0A	; 10
  60:	41 f4       	brne	.+16     	; 0x72 <USART_putchar+0x14>
	{   loop_until_bit_is_set(UCSRA,UDRE);
  62:	5d 9b       	sbis	0x0b, 5	; 11
  64:	fe cf       	rjmp	.-4      	; 0x62 <USART_putchar+0x4>
		UDR = 0x0D;
  66:	8d e0       	ldi	r24, 0x0D	; 13
  68:	8c b9       	out	0x0c, r24	; 12
		loop_until_bit_is_set(UCSRA,UDRE);
  6a:	5d 9b       	sbis	0x0b, 5	; 11
  6c:	fe cf       	rjmp	.-4      	; 0x6a <USART_putchar+0xc>
		UDR = 0x0A;
  6e:	8a e0       	ldi	r24, 0x0A	; 10
  70:	02 c0       	rjmp	.+4      	; 0x76 <USART_putchar+0x18>
	}
	else
	{  loop_until_bit_is_set(UCSRA,UDRE);
  72:	5d 9b       	sbis	0x0b, 5	; 11
  74:	fe cf       	rjmp	.-4      	; 0x72 <USART_putchar+0x14>
		UDR = c;
  76:	8c b9       	out	0x0c, r24	; 12
	}
	return 0;

}
  78:	80 e0       	ldi	r24, 0x00	; 0
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	08 95       	ret

0000007e <setup>:

volatile unsigned char RX_BUF[1], Relay[2], Test, Case;

void setup() {
	
	cli();
  7e:	f8 94       	cli

	//UART
	// 8MHz 38400
	//UBRRL = 12;
	UBRRL = 51; // 9600 bps
  80:	83 e3       	ldi	r24, 0x33	; 51
  82:	89 b9       	out	0x09, r24	; 9

	DDRB = (0 << PB2) | (1 << PB1) | (1 << PB0); // PB2 : 자석2, PB1: 전원제어2 , PB0: 전원제어1
  84:	83 e0       	ldi	r24, 0x03	; 3
  86:	87 bb       	out	0x17, r24	; 23
	DDRC = (1 << PC3) | (1 << PC2) | (0 << PC0); // PC3: 데드볼트2, PC2: 데드볼트1, PC0: 자석1
  88:	8c e0       	ldi	r24, 0x0C	; 12
  8a:	84 bb       	out	0x14, r24	; 20
	DDRD = (1 << PD1) | (0 << PD0); //UART
  8c:	82 e0       	ldi	r24, 0x02	; 2
  8e:	81 bb       	out	0x11, r24	; 17
	
	PORTC = (1 << PC0); // 자석1 풀업 저항
  90:	81 e0       	ldi	r24, 0x01	; 1
  92:	85 bb       	out	0x15, r24	; 21
	PORTB = (1 << PB2); // 자석2 풀업 저항
  94:	94 e0       	ldi	r25, 0x04	; 4
  96:	98 bb       	out	0x18, r25	; 24

	UCSRB = (1 << RXCIE) | (1 << RXEN) | (1 << TXEN);
  98:	98 e9       	ldi	r25, 0x98	; 152
  9a:	9a b9       	out	0x0a, r25	; 10

	Relay[0] = 1;
  9c:	80 93 81 00 	sts	0x0081, r24
	Relay[1] = 1;
  a0:	80 93 82 00 	sts	0x0082, r24

	Test = 0;
  a4:	10 92 7e 00 	sts	0x007E, r1

	//전원 High
	sbi(PORTB, 0);
  a8:	c0 9a       	sbi	0x18, 0	; 24
	sbi(PORTB, 1);
  aa:	c1 9a       	sbi	0x18, 1	; 24

	//데드볼트 High
	sbi(PORTC, 2);
  ac:	aa 9a       	sbi	0x15, 2	; 21
	sbi(PORTC, 3);
  ae:	ab 9a       	sbi	0x15, 3	; 21

	stdout = &device;
  b0:	80 e7       	ldi	r24, 0x70	; 112
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	90 93 86 00 	sts	0x0086, r25
  b8:	80 93 85 00 	sts	0x0085, r24

	sei();
  bc:	78 94       	sei

}
  be:	08 95       	ret

000000c0 <__vector_11>:

ISR(SIG_UART_RECV)
{
  c0:	1f 92       	push	r1
  c2:	0f 92       	push	r0
  c4:	0f b6       	in	r0, 0x3f	; 63
  c6:	0f 92       	push	r0
  c8:	11 24       	eor	r1, r1
  ca:	8f 93       	push	r24
  cc:	9f 93       	push	r25
  ce:	af 93       	push	r26
  d0:	bf 93       	push	r27
	cli();
  d2:	f8 94       	cli

	while((UCSRA &(1<<RXC)) == 0);
  d4:	5f 9b       	sbis	0x0b, 7	; 11
  d6:	fe cf       	rjmp	.-4      	; 0xd4 <__vector_11+0x14>
	
	RX_BUF[0] = UDR;
  d8:	8c b1       	in	r24, 0x0c	; 12
  da:	80 93 7f 00 	sts	0x007F, r24

	if(RX_BUF[0] == '1') // 1번문 열기
  de:	80 91 7f 00 	lds	r24, 0x007F
  e2:	81 33       	cpi	r24, 0x31	; 49
  e4:	51 f4       	brne	.+20     	; 0xfa <__vector_11+0x3a>
	{
		if(Test == 1)
  e6:	80 91 7e 00 	lds	r24, 0x007E
  ea:	81 30       	cpi	r24, 0x01	; 1
  ec:	11 f4       	brne	.+4      	; 0xf2 <__vector_11+0x32>
		{
			cbi(PORTC,2);
  ee:	aa 98       	cbi	0x15, 2	; 21
  f0:	4d c0       	rjmp	.+154    	; 0x18c <__vector_11+0xcc>
		}
		else
		{
			cbi(PORTC,2);
  f2:	aa 98       	cbi	0x15, 2	; 21
			Relay[0] = 0;
  f4:	10 92 81 00 	sts	0x0081, r1
  f8:	0d c0       	rjmp	.+26     	; 0x114 <__vector_11+0x54>
			_delay_ms(5000);
		}
	}
	else if(RX_BUF[0] == '3') // 2번문 열기
  fa:	80 91 7f 00 	lds	r24, 0x007F
  fe:	83 33       	cpi	r24, 0x33	; 51
 100:	99 f4       	brne	.+38     	; 0x128 <__vector_11+0x68>
	{
		if(Test == 1)
 102:	80 91 7e 00 	lds	r24, 0x007E
 106:	81 30       	cpi	r24, 0x01	; 1
 108:	11 f4       	brne	.+4      	; 0x10e <__vector_11+0x4e>
		{
			cbi(PORTC,3);
 10a:	ab 98       	cbi	0x15, 3	; 21
 10c:	3f c0       	rjmp	.+126    	; 0x18c <__vector_11+0xcc>
		}
		else
		{
			cbi(PORTC,3);
 10e:	ab 98       	cbi	0x15, 3	; 21
			Relay[1] = 0;
 110:	10 92 82 00 	sts	0x0082, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 114:	8f ef       	ldi	r24, 0xFF	; 255
 116:	91 e1       	ldi	r25, 0x11	; 17
 118:	aa e7       	ldi	r26, 0x7A	; 122
 11a:	81 50       	subi	r24, 0x01	; 1
 11c:	90 40       	sbci	r25, 0x00	; 0
 11e:	a0 40       	sbci	r26, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <__vector_11+0x5a>
 122:	00 c0       	rjmp	.+0      	; 0x124 <__vector_11+0x64>
 124:	00 00       	nop
 126:	32 c0       	rjmp	.+100    	; 0x18c <__vector_11+0xcc>
			_delay_ms(5000);
		}
	}
	else if(RX_BUF[0] == '4') // 1번문 닫기
 128:	80 91 7f 00 	lds	r24, 0x007F
 12c:	84 33       	cpi	r24, 0x34	; 52
 12e:	11 f4       	brne	.+4      	; 0x134 <__vector_11+0x74>
	{	
		sbi(PORTC,2);
 130:	aa 9a       	sbi	0x15, 2	; 21
 132:	2c c0       	rjmp	.+88     	; 0x18c <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '5') // 2번문 닫기
 134:	80 91 7f 00 	lds	r24, 0x007F
 138:	85 33       	cpi	r24, 0x35	; 53
 13a:	11 f4       	brne	.+4      	; 0x140 <__vector_11+0x80>
	{
		sbi(PORTC,3);
 13c:	ab 9a       	sbi	0x15, 3	; 21
 13e:	26 c0       	rjmp	.+76     	; 0x18c <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '6') // 1번 전원 제어 (NC)
 140:	80 91 7f 00 	lds	r24, 0x007F
 144:	86 33       	cpi	r24, 0x36	; 54
 146:	11 f4       	brne	.+4      	; 0x14c <__vector_11+0x8c>
	{
		sbi(PORTB,0);
 148:	c0 9a       	sbi	0x18, 0	; 24
 14a:	20 c0       	rjmp	.+64     	; 0x18c <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '7') // 1번 전원 제어 (NO)
 14c:	80 91 7f 00 	lds	r24, 0x007F
 150:	87 33       	cpi	r24, 0x37	; 55
 152:	11 f4       	brne	.+4      	; 0x158 <__vector_11+0x98>
	{
		cbi(PORTB,0);
 154:	c0 98       	cbi	0x18, 0	; 24
 156:	1a c0       	rjmp	.+52     	; 0x18c <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '8') // 2번 전원 제어 (NC)
 158:	80 91 7f 00 	lds	r24, 0x007F
 15c:	88 33       	cpi	r24, 0x38	; 56
 15e:	11 f4       	brne	.+4      	; 0x164 <__vector_11+0xa4>
	{
		sbi(PORTB,1);
 160:	c1 9a       	sbi	0x18, 1	; 24
 162:	14 c0       	rjmp	.+40     	; 0x18c <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == '9') // 2번 전원 제어 (NO)
 164:	80 91 7f 00 	lds	r24, 0x007F
 168:	89 33       	cpi	r24, 0x39	; 57
 16a:	11 f4       	brne	.+4      	; 0x170 <__vector_11+0xb0>
	{
		cbi(PORTB,1);
 16c:	c1 98       	cbi	0x18, 1	; 24
 16e:	0e c0       	rjmp	.+28     	; 0x18c <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == 'T') 
 170:	80 91 7f 00 	lds	r24, 0x007F
 174:	84 35       	cpi	r24, 0x54	; 84
 176:	21 f4       	brne	.+8      	; 0x180 <__vector_11+0xc0>
	{
		Test = 1;  // set test mode
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	80 93 7e 00 	sts	0x007E, r24
 17e:	06 c0       	rjmp	.+12     	; 0x18c <__vector_11+0xcc>
	}
	else if(RX_BUF[0] == 'F') 
 180:	80 91 7f 00 	lds	r24, 0x007F
 184:	86 34       	cpi	r24, 0x46	; 70
 186:	11 f4       	brne	.+4      	; 0x18c <__vector_11+0xcc>
	{
		Test = 0;  // end test mode
 188:	10 92 7e 00 	sts	0x007E, r1
	}

	sei();
 18c:	78 94       	sei
}
 18e:	bf 91       	pop	r27
 190:	af 91       	pop	r26
 192:	9f 91       	pop	r25
 194:	8f 91       	pop	r24
 196:	0f 90       	pop	r0
 198:	0f be       	out	0x3f, r0	; 63
 19a:	0f 90       	pop	r0
 19c:	1f 90       	pop	r1
 19e:	18 95       	reti

000001a0 <tillend>:

void tillend()
{

	printf("2");
 1a0:	82 e3       	ldi	r24, 0x32	; 50
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	9c d0       	rcall	.+312    	; 0x2de <putchar>
	Relay[0] = 2;
 1a6:	82 e0       	ldi	r24, 0x02	; 2
 1a8:	80 93 81 00 	sts	0x0081, r24
	Relay[1] = 2;
 1ac:	80 93 82 00 	sts	0x0082, r24

}
 1b0:	08 95       	ret

000001b2 <loop>:

void loop(){

	if(Test == 0)
 1b2:	80 91 7e 00 	lds	r24, 0x007E
 1b6:	88 23       	and	r24, r24
 1b8:	e1 f5       	brne	.+120    	; 0x232 <loop+0x80>
	{
		if(Relay[0] == 0)
 1ba:	80 91 81 00 	lds	r24, 0x0081
 1be:	88 23       	and	r24, r24
 1c0:	49 f4       	brne	.+18     	; 0x1d4 <loop+0x22>
		{
			if(!(PINC&0x01))
 1c2:	98 99       	sbic	0x13, 0	; 19
 1c4:	07 c0       	rjmp	.+14     	; 0x1d4 <loop+0x22>
			{
				printf("0");
 1c6:	80 e3       	ldi	r24, 0x30	; 48
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	89 d0       	rcall	.+274    	; 0x2de <putchar>
				sbi(PORTC,2);
 1cc:	aa 9a       	sbi	0x15, 2	; 21
				Relay[0] = 1;
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	80 93 81 00 	sts	0x0081, r24
			}
		}

		if(Relay[1] == 0)
 1d4:	80 91 82 00 	lds	r24, 0x0082
 1d8:	88 23       	and	r24, r24
 1da:	49 f4       	brne	.+18     	; 0x1ee <loop+0x3c>
		{
			if(!(PINB&0x04))
 1dc:	b2 99       	sbic	0x16, 2	; 22
 1de:	07 c0       	rjmp	.+14     	; 0x1ee <loop+0x3c>
			{
				printf("0");
 1e0:	80 e3       	ldi	r24, 0x30	; 48
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	7c d0       	rcall	.+248    	; 0x2de <putchar>
				sbi(PORTC,3);
 1e6:	ab 9a       	sbi	0x15, 3	; 21
				Relay[1] = 1;
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	80 93 82 00 	sts	0x0082, r24
			}
		}

		if(Relay[0] == 1)
 1ee:	80 91 81 00 	lds	r24, 0x0081
 1f2:	81 30       	cpi	r24, 0x01	; 1
 1f4:	61 f4       	brne	.+24     	; 0x20e <loop+0x5c>
		{
			if(PINC&0x01)
 1f6:	98 9b       	sbis	0x13, 0	; 19
 1f8:	0a c0       	rjmp	.+20     	; 0x20e <loop+0x5c>
 1fa:	8f ef       	ldi	r24, 0xFF	; 255
 1fc:	91 e1       	ldi	r25, 0x11	; 17
 1fe:	aa e7       	ldi	r26, 0x7A	; 122
 200:	81 50       	subi	r24, 0x01	; 1
 202:	90 40       	sbci	r25, 0x00	; 0
 204:	a0 40       	sbci	r26, 0x00	; 0
 206:	e1 f7       	brne	.-8      	; 0x200 <loop+0x4e>
 208:	00 c0       	rjmp	.+0      	; 0x20a <loop+0x58>
 20a:	00 00       	nop
			{
				_delay_ms(5000);
				tillend();
 20c:	c9 df       	rcall	.-110    	; 0x1a0 <tillend>
			}
		}
		if(Relay[1] == 1)
 20e:	80 91 82 00 	lds	r24, 0x0082
 212:	81 30       	cpi	r24, 0x01	; 1
 214:	09 f0       	breq	.+2      	; 0x218 <loop+0x66>
 216:	44 c0       	rjmp	.+136    	; 0x2a0 <loop+0xee>
		{
			if(PINB&0x04)
 218:	b2 9b       	sbis	0x16, 2	; 22
 21a:	42 c0       	rjmp	.+132    	; 0x2a0 <loop+0xee>
 21c:	8f ef       	ldi	r24, 0xFF	; 255
 21e:	91 e1       	ldi	r25, 0x11	; 17
 220:	aa e7       	ldi	r26, 0x7A	; 122
 222:	81 50       	subi	r24, 0x01	; 1
 224:	90 40       	sbci	r25, 0x00	; 0
 226:	a0 40       	sbci	r26, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <loop+0x70>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <loop+0x7a>
 22c:	00 00       	nop
			{
				_delay_ms(5000);
				tillend();
 22e:	b8 df       	rcall	.-144    	; 0x1a0 <tillend>
 230:	08 95       	ret
			}
		}
		
	}
	else if(Test == 1) // 테스트모드
 232:	80 91 7e 00 	lds	r24, 0x007E
 236:	81 30       	cpi	r24, 0x01	; 1
 238:	99 f5       	brne	.+102    	; 0x2a0 <loop+0xee>
	{
		
		if(((PINC&0x01) != 0x01) && ((PINB&0x04) != 0x04))
 23a:	98 99       	sbic	0x13, 0	; 19
 23c:	06 c0       	rjmp	.+12     	; 0x24a <loop+0x98>
 23e:	b2 99       	sbic	0x16, 2	; 22
 240:	04 c0       	rjmp	.+8      	; 0x24a <loop+0x98>
		{
			printf("c,c");
 242:	00 d0       	rcall	.+0      	; 0x244 <loop+0x92>
 244:	80 e6       	ldi	r24, 0x60	; 96
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	13 c0       	rjmp	.+38     	; 0x270 <loop+0xbe>
		
		}
		else if(((PINC&0x01) != 0x01) &&((PINB&0x04) == 0x04))
 24a:	98 99       	sbic	0x13, 0	; 19
 24c:	0a c0       	rjmp	.+20     	; 0x262 <loop+0xb0>
 24e:	b2 9b       	sbis	0x16, 2	; 22
 250:	08 c0       	rjmp	.+16     	; 0x262 <loop+0xb0>
		{
			printf("c,o");
 252:	00 d0       	rcall	.+0      	; 0x254 <loop+0xa2>
 254:	84 e6       	ldi	r24, 0x64	; 100
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	ed b7       	in	r30, 0x3d	; 61
 25a:	fe b7       	in	r31, 0x3e	; 62
 25c:	92 83       	std	Z+2, r25	; 0x02
 25e:	81 83       	std	Z+1, r24	; 0x01
 260:	0d c0       	rjmp	.+26     	; 0x27c <loop+0xca>
		
		}
		else if(((PINC&0x01) == 0x01) && ((PINB&0x04) != 0x04))
 262:	98 9b       	sbis	0x13, 0	; 19
 264:	0f c0       	rjmp	.+30     	; 0x284 <loop+0xd2>
 266:	b2 99       	sbic	0x16, 2	; 22
 268:	0d c0       	rjmp	.+26     	; 0x284 <loop+0xd2>
		{
			printf("o,c");
 26a:	00 d0       	rcall	.+0      	; 0x26c <loop+0xba>
 26c:	88 e6       	ldi	r24, 0x68	; 104
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	ad b7       	in	r26, 0x3d	; 61
 272:	be b7       	in	r27, 0x3e	; 62
 274:	12 96       	adiw	r26, 0x02	; 2
 276:	9c 93       	st	X, r25
 278:	8e 93       	st	-X, r24
 27a:	11 97       	sbiw	r26, 0x01	; 1
 27c:	1e d0       	rcall	.+60     	; 0x2ba <printf>
 27e:	0f 90       	pop	r0
 280:	0f 90       	pop	r0
 282:	08 95       	ret
		
		}
		else if(((PINC&0x01) == 0x01) && ((PINB&0x04) == 0x04))
 284:	98 9b       	sbis	0x13, 0	; 19
 286:	0c c0       	rjmp	.+24     	; 0x2a0 <loop+0xee>
 288:	b2 9b       	sbis	0x16, 2	; 22
 28a:	0a c0       	rjmp	.+20     	; 0x2a0 <loop+0xee>
		{
			printf("o,o");
 28c:	00 d0       	rcall	.+0      	; 0x28e <loop+0xdc>
 28e:	8c e6       	ldi	r24, 0x6C	; 108
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	ed b7       	in	r30, 0x3d	; 61
 294:	fe b7       	in	r31, 0x3e	; 62
 296:	92 83       	std	Z+2, r25	; 0x02
 298:	81 83       	std	Z+1, r24	; 0x01
 29a:	0f d0       	rcall	.+30     	; 0x2ba <printf>
 29c:	0f 90       	pop	r0
 29e:	0f 90       	pop	r0
 2a0:	08 95       	ret

000002a2 <main>:
}

int main(void)
{
	
    setup();
 2a2:	ed de       	rcall	.-550    	; 0x7e <setup>
	
    while (1) 
    {
		loop();
 2a4:	86 df       	rcall	.-244    	; 0x1b2 <loop>
 2a6:	8f ef       	ldi	r24, 0xFF	; 255
 2a8:	99 e6       	ldi	r25, 0x69	; 105
 2aa:	a8 e1       	ldi	r26, 0x18	; 24
 2ac:	81 50       	subi	r24, 0x01	; 1
 2ae:	90 40       	sbci	r25, 0x00	; 0
 2b0:	a0 40       	sbci	r26, 0x00	; 0
 2b2:	e1 f7       	brne	.-8      	; 0x2ac <main+0xa>
 2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <main+0x14>
 2b6:	00 00       	nop
 2b8:	f5 cf       	rjmp	.-22     	; 0x2a4 <main+0x2>

000002ba <printf>:
 2ba:	a0 e0       	ldi	r26, 0x00	; 0
 2bc:	b0 e0       	ldi	r27, 0x00	; 0
 2be:	e2 e6       	ldi	r30, 0x62	; 98
 2c0:	f1 e0       	ldi	r31, 0x01	; 1
 2c2:	9b c2       	rjmp	.+1334   	; 0x7fa <__prologue_saves__+0x20>
 2c4:	fe 01       	movw	r30, r28
 2c6:	35 96       	adiw	r30, 0x05	; 5
 2c8:	61 91       	ld	r22, Z+
 2ca:	71 91       	ld	r23, Z+
 2cc:	80 91 85 00 	lds	r24, 0x0085
 2d0:	90 91 86 00 	lds	r25, 0x0086
 2d4:	af 01       	movw	r20, r30
 2d6:	09 d0       	rcall	.+18     	; 0x2ea <vfprintf>
 2d8:	20 96       	adiw	r28, 0x00	; 0
 2da:	e2 e0       	ldi	r30, 0x02	; 2
 2dc:	aa c2       	rjmp	.+1364   	; 0x832 <__epilogue_restores__+0x20>

000002de <putchar>:
 2de:	60 91 85 00 	lds	r22, 0x0085
 2e2:	70 91 86 00 	lds	r23, 0x0086
 2e6:	ef d1       	rcall	.+990    	; 0x6c6 <fputc>
 2e8:	08 95       	ret

000002ea <vfprintf>:
 2ea:	ac e0       	ldi	r26, 0x0C	; 12
 2ec:	b0 e0       	ldi	r27, 0x00	; 0
 2ee:	ea e7       	ldi	r30, 0x7A	; 122
 2f0:	f1 e0       	ldi	r31, 0x01	; 1
 2f2:	73 c2       	rjmp	.+1254   	; 0x7da <__prologue_saves__>
 2f4:	6c 01       	movw	r12, r24
 2f6:	1b 01       	movw	r2, r22
 2f8:	8a 01       	movw	r16, r20
 2fa:	fc 01       	movw	r30, r24
 2fc:	17 82       	std	Z+7, r1	; 0x07
 2fe:	16 82       	std	Z+6, r1	; 0x06
 300:	83 81       	ldd	r24, Z+3	; 0x03
 302:	81 ff       	sbrs	r24, 1
 304:	c4 c1       	rjmp	.+904    	; 0x68e <__stack+0x22f>
 306:	2e 01       	movw	r4, r28
 308:	08 94       	sec
 30a:	41 1c       	adc	r4, r1
 30c:	51 1c       	adc	r5, r1
 30e:	f6 01       	movw	r30, r12
 310:	93 81       	ldd	r25, Z+3	; 0x03
 312:	f1 01       	movw	r30, r2
 314:	93 fd       	sbrc	r25, 3
 316:	85 91       	lpm	r24, Z+
 318:	93 ff       	sbrs	r25, 3
 31a:	81 91       	ld	r24, Z+
 31c:	1f 01       	movw	r2, r30
 31e:	88 23       	and	r24, r24
 320:	09 f4       	brne	.+2      	; 0x324 <vfprintf+0x3a>
 322:	b1 c1       	rjmp	.+866    	; 0x686 <__stack+0x227>
 324:	85 32       	cpi	r24, 0x25	; 37
 326:	39 f4       	brne	.+14     	; 0x336 <vfprintf+0x4c>
 328:	93 fd       	sbrc	r25, 3
 32a:	85 91       	lpm	r24, Z+
 32c:	93 ff       	sbrs	r25, 3
 32e:	81 91       	ld	r24, Z+
 330:	1f 01       	movw	r2, r30
 332:	85 32       	cpi	r24, 0x25	; 37
 334:	21 f4       	brne	.+8      	; 0x33e <vfprintf+0x54>
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	b6 01       	movw	r22, r12
 33a:	c5 d1       	rcall	.+906    	; 0x6c6 <fputc>
 33c:	e8 cf       	rjmp	.-48     	; 0x30e <vfprintf+0x24>
 33e:	ee 24       	eor	r14, r14
 340:	ff 24       	eor	r15, r15
 342:	20 e0       	ldi	r18, 0x00	; 0
 344:	20 32       	cpi	r18, 0x20	; 32
 346:	b0 f4       	brcc	.+44     	; 0x374 <vfprintf+0x8a>
 348:	8b 32       	cpi	r24, 0x2B	; 43
 34a:	69 f0       	breq	.+26     	; 0x366 <vfprintf+0x7c>
 34c:	8c 32       	cpi	r24, 0x2C	; 44
 34e:	28 f4       	brcc	.+10     	; 0x35a <vfprintf+0x70>
 350:	80 32       	cpi	r24, 0x20	; 32
 352:	51 f0       	breq	.+20     	; 0x368 <vfprintf+0x7e>
 354:	83 32       	cpi	r24, 0x23	; 35
 356:	71 f4       	brne	.+28     	; 0x374 <vfprintf+0x8a>
 358:	0b c0       	rjmp	.+22     	; 0x370 <vfprintf+0x86>
 35a:	8d 32       	cpi	r24, 0x2D	; 45
 35c:	39 f0       	breq	.+14     	; 0x36c <vfprintf+0x82>
 35e:	80 33       	cpi	r24, 0x30	; 48
 360:	49 f4       	brne	.+18     	; 0x374 <vfprintf+0x8a>
 362:	21 60       	ori	r18, 0x01	; 1
 364:	2c c0       	rjmp	.+88     	; 0x3be <vfprintf+0xd4>
 366:	22 60       	ori	r18, 0x02	; 2
 368:	24 60       	ori	r18, 0x04	; 4
 36a:	29 c0       	rjmp	.+82     	; 0x3be <vfprintf+0xd4>
 36c:	28 60       	ori	r18, 0x08	; 8
 36e:	27 c0       	rjmp	.+78     	; 0x3be <vfprintf+0xd4>
 370:	20 61       	ori	r18, 0x10	; 16
 372:	25 c0       	rjmp	.+74     	; 0x3be <vfprintf+0xd4>
 374:	27 fd       	sbrc	r18, 7
 376:	2c c0       	rjmp	.+88     	; 0x3d0 <vfprintf+0xe6>
 378:	38 2f       	mov	r19, r24
 37a:	30 53       	subi	r19, 0x30	; 48
 37c:	3a 30       	cpi	r19, 0x0A	; 10
 37e:	98 f4       	brcc	.+38     	; 0x3a6 <vfprintf+0xbc>
 380:	26 ff       	sbrs	r18, 6
 382:	08 c0       	rjmp	.+16     	; 0x394 <vfprintf+0xaa>
 384:	8e 2d       	mov	r24, r14
 386:	88 0f       	add	r24, r24
 388:	e8 2e       	mov	r14, r24
 38a:	ee 0c       	add	r14, r14
 38c:	ee 0c       	add	r14, r14
 38e:	e8 0e       	add	r14, r24
 390:	e3 0e       	add	r14, r19
 392:	15 c0       	rjmp	.+42     	; 0x3be <vfprintf+0xd4>
 394:	8f 2d       	mov	r24, r15
 396:	88 0f       	add	r24, r24
 398:	f8 2e       	mov	r15, r24
 39a:	ff 0c       	add	r15, r15
 39c:	ff 0c       	add	r15, r15
 39e:	f8 0e       	add	r15, r24
 3a0:	f3 0e       	add	r15, r19
 3a2:	20 62       	ori	r18, 0x20	; 32
 3a4:	0c c0       	rjmp	.+24     	; 0x3be <vfprintf+0xd4>
 3a6:	8e 32       	cpi	r24, 0x2E	; 46
 3a8:	21 f4       	brne	.+8      	; 0x3b2 <vfprintf+0xc8>
 3aa:	26 fd       	sbrc	r18, 6
 3ac:	6c c1       	rjmp	.+728    	; 0x686 <__stack+0x227>
 3ae:	20 64       	ori	r18, 0x40	; 64
 3b0:	06 c0       	rjmp	.+12     	; 0x3be <vfprintf+0xd4>
 3b2:	8c 36       	cpi	r24, 0x6C	; 108
 3b4:	11 f4       	brne	.+4      	; 0x3ba <vfprintf+0xd0>
 3b6:	20 68       	ori	r18, 0x80	; 128
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <vfprintf+0xd4>
 3ba:	88 36       	cpi	r24, 0x68	; 104
 3bc:	49 f4       	brne	.+18     	; 0x3d0 <vfprintf+0xe6>
 3be:	f1 01       	movw	r30, r2
 3c0:	93 fd       	sbrc	r25, 3
 3c2:	85 91       	lpm	r24, Z+
 3c4:	93 ff       	sbrs	r25, 3
 3c6:	81 91       	ld	r24, Z+
 3c8:	1f 01       	movw	r2, r30
 3ca:	88 23       	and	r24, r24
 3cc:	09 f0       	breq	.+2      	; 0x3d0 <vfprintf+0xe6>
 3ce:	ba cf       	rjmp	.-140    	; 0x344 <vfprintf+0x5a>
 3d0:	98 2f       	mov	r25, r24
 3d2:	95 54       	subi	r25, 0x45	; 69
 3d4:	93 30       	cpi	r25, 0x03	; 3
 3d6:	18 f0       	brcs	.+6      	; 0x3de <vfprintf+0xf4>
 3d8:	90 52       	subi	r25, 0x20	; 32
 3da:	93 30       	cpi	r25, 0x03	; 3
 3dc:	28 f4       	brcc	.+10     	; 0x3e8 <vfprintf+0xfe>
 3de:	0c 5f       	subi	r16, 0xFC	; 252
 3e0:	1f 4f       	sbci	r17, 0xFF	; 255
 3e2:	ff e3       	ldi	r31, 0x3F	; 63
 3e4:	f9 83       	std	Y+1, r31	; 0x01
 3e6:	0d c0       	rjmp	.+26     	; 0x402 <vfprintf+0x118>
 3e8:	83 36       	cpi	r24, 0x63	; 99
 3ea:	31 f0       	breq	.+12     	; 0x3f8 <vfprintf+0x10e>
 3ec:	83 37       	cpi	r24, 0x73	; 115
 3ee:	71 f0       	breq	.+28     	; 0x40c <vfprintf+0x122>
 3f0:	83 35       	cpi	r24, 0x53	; 83
 3f2:	09 f0       	breq	.+2      	; 0x3f6 <vfprintf+0x10c>
 3f4:	5c c0       	rjmp	.+184    	; 0x4ae <__stack+0x4f>
 3f6:	21 c0       	rjmp	.+66     	; 0x43a <vfprintf+0x150>
 3f8:	f8 01       	movw	r30, r16
 3fa:	80 81       	ld	r24, Z
 3fc:	89 83       	std	Y+1, r24	; 0x01
 3fe:	0e 5f       	subi	r16, 0xFE	; 254
 400:	1f 4f       	sbci	r17, 0xFF	; 255
 402:	42 01       	movw	r8, r4
 404:	71 e0       	ldi	r23, 0x01	; 1
 406:	a7 2e       	mov	r10, r23
 408:	b1 2c       	mov	r11, r1
 40a:	15 c0       	rjmp	.+42     	; 0x436 <vfprintf+0x14c>
 40c:	62 e0       	ldi	r22, 0x02	; 2
 40e:	66 2e       	mov	r6, r22
 410:	71 2c       	mov	r7, r1
 412:	60 0e       	add	r6, r16
 414:	71 1e       	adc	r7, r17
 416:	f8 01       	movw	r30, r16
 418:	80 80       	ld	r8, Z
 41a:	91 80       	ldd	r9, Z+1	; 0x01
 41c:	26 ff       	sbrs	r18, 6
 41e:	03 c0       	rjmp	.+6      	; 0x426 <vfprintf+0x13c>
 420:	6e 2d       	mov	r22, r14
 422:	70 e0       	ldi	r23, 0x00	; 0
 424:	02 c0       	rjmp	.+4      	; 0x42a <vfprintf+0x140>
 426:	6f ef       	ldi	r22, 0xFF	; 255
 428:	7f ef       	ldi	r23, 0xFF	; 255
 42a:	c4 01       	movw	r24, r8
 42c:	2c 87       	std	Y+12, r18	; 0x0c
 42e:	40 d1       	rcall	.+640    	; 0x6b0 <strnlen>
 430:	5c 01       	movw	r10, r24
 432:	83 01       	movw	r16, r6
 434:	2c 85       	ldd	r18, Y+12	; 0x0c
 436:	2f 77       	andi	r18, 0x7F	; 127
 438:	16 c0       	rjmp	.+44     	; 0x466 <__stack+0x7>
 43a:	52 e0       	ldi	r21, 0x02	; 2
 43c:	65 2e       	mov	r6, r21
 43e:	71 2c       	mov	r7, r1
 440:	60 0e       	add	r6, r16
 442:	71 1e       	adc	r7, r17
 444:	f8 01       	movw	r30, r16
 446:	80 80       	ld	r8, Z
 448:	91 80       	ldd	r9, Z+1	; 0x01
 44a:	26 ff       	sbrs	r18, 6
 44c:	03 c0       	rjmp	.+6      	; 0x454 <vfprintf+0x16a>
 44e:	6e 2d       	mov	r22, r14
 450:	70 e0       	ldi	r23, 0x00	; 0
 452:	02 c0       	rjmp	.+4      	; 0x458 <vfprintf+0x16e>
 454:	6f ef       	ldi	r22, 0xFF	; 255
 456:	7f ef       	ldi	r23, 0xFF	; 255
 458:	c4 01       	movw	r24, r8
 45a:	2c 87       	std	Y+12, r18	; 0x0c
 45c:	1e d1       	rcall	.+572    	; 0x69a <strnlen_P>
 45e:	5c 01       	movw	r10, r24
 460:	2c 85       	ldd	r18, Y+12	; 0x0c
 462:	20 68       	ori	r18, 0x80	; 128
 464:	83 01       	movw	r16, r6
 466:	23 fd       	sbrc	r18, 3
 468:	1e c0       	rjmp	.+60     	; 0x4a6 <__stack+0x47>
 46a:	07 c0       	rjmp	.+14     	; 0x47a <__stack+0x1b>
 46c:	80 e2       	ldi	r24, 0x20	; 32
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	b6 01       	movw	r22, r12
 472:	2c 87       	std	Y+12, r18	; 0x0c
 474:	28 d1       	rcall	.+592    	; 0x6c6 <fputc>
 476:	fa 94       	dec	r15
 478:	2c 85       	ldd	r18, Y+12	; 0x0c
 47a:	8f 2d       	mov	r24, r15
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	a8 16       	cp	r10, r24
 480:	b9 06       	cpc	r11, r25
 482:	a0 f3       	brcs	.-24     	; 0x46c <__stack+0xd>
 484:	10 c0       	rjmp	.+32     	; 0x4a6 <__stack+0x47>
 486:	f4 01       	movw	r30, r8
 488:	27 fd       	sbrc	r18, 7
 48a:	85 91       	lpm	r24, Z+
 48c:	27 ff       	sbrs	r18, 7
 48e:	81 91       	ld	r24, Z+
 490:	4f 01       	movw	r8, r30
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	b6 01       	movw	r22, r12
 496:	2c 87       	std	Y+12, r18	; 0x0c
 498:	16 d1       	rcall	.+556    	; 0x6c6 <fputc>
 49a:	2c 85       	ldd	r18, Y+12	; 0x0c
 49c:	f1 10       	cpse	r15, r1
 49e:	fa 94       	dec	r15
 4a0:	08 94       	sec
 4a2:	a1 08       	sbc	r10, r1
 4a4:	b1 08       	sbc	r11, r1
 4a6:	a1 14       	cp	r10, r1
 4a8:	b1 04       	cpc	r11, r1
 4aa:	69 f7       	brne	.-38     	; 0x486 <__stack+0x27>
 4ac:	e9 c0       	rjmp	.+466    	; 0x680 <__stack+0x221>
 4ae:	84 36       	cpi	r24, 0x64	; 100
 4b0:	11 f0       	breq	.+4      	; 0x4b6 <__stack+0x57>
 4b2:	89 36       	cpi	r24, 0x69	; 105
 4b4:	41 f5       	brne	.+80     	; 0x506 <__stack+0xa7>
 4b6:	27 ff       	sbrs	r18, 7
 4b8:	08 c0       	rjmp	.+16     	; 0x4ca <__stack+0x6b>
 4ba:	f8 01       	movw	r30, r16
 4bc:	60 81       	ld	r22, Z
 4be:	71 81       	ldd	r23, Z+1	; 0x01
 4c0:	82 81       	ldd	r24, Z+2	; 0x02
 4c2:	93 81       	ldd	r25, Z+3	; 0x03
 4c4:	0c 5f       	subi	r16, 0xFC	; 252
 4c6:	1f 4f       	sbci	r17, 0xFF	; 255
 4c8:	09 c0       	rjmp	.+18     	; 0x4dc <__stack+0x7d>
 4ca:	f8 01       	movw	r30, r16
 4cc:	60 81       	ld	r22, Z
 4ce:	71 81       	ldd	r23, Z+1	; 0x01
 4d0:	88 27       	eor	r24, r24
 4d2:	77 fd       	sbrc	r23, 7
 4d4:	80 95       	com	r24
 4d6:	98 2f       	mov	r25, r24
 4d8:	0e 5f       	subi	r16, 0xFE	; 254
 4da:	1f 4f       	sbci	r17, 0xFF	; 255
 4dc:	4f e6       	ldi	r20, 0x6F	; 111
 4de:	b4 2e       	mov	r11, r20
 4e0:	b2 22       	and	r11, r18
 4e2:	97 ff       	sbrs	r25, 7
 4e4:	09 c0       	rjmp	.+18     	; 0x4f8 <__stack+0x99>
 4e6:	90 95       	com	r25
 4e8:	80 95       	com	r24
 4ea:	70 95       	com	r23
 4ec:	61 95       	neg	r22
 4ee:	7f 4f       	sbci	r23, 0xFF	; 255
 4f0:	8f 4f       	sbci	r24, 0xFF	; 255
 4f2:	9f 4f       	sbci	r25, 0xFF	; 255
 4f4:	f0 e8       	ldi	r31, 0x80	; 128
 4f6:	bf 2a       	or	r11, r31
 4f8:	a2 01       	movw	r20, r4
 4fa:	2a e0       	ldi	r18, 0x0A	; 10
 4fc:	30 e0       	ldi	r19, 0x00	; 0
 4fe:	0f d1       	rcall	.+542    	; 0x71e <__ultoa_invert>
 500:	78 2e       	mov	r7, r24
 502:	74 18       	sub	r7, r4
 504:	44 c0       	rjmp	.+136    	; 0x58e <__stack+0x12f>
 506:	85 37       	cpi	r24, 0x75	; 117
 508:	31 f4       	brne	.+12     	; 0x516 <__stack+0xb7>
 50a:	3f ee       	ldi	r19, 0xEF	; 239
 50c:	b3 2e       	mov	r11, r19
 50e:	b2 22       	and	r11, r18
 510:	2a e0       	ldi	r18, 0x0A	; 10
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	25 c0       	rjmp	.+74     	; 0x560 <__stack+0x101>
 516:	99 ef       	ldi	r25, 0xF9	; 249
 518:	b9 2e       	mov	r11, r25
 51a:	b2 22       	and	r11, r18
 51c:	8f 36       	cpi	r24, 0x6F	; 111
 51e:	c1 f0       	breq	.+48     	; 0x550 <__stack+0xf1>
 520:	80 37       	cpi	r24, 0x70	; 112
 522:	20 f4       	brcc	.+8      	; 0x52c <__stack+0xcd>
 524:	88 35       	cpi	r24, 0x58	; 88
 526:	09 f0       	breq	.+2      	; 0x52a <__stack+0xcb>
 528:	ae c0       	rjmp	.+348    	; 0x686 <__stack+0x227>
 52a:	0d c0       	rjmp	.+26     	; 0x546 <__stack+0xe7>
 52c:	80 37       	cpi	r24, 0x70	; 112
 52e:	21 f0       	breq	.+8      	; 0x538 <__stack+0xd9>
 530:	88 37       	cpi	r24, 0x78	; 120
 532:	09 f0       	breq	.+2      	; 0x536 <__stack+0xd7>
 534:	a8 c0       	rjmp	.+336    	; 0x686 <__stack+0x227>
 536:	02 c0       	rjmp	.+4      	; 0x53c <__stack+0xdd>
 538:	20 e1       	ldi	r18, 0x10	; 16
 53a:	b2 2a       	or	r11, r18
 53c:	b4 fe       	sbrs	r11, 4
 53e:	0b c0       	rjmp	.+22     	; 0x556 <__stack+0xf7>
 540:	84 e0       	ldi	r24, 0x04	; 4
 542:	b8 2a       	or	r11, r24
 544:	08 c0       	rjmp	.+16     	; 0x556 <__stack+0xf7>
 546:	b4 fe       	sbrs	r11, 4
 548:	09 c0       	rjmp	.+18     	; 0x55c <__stack+0xfd>
 54a:	e6 e0       	ldi	r30, 0x06	; 6
 54c:	be 2a       	or	r11, r30
 54e:	06 c0       	rjmp	.+12     	; 0x55c <__stack+0xfd>
 550:	28 e0       	ldi	r18, 0x08	; 8
 552:	30 e0       	ldi	r19, 0x00	; 0
 554:	05 c0       	rjmp	.+10     	; 0x560 <__stack+0x101>
 556:	20 e1       	ldi	r18, 0x10	; 16
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	02 c0       	rjmp	.+4      	; 0x560 <__stack+0x101>
 55c:	20 e1       	ldi	r18, 0x10	; 16
 55e:	32 e0       	ldi	r19, 0x02	; 2
 560:	b7 fe       	sbrs	r11, 7
 562:	08 c0       	rjmp	.+16     	; 0x574 <__stack+0x115>
 564:	f8 01       	movw	r30, r16
 566:	60 81       	ld	r22, Z
 568:	71 81       	ldd	r23, Z+1	; 0x01
 56a:	82 81       	ldd	r24, Z+2	; 0x02
 56c:	93 81       	ldd	r25, Z+3	; 0x03
 56e:	0c 5f       	subi	r16, 0xFC	; 252
 570:	1f 4f       	sbci	r17, 0xFF	; 255
 572:	07 c0       	rjmp	.+14     	; 0x582 <__stack+0x123>
 574:	f8 01       	movw	r30, r16
 576:	60 81       	ld	r22, Z
 578:	71 81       	ldd	r23, Z+1	; 0x01
 57a:	80 e0       	ldi	r24, 0x00	; 0
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	0e 5f       	subi	r16, 0xFE	; 254
 580:	1f 4f       	sbci	r17, 0xFF	; 255
 582:	a2 01       	movw	r20, r4
 584:	cc d0       	rcall	.+408    	; 0x71e <__ultoa_invert>
 586:	78 2e       	mov	r7, r24
 588:	74 18       	sub	r7, r4
 58a:	ff e7       	ldi	r31, 0x7F	; 127
 58c:	bf 22       	and	r11, r31
 58e:	b6 fe       	sbrs	r11, 6
 590:	0b c0       	rjmp	.+22     	; 0x5a8 <__stack+0x149>
 592:	2e ef       	ldi	r18, 0xFE	; 254
 594:	b2 22       	and	r11, r18
 596:	7e 14       	cp	r7, r14
 598:	38 f4       	brcc	.+14     	; 0x5a8 <__stack+0x149>
 59a:	b4 fe       	sbrs	r11, 4
 59c:	07 c0       	rjmp	.+14     	; 0x5ac <__stack+0x14d>
 59e:	b2 fc       	sbrc	r11, 2
 5a0:	05 c0       	rjmp	.+10     	; 0x5ac <__stack+0x14d>
 5a2:	8f ee       	ldi	r24, 0xEF	; 239
 5a4:	b8 22       	and	r11, r24
 5a6:	02 c0       	rjmp	.+4      	; 0x5ac <__stack+0x14d>
 5a8:	a7 2c       	mov	r10, r7
 5aa:	01 c0       	rjmp	.+2      	; 0x5ae <__stack+0x14f>
 5ac:	ae 2c       	mov	r10, r14
 5ae:	8b 2d       	mov	r24, r11
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	b4 fe       	sbrs	r11, 4
 5b4:	0d c0       	rjmp	.+26     	; 0x5d0 <__stack+0x171>
 5b6:	fe 01       	movw	r30, r28
 5b8:	e7 0d       	add	r30, r7
 5ba:	f1 1d       	adc	r31, r1
 5bc:	20 81       	ld	r18, Z
 5be:	20 33       	cpi	r18, 0x30	; 48
 5c0:	19 f4       	brne	.+6      	; 0x5c8 <__stack+0x169>
 5c2:	e9 ee       	ldi	r30, 0xE9	; 233
 5c4:	be 22       	and	r11, r30
 5c6:	09 c0       	rjmp	.+18     	; 0x5da <__stack+0x17b>
 5c8:	a3 94       	inc	r10
 5ca:	b2 fe       	sbrs	r11, 2
 5cc:	06 c0       	rjmp	.+12     	; 0x5da <__stack+0x17b>
 5ce:	04 c0       	rjmp	.+8      	; 0x5d8 <__stack+0x179>
 5d0:	86 78       	andi	r24, 0x86	; 134
 5d2:	90 70       	andi	r25, 0x00	; 0
 5d4:	00 97       	sbiw	r24, 0x00	; 0
 5d6:	09 f0       	breq	.+2      	; 0x5da <__stack+0x17b>
 5d8:	a3 94       	inc	r10
 5da:	8b 2c       	mov	r8, r11
 5dc:	99 24       	eor	r9, r9
 5de:	b3 fc       	sbrc	r11, 3
 5e0:	13 c0       	rjmp	.+38     	; 0x608 <__stack+0x1a9>
 5e2:	b0 fe       	sbrs	r11, 0
 5e4:	0e c0       	rjmp	.+28     	; 0x602 <__stack+0x1a3>
 5e6:	af 14       	cp	r10, r15
 5e8:	28 f4       	brcc	.+10     	; 0x5f4 <__stack+0x195>
 5ea:	e7 2c       	mov	r14, r7
 5ec:	ef 0c       	add	r14, r15
 5ee:	ea 18       	sub	r14, r10
 5f0:	af 2c       	mov	r10, r15
 5f2:	07 c0       	rjmp	.+14     	; 0x602 <__stack+0x1a3>
 5f4:	e7 2c       	mov	r14, r7
 5f6:	05 c0       	rjmp	.+10     	; 0x602 <__stack+0x1a3>
 5f8:	80 e2       	ldi	r24, 0x20	; 32
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	b6 01       	movw	r22, r12
 5fe:	63 d0       	rcall	.+198    	; 0x6c6 <fputc>
 600:	a3 94       	inc	r10
 602:	af 14       	cp	r10, r15
 604:	c8 f3       	brcs	.-14     	; 0x5f8 <__stack+0x199>
 606:	04 c0       	rjmp	.+8      	; 0x610 <__stack+0x1b1>
 608:	af 14       	cp	r10, r15
 60a:	10 f4       	brcc	.+4      	; 0x610 <__stack+0x1b1>
 60c:	fa 18       	sub	r15, r10
 60e:	01 c0       	rjmp	.+2      	; 0x612 <__stack+0x1b3>
 610:	ff 24       	eor	r15, r15
 612:	84 fe       	sbrs	r8, 4
 614:	0e c0       	rjmp	.+28     	; 0x632 <__stack+0x1d3>
 616:	80 e3       	ldi	r24, 0x30	; 48
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	b6 01       	movw	r22, r12
 61c:	54 d0       	rcall	.+168    	; 0x6c6 <fputc>
 61e:	82 fe       	sbrs	r8, 2
 620:	1d c0       	rjmp	.+58     	; 0x65c <__stack+0x1fd>
 622:	81 fe       	sbrs	r8, 1
 624:	03 c0       	rjmp	.+6      	; 0x62c <__stack+0x1cd>
 626:	88 e5       	ldi	r24, 0x58	; 88
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	10 c0       	rjmp	.+32     	; 0x64c <__stack+0x1ed>
 62c:	88 e7       	ldi	r24, 0x78	; 120
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0d c0       	rjmp	.+26     	; 0x64c <__stack+0x1ed>
 632:	c4 01       	movw	r24, r8
 634:	86 78       	andi	r24, 0x86	; 134
 636:	90 70       	andi	r25, 0x00	; 0
 638:	00 97       	sbiw	r24, 0x00	; 0
 63a:	81 f0       	breq	.+32     	; 0x65c <__stack+0x1fd>
 63c:	81 fc       	sbrc	r8, 1
 63e:	02 c0       	rjmp	.+4      	; 0x644 <__stack+0x1e5>
 640:	80 e2       	ldi	r24, 0x20	; 32
 642:	01 c0       	rjmp	.+2      	; 0x646 <__stack+0x1e7>
 644:	8b e2       	ldi	r24, 0x2B	; 43
 646:	b7 fc       	sbrc	r11, 7
 648:	8d e2       	ldi	r24, 0x2D	; 45
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	b6 01       	movw	r22, r12
 64e:	3b d0       	rcall	.+118    	; 0x6c6 <fputc>
 650:	05 c0       	rjmp	.+10     	; 0x65c <__stack+0x1fd>
 652:	80 e3       	ldi	r24, 0x30	; 48
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	b6 01       	movw	r22, r12
 658:	36 d0       	rcall	.+108    	; 0x6c6 <fputc>
 65a:	ea 94       	dec	r14
 65c:	7e 14       	cp	r7, r14
 65e:	c8 f3       	brcs	.-14     	; 0x652 <__stack+0x1f3>
 660:	7a 94       	dec	r7
 662:	f2 01       	movw	r30, r4
 664:	e7 0d       	add	r30, r7
 666:	f1 1d       	adc	r31, r1
 668:	80 81       	ld	r24, Z
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	b6 01       	movw	r22, r12
 66e:	2b d0       	rcall	.+86     	; 0x6c6 <fputc>
 670:	77 20       	and	r7, r7
 672:	b1 f7       	brne	.-20     	; 0x660 <__stack+0x201>
 674:	05 c0       	rjmp	.+10     	; 0x680 <__stack+0x221>
 676:	80 e2       	ldi	r24, 0x20	; 32
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	b6 01       	movw	r22, r12
 67c:	24 d0       	rcall	.+72     	; 0x6c6 <fputc>
 67e:	fa 94       	dec	r15
 680:	ff 20       	and	r15, r15
 682:	c9 f7       	brne	.-14     	; 0x676 <__stack+0x217>
 684:	44 ce       	rjmp	.-888    	; 0x30e <vfprintf+0x24>
 686:	f6 01       	movw	r30, r12
 688:	26 81       	ldd	r18, Z+6	; 0x06
 68a:	37 81       	ldd	r19, Z+7	; 0x07
 68c:	02 c0       	rjmp	.+4      	; 0x692 <__stack+0x233>
 68e:	2f ef       	ldi	r18, 0xFF	; 255
 690:	3f ef       	ldi	r19, 0xFF	; 255
 692:	c9 01       	movw	r24, r18
 694:	2c 96       	adiw	r28, 0x0c	; 12
 696:	e2 e1       	ldi	r30, 0x12	; 18
 698:	bc c0       	rjmp	.+376    	; 0x812 <__epilogue_restores__>

0000069a <strnlen_P>:
 69a:	fc 01       	movw	r30, r24
 69c:	05 90       	lpm	r0, Z+
 69e:	61 50       	subi	r22, 0x01	; 1
 6a0:	70 40       	sbci	r23, 0x00	; 0
 6a2:	01 10       	cpse	r0, r1
 6a4:	d8 f7       	brcc	.-10     	; 0x69c <strnlen_P+0x2>
 6a6:	80 95       	com	r24
 6a8:	90 95       	com	r25
 6aa:	8e 0f       	add	r24, r30
 6ac:	9f 1f       	adc	r25, r31
 6ae:	08 95       	ret

000006b0 <strnlen>:
 6b0:	fc 01       	movw	r30, r24
 6b2:	61 50       	subi	r22, 0x01	; 1
 6b4:	70 40       	sbci	r23, 0x00	; 0
 6b6:	01 90       	ld	r0, Z+
 6b8:	01 10       	cpse	r0, r1
 6ba:	d8 f7       	brcc	.-10     	; 0x6b2 <strnlen+0x2>
 6bc:	80 95       	com	r24
 6be:	90 95       	com	r25
 6c0:	8e 0f       	add	r24, r30
 6c2:	9f 1f       	adc	r25, r31
 6c4:	08 95       	ret

000006c6 <fputc>:
 6c6:	0f 93       	push	r16
 6c8:	1f 93       	push	r17
 6ca:	cf 93       	push	r28
 6cc:	df 93       	push	r29
 6ce:	8c 01       	movw	r16, r24
 6d0:	eb 01       	movw	r28, r22
 6d2:	8b 81       	ldd	r24, Y+3	; 0x03
 6d4:	81 ff       	sbrs	r24, 1
 6d6:	1b c0       	rjmp	.+54     	; 0x70e <fputc+0x48>
 6d8:	82 ff       	sbrs	r24, 2
 6da:	0d c0       	rjmp	.+26     	; 0x6f6 <fputc+0x30>
 6dc:	2e 81       	ldd	r18, Y+6	; 0x06
 6de:	3f 81       	ldd	r19, Y+7	; 0x07
 6e0:	8c 81       	ldd	r24, Y+4	; 0x04
 6e2:	9d 81       	ldd	r25, Y+5	; 0x05
 6e4:	28 17       	cp	r18, r24
 6e6:	39 07       	cpc	r19, r25
 6e8:	64 f4       	brge	.+24     	; 0x702 <fputc+0x3c>
 6ea:	e8 81       	ld	r30, Y
 6ec:	f9 81       	ldd	r31, Y+1	; 0x01
 6ee:	01 93       	st	Z+, r16
 6f0:	f9 83       	std	Y+1, r31	; 0x01
 6f2:	e8 83       	st	Y, r30
 6f4:	06 c0       	rjmp	.+12     	; 0x702 <fputc+0x3c>
 6f6:	e8 85       	ldd	r30, Y+8	; 0x08
 6f8:	f9 85       	ldd	r31, Y+9	; 0x09
 6fa:	80 2f       	mov	r24, r16
 6fc:	09 95       	icall
 6fe:	00 97       	sbiw	r24, 0x00	; 0
 700:	31 f4       	brne	.+12     	; 0x70e <fputc+0x48>
 702:	8e 81       	ldd	r24, Y+6	; 0x06
 704:	9f 81       	ldd	r25, Y+7	; 0x07
 706:	01 96       	adiw	r24, 0x01	; 1
 708:	9f 83       	std	Y+7, r25	; 0x07
 70a:	8e 83       	std	Y+6, r24	; 0x06
 70c:	02 c0       	rjmp	.+4      	; 0x712 <fputc+0x4c>
 70e:	0f ef       	ldi	r16, 0xFF	; 255
 710:	1f ef       	ldi	r17, 0xFF	; 255
 712:	c8 01       	movw	r24, r16
 714:	df 91       	pop	r29
 716:	cf 91       	pop	r28
 718:	1f 91       	pop	r17
 71a:	0f 91       	pop	r16
 71c:	08 95       	ret

0000071e <__ultoa_invert>:
 71e:	fa 01       	movw	r30, r20
 720:	aa 27       	eor	r26, r26
 722:	28 30       	cpi	r18, 0x08	; 8
 724:	51 f1       	breq	.+84     	; 0x77a <__ultoa_invert+0x5c>
 726:	20 31       	cpi	r18, 0x10	; 16
 728:	81 f1       	breq	.+96     	; 0x78a <__ultoa_invert+0x6c>
 72a:	e8 94       	clt
 72c:	6f 93       	push	r22
 72e:	6e 7f       	andi	r22, 0xFE	; 254
 730:	6e 5f       	subi	r22, 0xFE	; 254
 732:	7f 4f       	sbci	r23, 0xFF	; 255
 734:	8f 4f       	sbci	r24, 0xFF	; 255
 736:	9f 4f       	sbci	r25, 0xFF	; 255
 738:	af 4f       	sbci	r26, 0xFF	; 255
 73a:	b1 e0       	ldi	r27, 0x01	; 1
 73c:	3e d0       	rcall	.+124    	; 0x7ba <__ultoa_invert+0x9c>
 73e:	b4 e0       	ldi	r27, 0x04	; 4
 740:	3c d0       	rcall	.+120    	; 0x7ba <__ultoa_invert+0x9c>
 742:	67 0f       	add	r22, r23
 744:	78 1f       	adc	r23, r24
 746:	89 1f       	adc	r24, r25
 748:	9a 1f       	adc	r25, r26
 74a:	a1 1d       	adc	r26, r1
 74c:	68 0f       	add	r22, r24
 74e:	79 1f       	adc	r23, r25
 750:	8a 1f       	adc	r24, r26
 752:	91 1d       	adc	r25, r1
 754:	a1 1d       	adc	r26, r1
 756:	6a 0f       	add	r22, r26
 758:	71 1d       	adc	r23, r1
 75a:	81 1d       	adc	r24, r1
 75c:	91 1d       	adc	r25, r1
 75e:	a1 1d       	adc	r26, r1
 760:	20 d0       	rcall	.+64     	; 0x7a2 <__ultoa_invert+0x84>
 762:	09 f4       	brne	.+2      	; 0x766 <__ultoa_invert+0x48>
 764:	68 94       	set
 766:	3f 91       	pop	r19
 768:	2a e0       	ldi	r18, 0x0A	; 10
 76a:	26 9f       	mul	r18, r22
 76c:	11 24       	eor	r1, r1
 76e:	30 19       	sub	r19, r0
 770:	30 5d       	subi	r19, 0xD0	; 208
 772:	31 93       	st	Z+, r19
 774:	de f6       	brtc	.-74     	; 0x72c <__ultoa_invert+0xe>
 776:	cf 01       	movw	r24, r30
 778:	08 95       	ret
 77a:	46 2f       	mov	r20, r22
 77c:	47 70       	andi	r20, 0x07	; 7
 77e:	40 5d       	subi	r20, 0xD0	; 208
 780:	41 93       	st	Z+, r20
 782:	b3 e0       	ldi	r27, 0x03	; 3
 784:	0f d0       	rcall	.+30     	; 0x7a4 <__ultoa_invert+0x86>
 786:	c9 f7       	brne	.-14     	; 0x77a <__ultoa_invert+0x5c>
 788:	f6 cf       	rjmp	.-20     	; 0x776 <__ultoa_invert+0x58>
 78a:	46 2f       	mov	r20, r22
 78c:	4f 70       	andi	r20, 0x0F	; 15
 78e:	40 5d       	subi	r20, 0xD0	; 208
 790:	4a 33       	cpi	r20, 0x3A	; 58
 792:	18 f0       	brcs	.+6      	; 0x79a <__ultoa_invert+0x7c>
 794:	49 5d       	subi	r20, 0xD9	; 217
 796:	31 fd       	sbrc	r19, 1
 798:	40 52       	subi	r20, 0x20	; 32
 79a:	41 93       	st	Z+, r20
 79c:	02 d0       	rcall	.+4      	; 0x7a2 <__ultoa_invert+0x84>
 79e:	a9 f7       	brne	.-22     	; 0x78a <__ultoa_invert+0x6c>
 7a0:	ea cf       	rjmp	.-44     	; 0x776 <__ultoa_invert+0x58>
 7a2:	b4 e0       	ldi	r27, 0x04	; 4
 7a4:	a6 95       	lsr	r26
 7a6:	97 95       	ror	r25
 7a8:	87 95       	ror	r24
 7aa:	77 95       	ror	r23
 7ac:	67 95       	ror	r22
 7ae:	ba 95       	dec	r27
 7b0:	c9 f7       	brne	.-14     	; 0x7a4 <__ultoa_invert+0x86>
 7b2:	00 97       	sbiw	r24, 0x00	; 0
 7b4:	61 05       	cpc	r22, r1
 7b6:	71 05       	cpc	r23, r1
 7b8:	08 95       	ret
 7ba:	9b 01       	movw	r18, r22
 7bc:	ac 01       	movw	r20, r24
 7be:	0a 2e       	mov	r0, r26
 7c0:	06 94       	lsr	r0
 7c2:	57 95       	ror	r21
 7c4:	47 95       	ror	r20
 7c6:	37 95       	ror	r19
 7c8:	27 95       	ror	r18
 7ca:	ba 95       	dec	r27
 7cc:	c9 f7       	brne	.-14     	; 0x7c0 <__ultoa_invert+0xa2>
 7ce:	62 0f       	add	r22, r18
 7d0:	73 1f       	adc	r23, r19
 7d2:	84 1f       	adc	r24, r20
 7d4:	95 1f       	adc	r25, r21
 7d6:	a0 1d       	adc	r26, r0
 7d8:	08 95       	ret

000007da <__prologue_saves__>:
 7da:	2f 92       	push	r2
 7dc:	3f 92       	push	r3
 7de:	4f 92       	push	r4
 7e0:	5f 92       	push	r5
 7e2:	6f 92       	push	r6
 7e4:	7f 92       	push	r7
 7e6:	8f 92       	push	r8
 7e8:	9f 92       	push	r9
 7ea:	af 92       	push	r10
 7ec:	bf 92       	push	r11
 7ee:	cf 92       	push	r12
 7f0:	df 92       	push	r13
 7f2:	ef 92       	push	r14
 7f4:	ff 92       	push	r15
 7f6:	0f 93       	push	r16
 7f8:	1f 93       	push	r17
 7fa:	cf 93       	push	r28
 7fc:	df 93       	push	r29
 7fe:	cd b7       	in	r28, 0x3d	; 61
 800:	de b7       	in	r29, 0x3e	; 62
 802:	ca 1b       	sub	r28, r26
 804:	db 0b       	sbc	r29, r27
 806:	0f b6       	in	r0, 0x3f	; 63
 808:	f8 94       	cli
 80a:	de bf       	out	0x3e, r29	; 62
 80c:	0f be       	out	0x3f, r0	; 63
 80e:	cd bf       	out	0x3d, r28	; 61
 810:	09 94       	ijmp

00000812 <__epilogue_restores__>:
 812:	2a 88       	ldd	r2, Y+18	; 0x12
 814:	39 88       	ldd	r3, Y+17	; 0x11
 816:	48 88       	ldd	r4, Y+16	; 0x10
 818:	5f 84       	ldd	r5, Y+15	; 0x0f
 81a:	6e 84       	ldd	r6, Y+14	; 0x0e
 81c:	7d 84       	ldd	r7, Y+13	; 0x0d
 81e:	8c 84       	ldd	r8, Y+12	; 0x0c
 820:	9b 84       	ldd	r9, Y+11	; 0x0b
 822:	aa 84       	ldd	r10, Y+10	; 0x0a
 824:	b9 84       	ldd	r11, Y+9	; 0x09
 826:	c8 84       	ldd	r12, Y+8	; 0x08
 828:	df 80       	ldd	r13, Y+7	; 0x07
 82a:	ee 80       	ldd	r14, Y+6	; 0x06
 82c:	fd 80       	ldd	r15, Y+5	; 0x05
 82e:	0c 81       	ldd	r16, Y+4	; 0x04
 830:	1b 81       	ldd	r17, Y+3	; 0x03
 832:	aa 81       	ldd	r26, Y+2	; 0x02
 834:	b9 81       	ldd	r27, Y+1	; 0x01
 836:	ce 0f       	add	r28, r30
 838:	d1 1d       	adc	r29, r1
 83a:	0f b6       	in	r0, 0x3f	; 63
 83c:	f8 94       	cli
 83e:	de bf       	out	0x3e, r29	; 62
 840:	0f be       	out	0x3f, r0	; 63
 842:	cd bf       	out	0x3d, r28	; 61
 844:	ed 01       	movw	r28, r26
 846:	08 95       	ret

00000848 <_exit>:
 848:	f8 94       	cli

0000084a <__stop_program>:
 84a:	ff cf       	rjmp	.-2      	; 0x84a <__stop_program>
